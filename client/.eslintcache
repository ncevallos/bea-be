[{"/Users/anders/dev/Bea/bea-be-2/client/src/index.js":"1","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Navbar.js":"2","/Users/anders/dev/Bea/bea-be-2/client/src/utils/setAuthToken.js":"3","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/config.js":"4","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/PlanMoodHeaderFree.js":"5","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateHeader.js":"6","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/DifferentFoods.js":"7","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/dashboard/RadialGraph.js":"8","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/OverIndulgeSL.js":"9","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/IdentifyTriggers2.js":"10","/Users/anders/dev/Bea/bea-be-2/client/src/reducers/motivateResult.js":"11","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanIcons.js":"12","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateWeekly.js":"13","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/TreeMap.js":"14","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/HowTempted.js":"15","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AfterEatingLength.js":"16","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan2.js":"17","/Users/anders/dev/Bea/bea-be-2/client/src/App.js":"18","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate.js":"19","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Helpcenter.js":"20","/Users/anders/dev/Bea/bea-be-2/client/src/store.js":"21","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Spinner.js":"22","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanHeader.js":"23","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/FoodChoices.js":"24","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanAction.js":"25","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/OverIndulgeBored.js":"26","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/OverIndulgeAnxious.js":"27","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/StartMindfulness.js":"28","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/DifferentChoiceBored.js":"29","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest2.js":"30","/Users/anders/dev/Bea/bea-be-2/client/src/reducers/auth.js":"31","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/SimpleGauge.js":"32","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/ActionProvider.js":"33","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/RecentVideos.js":"34","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanGoodBlock.js":"35","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/OverIndulgeGH.js":"36","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningLength.js":"37","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateYear.js":"38","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/AreaChart.js":"39","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/PlanHeader.js":"40","/Users/anders/dev/Bea/bea-be-2/client/src/reportWebVitals.js":"41","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Sidebar.js":"42","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Termsconditions.js":"43","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/MessageParser.js":"44","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/DifferentChoiceUpset.js":"45","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/DifferentChoiceGH.js":"46","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningIntro.js":"47","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AreyouReady.js":"48","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanBadBlock.js":"49","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/HeatMap.js":"50","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanSmiley.js":"51","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Meditate.js":"52","/Users/anders/dev/Bea/bea-be-2/client/src/actions/postMotivateResults.js":"53","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/Visualization.js":"54","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/InitialEatingFeel.js":"55","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FullnessFeel.js":"56","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/TemptedGauge.js":"57","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/RadialGraph.js":"58","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/TestPlanSubmit.js":"59","/Users/anders/dev/Bea/bea-be-2/client/src/actions/types.js":"60","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/FeaturedVideos.js":"61","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/PlanLineGraph.js":"62","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningIntro2.js":"63","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest3.js":"64","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanIconsDash.js":"65","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Testpage.js":"66","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanMoodHeader.js":"67","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/Options.js":"68","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MotivateAfterOptions.js":"69","/Users/anders/dev/Bea/bea-be-2/client/src/reducers/planResult.js":"70","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/DifferentChoiceStress.js":"71","/Users/anders/dev/Bea/bea-be-2/client/src/reducers/alert.js":"72","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Footer.js":"73","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/ActionProvider.js":"74","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/BarChart.js":"75","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate2.js":"76","/Users/anders/dev/Bea/bea-be-2/client/src/actions/auth.js":"77","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/OverIndulgeStress.js":"78","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/StretchMsgorVoice.js":"79","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateThreeMonth.js":"80","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Privacy.js":"81","/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Login.js":"82","/Users/anders/dev/Bea/bea-be-2/client/src/components/routing/Routes.js":"83","/Users/anders/dev/Bea/bea-be-2/client/src/utils/api.js":"84","/Users/anders/dev/Bea/bea-be-2/client/src/actions/postPlanResults.js":"85","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videodata.js":"86","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/DisplayMotivateResults.js":"87","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/dashboard/MotivateHeader.js":"88","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanMain.js":"89","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Testpopuptwo.js":"90","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateMonth.js":"91","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/InitialEatingLength.js":"92","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FullnessLength.js":"93","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanSubmit.js":"94","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningFeel.js":"95","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/ColumnChart.js":"96","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/config.js":"97","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/HowDoYouFeel.js":"98","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateSections.js":"99","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MotivateAfter.js":"100","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest1.js":"101","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/calendar.js":"102","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/SmallerAmounts.js":"103"},{"size":547,"mtime":1620325297172,"results":"104","hashOfConfig":"105"},{"size":25609,"mtime":1627398081247,"results":"106","hashOfConfig":"105"},{"size":313,"mtime":1620325297174,"results":"107","hashOfConfig":"105"},{"size":7571,"mtime":1626348158480,"results":"108","hashOfConfig":"105"},{"size":1260,"mtime":1626348158481,"results":"109","hashOfConfig":"105"},{"size":7042,"mtime":1627393590841,"results":"110","hashOfConfig":"105"},{"size":1518,"mtime":1623259289770,"results":"111","hashOfConfig":"105"},{"size":1595,"mtime":1629306900992,"results":"112","hashOfConfig":"105"},{"size":1316,"mtime":1630248985051,"results":"113","hashOfConfig":"105"},{"size":2804,"mtime":1630248985050,"results":"114","hashOfConfig":"105"},{"size":2268,"mtime":1629306900997,"results":"115","hashOfConfig":"105"},{"size":2014,"mtime":1627393590842,"results":"116","hashOfConfig":"105"},{"size":6574,"mtime":1630357716671,"results":"117","hashOfConfig":"105"},{"size":2616,"mtime":1630357716672,"results":"118","hashOfConfig":"105"},{"size":2609,"mtime":1629306900989,"results":"119","hashOfConfig":"105"},{"size":2137,"mtime":1623259289769,"results":"120","hashOfConfig":"105"},{"size":2075,"mtime":1630858019303,"results":"121","hashOfConfig":"105"},{"size":3711,"mtime":1630586150742,"results":"122","hashOfConfig":"105"},{"size":1167,"mtime":1627505979526,"results":"123","hashOfConfig":"105"},{"size":333,"mtime":1620325297164,"results":"124","hashOfConfig":"105"},{"size":394,"mtime":1620325297172,"results":"125","hashOfConfig":"105"},{"size":258,"mtime":1620325297166,"results":"126","hashOfConfig":"105"},{"size":4519,"mtime":1629306900995,"results":"127","hashOfConfig":"105"},{"size":2057,"mtime":1620325297163,"results":"128","hashOfConfig":"105"},{"size":1427,"mtime":1623259289771,"results":"129","hashOfConfig":"105"},{"size":1278,"mtime":1630248985050,"results":"130","hashOfConfig":"105"},{"size":1300,"mtime":1630248985050,"results":"131","hashOfConfig":"105"},{"size":524,"mtime":1620325297163,"results":"132","hashOfConfig":"105"},{"size":1291,"mtime":1630248985049,"results":"133","hashOfConfig":"105"},{"size":751,"mtime":1620325297162,"results":"134","hashOfConfig":"105"},{"size":1656,"mtime":1620325297172,"results":"135","hashOfConfig":"105"},{"size":1018,"mtime":1629306900994,"results":"136","hashOfConfig":"105"},{"size":32773,"mtime":1629306900990,"results":"137","hashOfConfig":"105"},{"size":4018,"mtime":1620325297165,"results":"138","hashOfConfig":"105"},{"size":852,"mtime":1620325297164,"results":"139","hashOfConfig":"105"},{"size":1282,"mtime":1630248985051,"results":"140","hashOfConfig":"105"},{"size":2217,"mtime":1623259289770,"results":"141","hashOfConfig":"105"},{"size":5645,"mtime":1630357716672,"results":"142","hashOfConfig":"105"},{"size":4047,"mtime":1630357716670,"results":"143","hashOfConfig":"105"},{"size":4429,"mtime":1629306900991,"results":"144","hashOfConfig":"105"},{"size":362,"mtime":1620325297172,"results":"145","hashOfConfig":"105"},{"size":6951,"mtime":1630879661310,"results":"146","hashOfConfig":"105"},{"size":354,"mtime":1620325297166,"results":"147","hashOfConfig":"105"},{"size":2441,"mtime":1623259289770,"results":"148","hashOfConfig":"105"},{"size":1291,"mtime":1630248985050,"results":"149","hashOfConfig":"105"},{"size":1285,"mtime":1630248985050,"results":"150","hashOfConfig":"105"},{"size":1126,"mtime":1623259289770,"results":"151","hashOfConfig":"105"},{"size":510,"mtime":1620325297162,"results":"152","hashOfConfig":"105"},{"size":1000,"mtime":1623259289771,"results":"153","hashOfConfig":"105"},{"size":1563,"mtime":1630248985052,"results":"154","hashOfConfig":"105"},{"size":1554,"mtime":1627393590843,"results":"155","hashOfConfig":"105"},{"size":2815,"mtime":1630248977863,"results":"156","hashOfConfig":"105"},{"size":6431,"mtime":1629306900987,"results":"157","hashOfConfig":"105"},{"size":516,"mtime":1620325297163,"results":"158","hashOfConfig":"105"},{"size":2146,"mtime":1629306900989,"results":"159","hashOfConfig":"105"},{"size":2099,"mtime":1629306900989,"results":"160","hashOfConfig":"105"},{"size":5514,"mtime":1630357716672,"results":"161","hashOfConfig":"105"},{"size":1850,"mtime":1629306900995,"results":"162","hashOfConfig":"105"},{"size":4089,"mtime":1627234525033,"results":"163","hashOfConfig":"105"},{"size":2098,"mtime":1629306900988,"results":"164","hashOfConfig":"105"},{"size":1044,"mtime":1626367727081,"results":"165","hashOfConfig":"105"},{"size":3051,"mtime":1627393590840,"results":"166","hashOfConfig":"105"},{"size":1132,"mtime":1630248985051,"results":"167","hashOfConfig":"105"},{"size":805,"mtime":1620325297162,"results":"168","hashOfConfig":"105"},{"size":2020,"mtime":1627393590842,"results":"169","hashOfConfig":"105"},{"size":4519,"mtime":1627234525033,"results":"170","hashOfConfig":"105"},{"size":8300,"mtime":1629306900995,"results":"171","hashOfConfig":"105"},{"size":12577,"mtime":1627499101407,"results":"172","hashOfConfig":"105"},{"size":1967,"mtime":1630248985050,"results":"173","hashOfConfig":"105"},{"size":1231,"mtime":1629306900997,"results":"174","hashOfConfig":"105"},{"size":1317,"mtime":1630248985050,"results":"175","hashOfConfig":"105"},{"size":371,"mtime":1620325297172,"results":"176","hashOfConfig":"105"},{"size":1274,"mtime":1620325297164,"results":"177","hashOfConfig":"105"},{"size":34948,"mtime":1630248985049,"results":"178","hashOfConfig":"105"},{"size":1379,"mtime":1630357716671,"results":"179","hashOfConfig":"105"},{"size":6670,"mtime":1629646724094,"results":"180","hashOfConfig":"105"},{"size":1954,"mtime":1623259289768,"results":"181","hashOfConfig":"105"},{"size":1305,"mtime":1630248985051,"results":"182","hashOfConfig":"105"},{"size":1595,"mtime":1630248985051,"results":"183","hashOfConfig":"105"},{"size":6597,"mtime":1630357716671,"results":"184","hashOfConfig":"105"},{"size":330,"mtime":1620325297165,"results":"185","hashOfConfig":"105"},{"size":2663,"mtime":1620325297161,"results":"186","hashOfConfig":"105"},{"size":3289,"mtime":1630248985052,"results":"187","hashOfConfig":"105"},{"size":659,"mtime":1620325297174,"results":"188","hashOfConfig":"105"},{"size":4629,"mtime":1629306900988,"results":"189","hashOfConfig":"105"},{"size":2274,"mtime":1620325297166,"results":"190","hashOfConfig":"105"},{"size":4100,"mtime":1623259289771,"results":"191","hashOfConfig":"105"},{"size":2514,"mtime":1629306900992,"results":"192","hashOfConfig":"105"},{"size":4181,"mtime":1629391908056,"results":"193","hashOfConfig":"105"},{"size":0,"mtime":1620325297166,"results":"194","hashOfConfig":"105"},{"size":6538,"mtime":1630357716671,"results":"195","hashOfConfig":"105"},{"size":2179,"mtime":1623259289769,"results":"196","hashOfConfig":"105"},{"size":2178,"mtime":1623259289769,"results":"197","hashOfConfig":"105"},{"size":4168,"mtime":1626348158480,"results":"198","hashOfConfig":"105"},{"size":2129,"mtime":1629306900989,"results":"199","hashOfConfig":"105"},{"size":3482,"mtime":1630357716671,"results":"200","hashOfConfig":"105"},{"size":8393,"mtime":1630357716670,"results":"201","hashOfConfig":"105"},{"size":1503,"mtime":1629306900990,"results":"202","hashOfConfig":"105"},{"size":5008,"mtime":1629306900993,"results":"203","hashOfConfig":"105"},{"size":512,"mtime":1620325297162,"results":"204","hashOfConfig":"105"},{"size":751,"mtime":1620325297162,"results":"205","hashOfConfig":"105"},{"size":4418,"mtime":1629306900995,"results":"206","hashOfConfig":"105"},{"size":982,"mtime":1620325297164,"results":"207","hashOfConfig":"105"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},"138ny1l",{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"221"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"268"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"268"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"227"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"297"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"263"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"238"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"259"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"263"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"233"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"221"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"221"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"278"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"221"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"297"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"217"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"297"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anders/dev/Bea/bea-be-2/client/src/index.js",[],["451","452"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Navbar.js",["453","454","455","456"],"import React, { useEffect, useState } from 'react';\nimport logo from '../../img/logo.svg';\nimport Popup from 'reactjs-popup';\nimport wave from '../../img/dashboard-navbarwave.jpg';\nimport meditateIconLarge from '../../img/meditate-icon-large.svg';\nimport { Link, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst NavBar = ({auth: {isAuthenticated, loading }, logout}) => {\n\n    const [bgcolor, setBGColor] = useState(\"#2898ec\");\n    const location = useLocation();\n  \n    //a background color is defined depending on the pathname and then below\n    //the navbar's background is defined to the bgColor that is defined here\n    useEffect(() => {\n      if (location.pathname.startsWith('/Plan')) {\n        setBGColor(\"#329CCC\");\n      } else if (location.pathname.startsWith('/Motivate2')) {\n        setBGColor(\"#E56F06\");\n      } else if (location.pathname.startsWith('/Motivate')) {\n        setBGColor(\"#AD79E2\");\n      } else if (location.pathname.startsWith('/Meditate')) {\n        setBGColor(\"#8037CA\");\n      } else if (location.pathname === '/') {\n        setBGColor(\"#329CCC\");\n      }  else if (location.pathname === '/Dashboard') {\n        setBGColor(\"#329CCC\");\n      } else {\n        setBGColor(\"2898ec\");\n      }\n    }, [location]);\n    const authLinks = (\n        <Popup trigger={<button className=\"bg-indigo-700 flex text-sm rounded-full text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-700 focus:ring-white\" id=\"user-menu\" aria-haspopup=\"true\">\n        <span className=\"sr-only\">Open user menu</span>\n        <svg width=\"20px\" height=\"4px\" viewBox=\"0 0 20 4\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"Designs-for-Development\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <g id=\"Meditate-Landing-(Paid-Member---recent)\" transform=\"translate(-1383.000000, -31.000000)\">\n                    <path d=\"M0,-1 L1440,-1 L1440,66 C1174.88262,66 1016.78219,66 965.698713,66 C889.073495,66 870.259441,23.70292 816,23.70292 C761.740559,23.70292 748.575215,66 653.741049,66 C590.518272,66 372.271256,66 -1,66 L0,-1 Z\" id=\"header\" fill=\"#AD79E2\"></path>\n                    <g id=\"more\" transform=\"translate(1383.000000, 31.000000)\" fill=\"#FFFFFF\">\n                        <circle id=\"Oval\" cx=\"2\" cy=\"2\" r=\"2\"></circle>\n                        <circle id=\"Oval-Copy\" cx=\"10\" cy=\"2\" r=\"2\"></circle>\n                        <circle id=\"Oval-Copy-2\" cx=\"18\" cy=\"2\" r=\"2\"></circle>\n                    </g>\n                </g>\n            </g>\n        </svg>\n\n\n        </button>} position=\"bottom right\">\n        <div className=\"px-2 pt-2 pb-3\">\n            <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-white bg-indigo-800\">Dashboard</Link>\n            <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Support</Link>\n        </div>\n        <div className=\"pt-4 pb-3 border-t border-indigo-800\">\n            <div className=\"px-2\">\n            <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Your Profile</Link>\n            <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Settings</Link>\n            {/* <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Sign out</Link> */}\n            <a onClick={logout} href='#!' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Sign Out</a>\n            </div>\n        </div>\n        </Popup>\n        );\n        const guestLinks = (\n            <Popup trigger={<button className=\"bg-indigo-700 flex text-sm rounded-full text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-700 focus:ring-white\" id=\"user-menu\" aria-haspopup=\"true\">\n            <span className=\"sr-only\">Open user menu</span>\n            <svg width=\"20px\" height=\"4px\" viewBox=\"0 0 20 4\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g id=\"Designs-for-Development\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <g id=\"Meditate-Landing-(Paid-Member---recent)\" transform=\"translate(-1383.000000, -31.000000)\">\n                        <path d=\"M0,-1 L1440,-1 L1440,66 C1174.88262,66 1016.78219,66 965.698713,66 C889.073495,66 870.259441,23.70292 816,23.70292 C761.740559,23.70292 748.575215,66 653.741049,66 C590.518272,66 372.271256,66 -1,66 L0,-1 Z\" id=\"header\" fill=\"#AD79E2\"></path>\n                        <g id=\"more\" transform=\"translate(1383.000000, 31.000000)\" fill=\"#FFFFFF\">\n                            <circle id=\"Oval\" cx=\"2\" cy=\"2\" r=\"2\"></circle>\n                            <circle id=\"Oval-Copy\" cx=\"10\" cy=\"2\" r=\"2\"></circle>\n                            <circle id=\"Oval-Copy-2\" cx=\"18\" cy=\"2\" r=\"2\"></circle>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n    \n    \n            </button>} position=\"bottom right\">\n            <div className=\"px-2 pt-2 pb-3\">\n                <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-white bg-indigo-800\">Dashboard</Link>\n                <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Support</Link>\n                <Link to='/login' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Log In</Link>\n                <Link to='/register' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Sign Up</Link>\n            </div>\n            </Popup>\n            );\n    return ( \n        <nav className=\"fixed w-screen top-0 flex-shrink-0 backdrop-blur bg-opacity-60 z-40 px-6 \" style={{backgroundColor:bgcolor}} >\n        {/* <nav className=\"fixed w-screen top-0 flex-shrink-0 bg-beaPurpleCorrected backdrop-blur bg-opacity-60 z-40 px-6 {bgcolor}\" style={{backgroundColor:bgcolor}}> */}\n        <div className=\"max-w-full mx-auto px-2 sm:px-4 lg:px-8\">\n        <div className=\"relative flex items-center justify-between h-16\">\n\n            <div className=\"flex items-center mr-9\">\n            <div className=\"flex-shrink-0lg:px-0\">\n                <img className=\"h-6 w-auto\" src={logo} alt=\"Workflow\" />\n            </div>\n            </div>\n\n            <div className=\"flex xl:hidden\">\n            <Popup trigger={<button className=\"inline-flex items-center justify-center p-2 rounded-md text-white hover:text-white hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-600 focus:ring-white\" aria-expanded=\"false\">\n                <span className=\"sr-only\">Open main menu</span>\n\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path></svg>\n\n                <svg className=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n\n            </button>} position=\"bottom right\">\n                {/* below here goes code for mobile menu  */}\n                <div className=\"fixed overflow-scroll top-15 -mt-0.5 left-0 w-full h-full py-1 border-t-4 border-beaDarkPurple divide-y divide-beaBorderGrey bg-gray-50 backdrop-blur bg-opacity-60\">\n                    <div className=\"space-y-2 py-2\">\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5 hover:no-underline\" role=\"menuitem\">Help Center</Link>\n                    </div>\n                    <div className=\"space-y-2 py-2\">\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5 hover:no-underline\" role=\"menuitem\">Account Details</Link>\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Manage Subscription</Link>\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Notifications</Link>\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">My Data</Link>\n                    </div>\n                    <div className=\"space-y-2 py-2\">\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5 hover:no-underline\" role=\"menuitem\">About Us</Link>\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Bea Blog</Link>\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Contact Us</Link>\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Privacy Policy</Link>\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Terms &amp; Conditions</Link>\n                    </div>\n                    <div className=\"space-y-2 py-2\">\n                        <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Sign Out</Link>\n                    </div>\n                    <div className=\"space-y-2 py-2\">\n                        <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                            <svg class=\"w-4 mr-1.5\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Facebook icon</title><path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/></svg>\n                            Facebook\n                        </Link>\n                        <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                            <svg class=\"w-4 mr-1.5\" role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Instagram icon</title><path d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z\"/></svg>\n                            Instagram\n                        </Link>\n                        <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                            <svg class=\"w-4 mr-1.5\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Twitter icon</title><path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/></svg>\n                            Twitter\n                        </Link>\n                        <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                            <svg class=\"w-4 mr-1.5\" role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pinterest icon</title><path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.162-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.401.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.354-.629-2.758-1.379l-.749 2.848c-.269 1.045-1.004 2.352-1.498 3.146 1.123.345 2.306.535 3.55.535 6.607 0 11.985-5.365 11.985-11.987C23.97 5.39 18.592.026 11.985.026L12.017 0z\"/></svg>\n                            Pinterest\n                        </Link>\n                    </div>\n                </div>\n                    </Popup>\n\n            </div>\n\n            <div className=\"hidden xl:block\">\n            <div className=\"flex items-center justify-end\">\n                <div className=\"flex\">\n                <Link to='/' className=\"px-8 py-2 rounded-md text-sm font-bold tracking-wide text-white hover:text-white\">Help Center</Link>\n                <Popup trigger={<div className=\"px-8 py-2 text-sm font-bold tracking-wide text-white hover:text-white cursor-pointer select-none\"> Settings</div>} position=\"bottom center\">\n                    <div className=\"origin-top-right fixed right-4 -mt-1 w-48 py-1 border-t-4 border-beaDarkPurple ring-inset ring-1 ring-beaBorderGrey divide-y divide-beaBorderGrey bg-gray-50 backdrop-blur bg-opacity-60\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\n                        <div>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5 hover:no-underline\" role=\"menuitem\">How Bea Works</Link>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">About the Bea Team</Link>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Bea Chatter</Link>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Contact Us</Link>\n                        </div>\n                        <div>\n                            <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                                <svg className=\"w-4 mr-1.5\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Facebook icon</title><path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/></svg>\n                                Facebook\n                            </Link>\n                            <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                                <svg className=\"w-4 mr-1.5\" role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Instagram icon</title><path d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z\"/></svg>\n                                Instagram\n                            </Link>\n                            <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                                <svg className=\"w-4 mr-1.5\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Twitter icon</title><path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/></svg>\n                                Twitter\n                            </Link>\n                            <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                                <svg className=\"w-4 mr-1.5\" role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pinterest icon</title><path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.162-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.401.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.354-.629-2.758-1.379l-.749 2.848c-.269 1.045-1.004 2.352-1.498 3.146 1.123.345 2.306.535 3.55.535 6.607 0 11.985-5.365 11.985-11.987C23.97 5.39 18.592.026 11.985.026L12.017 0z\"/></svg>\n                                Pinterest\n                            </Link>\n                        </div>\n                    </div> \n                </Popup>\n                </div>\n\n\n                <div className=\"ml-4 relative flex-shrink-0\">\n                <div>\n                    <Popup trigger={<button className=\"flex text-sm rounded-full text-white focus:outline-none\" id=\"user-menu\" aria-haspopup=\"true\">\n                    <span className=\"sr-only\">Open user menu</span>\n                    <div className=\"flex items-center h-6 bg-transparent\">\n                        <svg className=\"bg-transparent\" width=\"20px\" height=\"4px\" viewBox=\"0 0 20 4\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <g id=\"Designs-for-Development\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                                <g id=\"Meditate-Landing-(Paid-Member---recent)\" transform=\"translate(-1383.000000, -31.000000)\">\n                                    <path d=\"M0,-1 L1440,-1 L1440,66 C1174.88262,66 1016.78219,66 965.698713,66 C889.073495,66 870.259441,23.70292 816,23.70292 C761.740559,23.70292 748.575215,66 653.741049,66 C590.518272,66 372.271256,66 -1,66 L0,-1 Z\" id=\"header\"></path>\n                                    <g id=\"more\" transform=\"translate(1383.000000, 31.000000)\" fill=\"#FFFFFF\">\n                                        <circle id=\"Oval\" cx=\"2\" cy=\"2\" r=\"2\"></circle>\n                                        <circle id=\"Oval-Copy\" cx=\"10\" cy=\"2\" r=\"2\"></circle>\n                                        <circle id=\"Oval-Copy-2\" cx=\"18\" cy=\"2\" r=\"2\"></circle>\n                                    </g>\n                                </g>\n                            </g>\n                        </svg>\n                    </div>\n\n\n                    </button>} position=\"bottom right\">\n\n                    <div className=\"origin-top-right fixed right-4 mt-0.5 w-48 py-1 border-t-4 border-beaDarkPurple ring-inset ring-1 ring-beaBorderGrey divide-y divide-beaBorderGrey bg-gray-50 backdrop-blur bg-opacity-60\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\n                        <div>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5 hover:no-underline\" role=\"menuitem\">Dashboard</Link>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Support</Link>\n                        </div>\n                        <div>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5 hover:no-underline\" role=\"menuitem\">Your Profile</Link>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Settings</Link>\n                            <a onClick={logout} href=\"#!\"k to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Sign Out</a>\n                        </div>\n                    </div> \n                    </Popup>\n                </div>\n\n                </div>\n            </div>\n            </div> \n        </div>\n        </div>\n\n{/* \n        <div className=\"hidden lg:hidden\">\n        <div className=\"px-2 pt-2 pb-3\">\n            <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-white bg-indigo-800\">Dashboard</Link>\n            <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Support</Link>\n        </div>\n        <div className=\"pt-4 pb-3 border-t border-indigo-800\">\n            <div className=\"px-2\">\n            <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Your Profile</Link>\n            <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Settings</Link>\n            <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Sign out</Link>\n            </div>\n        </div>\n</div> */}\n        </nav>\n \n    )\n}\n\nNavBar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n  };\n  \nconst mapStateToProps = (state) => ({\n    auth: state.auth\n  });\n\nexport default connect(mapStateToProps, {logout})(NavBar);",["457","458"],"/Users/anders/dev/Bea/bea-be-2/client/src/utils/setAuthToken.js",[],["459","460"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/config.js",["461","462"],"import React, { useState }  from 'react'\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport reflection from '../../../img/plan-reflection.png';\nimport HowDoYouFeel from './HowDoYouFeel';\nimport PlanGoodBlock from './PlanGoodBlock';\nimport PlanBadBlock from './PlanBadBlock';\nimport PlanAction from './PlanAction';\nimport SmallerAmounts from './SmallerAmounts';\nimport SmallerPortions from './SmallerPortions';\nimport EmotionalBehavioral from './EmotionalBehavioral';\nimport DifferentFoods from './DifferentFoods';\nimport PlanGoal from './PlanGoal';\nimport LessSugar from './LessSugar';\nimport FoodChoices from './FoodChoices';\nimport PlanSubmit from './PlanSubmit';\n// import SomethingElse from './SomethingElse';\nimport {\n    WelcomeBlock1,\n    WelcomeBlock2,\n    WelcomeBlock3,\n    StopFull,\n    StopFull2,\n    MoreFilling,\n    MoreFilling2,\n    LessFat,\n    LessFat2,\n    AvoidSugar,\n    AvoidSugar2,\n    SweetFoods,\n    SweetFoods2,\n    FewerCarbs,\n    FewerCarbs2,\n    FewerCalories,\n    FewerCalories2,\n    SomethingElse,\n    TakeAction,\n    EndActivity } from \"./Options\";\n\nconst botName = \"Bea\";\n// const randomnumber = () =>{\n//     //random number generate for the random response blocks\n//     const min = 1;\n//     const max = 4;\n//     let rand = min + Math.random() * (max - min);\n//     console.log(\"random number produces equals\", rand);\n//     rand = Math.round(rand);\n//     console.log(\"random number now contains\", rand);\n//     return rand;\n// }\nconst config = {\n    botName: botName,\n    // Defines an object of custom components that will replace the stock chatbot components. \n    customComponents: {\n       // Replaces the default header\n    //   header: () => <div style={{ backgroundColor: 'red', padding: \"5px\", borderRadius: \"3px\" }}>This is the header</div>,\n    //   // Replaces the default bot avatar\n    //   botAvatar: (props) => <FlightBotAvatar {...props} />,\n    //   // Replaces the default bot chat message container\n    //   botChatMessage: (props) => <CustomChatMessage {...props} />,\n    //   // Replaces the default user icon\n    //   userAvatar: (props) => <MyUserAvatar {...props} />,\n    //   // Replaces the default user chat message\n    //   userChatMessage: (props) => <MyUserChatMessage {...props} />\n    },\n    customStyles: {\n        botMessageBox: {\n        backgroundColor: \"#329CCC\",\n        },\n        chatButton: {\n        backgroundColor: \"#329CCC\",\n        },\n        },\n    initialMessages: [createChatBotMessage(`Great! Let’s make a new Plan for the day!`), \n    createChatBotMessage(\n        <img src={reflection} alt=\"Workflow\" title=\"Workflow\" style={{width: \"250px\"}} />, {\n        delay: 2000,\n    }),\n    createChatBotMessage(`This isn't a 'diet plan', but a way for us to reflect before making some general goals together.`, {\n        delay: 4000,\n    }),\n    createChatBotMessage(`This Activity will involve chatting with me for the next 7 minutes.`, {\n        delay: 6000,\n    }),\n    createChatBotMessage(`Are you ready to start?`, {\n        // widget: \"optionsblock1\",\n        widget: \"welcomeblock1\",\n        delay: 8000,\n    }),\n],\n\nstate: {\n    waitingformsgflag: false,\n    lastblockvisited: \"\",\n    howdoyoufeel: \"\",\n    howdoyoufeelint: \"\",\n    planjournal: \"\",\n    stayedontrack: \"\",\n    planbadblock: \"\",\n    what2change: \"\",\n    influencedeating: \"\",\n    whathappened: \"\",\n    somethingelsebad: \"\",\n    plangoal: \"\",\n    plangoal2: \"\",\n    plangoal3: \"\",\n    plangoal4: \"\",\n    plangoal5: \"\"\n    // randomnum: randomnumber()\n},\nwidgets: [\n    {\n        widgetName: \"howdoyoufeel\",\n       widgetFunc: (props) => <HowDoYouFeel {...props} />,\n       mapStateToProps: [\"waitingformsgflag\", \"lastblockvisited\",\"howdoyoufeel\",\"howdoyoufeelint\",\"planjournal\",\"stayedontrack\",\"planbadblock\", \n       \"what2change\", \"influencedeating\", \"whathappened\", \"somethingelsebad\", \"plangoal\", \"plangoal2\", \"plangoal3\", \"plangoal4\", \"plangoal5\"]\n    },\n    {\n        widgetName: \"welcomeblock1\",\n       widgetFunc: (props) => <WelcomeBlock1 {...props} />,\n    },\n    {\n        widgetName: \"welcomeblock2\",\n       widgetFunc: (props) => <WelcomeBlock2 {...props} />,\n    },\n    {\n        widgetName: \"welcomeblock3\",\n       widgetFunc: (props) => <WelcomeBlock3 {...props} />,\n    },\n    {\n        widgetName: \"plangoodblock\",\n       widgetFunc: (props) => <PlanGoodBlock {...props} />,\n    },\n    {\n        widgetName: \"planbadblock\",\n       widgetFunc: (props) => <PlanBadBlock {...props} />,\n    },\n    {\n        widgetName: \"plangoal\",\n       widgetFunc: (props) => <PlanGoal {...props} />,\n    },\n    // {\n    //     widgetName: \"plangoal2\",\n    //    widgetFunc: (props) => <PlanGoal2 {...props} />,\n    // },\n    {\n        widgetName: \"smallerportions\",\n       widgetFunc: (props) => <SmallerPortions {...props} />,\n    },\n    {\n        widgetName: \"smalleramounts\",\n       widgetFunc: (props) => <SmallerAmounts {...props} />,\n    },\n    {\n        widgetName: \"differentfoods\",\n       widgetFunc: (props) => <DifferentFoods {...props} />,\n    },\n    {\n        widgetName: \"emotionalbehavioral\",\n       widgetFunc: (props) => <EmotionalBehavioral {...props} />,\n    },\n    {\n        widgetName: \"stopfull\",\n       widgetFunc: (props) => <StopFull {...props} />,\n    },\n    {\n        widgetName: \"stopfull2\",\n       widgetFunc: (props) => <StopFull2 {...props} />,\n    },\n    {\n        widgetName: \"morefilling\",\n       widgetFunc: (props) => <MoreFilling {...props} />,\n    },\n    {\n        widgetName: \"morefilling2\",\n       widgetFunc: (props) => <MoreFilling2 {...props} />,\n    },\n    {\n        widgetName: \"foodchoices\",\n       widgetFunc: (props) => <FoodChoices {...props} />,\n    },\n    {\n        widgetName: \"lessfat\",\n       widgetFunc: (props) => <LessFat {...props} />,\n    },\n    {\n        widgetName: \"lessfat2\",\n       widgetFunc: (props) => <LessFat2 {...props} />,\n    },\n    {\n        widgetName: \"lesssugar\",\n       widgetFunc: (props) => <LessSugar {...props} />,\n    },\n    {\n        widgetName: \"avoidsugar\",\n       widgetFunc: (props) => <AvoidSugar {...props} />,\n    },\n    {\n        widgetName: \"avoidsugar2\",\n       widgetFunc: (props) => <AvoidSugar2 {...props} />,\n    },\n    {\n        widgetName: \"sweetfoods\",\n       widgetFunc: (props) => <SweetFoods {...props} />,\n    },\n    {\n        widgetName: \"sweetfoods2\",\n       widgetFunc: (props) => <SweetFoods2 {...props} />,\n    },\n    {\n        widgetName: \"fewercarbs\",\n       widgetFunc: (props) => <FewerCarbs {...props} />,\n    },\n    {\n        widgetName: \"fewercarbs2\",\n       widgetFunc: (props) => <FewerCarbs2 {...props} />,\n    },\n    {\n        widgetName: \"fewercalories\",\n       widgetFunc: (props) => <FewerCalories {...props} />,\n    },\n    {\n        widgetName: \"fewercalories2\",\n       widgetFunc: (props) => <FewerCalories2 {...props} />,\n    },\n    {\n        widgetName: \"somethingelse\",\n       widgetFunc: (props) => <SomethingElse {...props} />,\n    },\n    {\n        widgetName: \"takeaction\",\n       widgetFunc: (props) => <PlanAction {...props} />,\n    },\n    {\n        widgetName: \"endactivity\",\n       widgetFunc: (props) => <EndActivity {...props} />,\n    },\n    {\n        widgetName: \"plansubmit\",\n       widgetFunc: (props) => <PlanSubmit {...props} />,\n       mapStateToProps: [\"waitingformsgflag\", \"lastblockvisited\",\"howdoyoufeel\",\"howdoyoufeelint\",\"planjournal\",\"stayedontrack\",\"planbadblock\", \n       \"what2change\", \"influencedeating\", \"whathappened\", \"somethingelsebad\", \"plangoal\", \"plangoal2\", \"plangoal3\", \"plangoal4\", \"plangoal5\"]\n    },\n]\n  }\n  \n  export default config\n",["463","464"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/PlanMoodHeaderFree.js",["465","466","467","468","469"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateHeader.js",["470","471","472"],"import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getMotivResultsByIdToday } from '../../../actions/postMotivateResults';\nimport planIllustration from '../../../img/plan-illustration.svg';\nimport arrowRight from '../../../img/arrow-right.svg';\nimport PlanIconsDash from '../plan/PlanIconsDash';\nimport { Link } from 'react-router-dom';\nimport appleIcon from '../../../img/apple-icon.svg';\nimport calendarIcon from '../../../img/calendar-icon.svg';\nimport hungryIcon from '../../../img/hungry-icon.svg';\n\n\n//class MotivateHeader extends React.Component {\n    const MotivateHeader = ({ user, getMotivResultsByIdToday, todayMotivateResult: { todayMotivateResults } }) => {\n        useEffect(() => {\n            getMotivResultsByIdToday(user._id);\n        }, [getMotivResultsByIdToday, user._id]);\n        console.log(\"motivate header has\", todayMotivateResults );\n    \n//   render() {\n    let tempcheck = true;\n        let motivateHeader = \"\";\n    //    console.log(\"plan header props has\", this.props.results)\n      if(todayMotivateResults.plan2eat){\n  \n        motivateHeader = \n\n            <div className=\"flex flex-row w-full justify-between\">\n                <div className=\"flex\">\n                    <div className=\"flex flex-col w-48\">\n                        <div className=\"flex w-16 h-16 bg-gray-100 bg-opacity-50 rounded-3xl mb-2.5 items-center\">\n                        <img className=\"w-1/2 flex-shrink-0 mx-auto\" src={appleIcon} alt=\"\" />\n                        </div>\n                        <div className=\"\">\n                            <h4 className=\"text-sm leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                            Your urge to eat in a way that isn’t ideal for you right now\n                            </h4>\n                            <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                            {todayMotivateResults.temptedlevel} tempting\n                            </h5>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex w-48\">\n                    <div className=\"flex flex-col\">\n                        <div className=\"flex w-16 h-16 bg-gray-100 bg-opacity-50 rounded-3xl mb-2.5 items-center\">\n                        <img className=\"w-1/2 flex-shrink-0 mx-auto\" src={calendarIcon} alt=\"\" />\n                        </div>\n                        <div className=\"\">\n                            <h4 className=\"text-sm leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                            You planned to eat\n                            </h4>\n                            <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                            {todayMotivateResults.plan2eat}\n                            </h5>\n                        </div>\n                    </div>                            \n                </div>\n                <div className=\"flex w-48\">\n                    <div className=\"flex flex-col\">\n                        <div className=\"flex w-16 h-16 bg-gray-100 bg-opacity-50 rounded-3xl mb-2.5 items-center\">\n                        <img className=\"w-1/2 flex-shrink-0 mx-auto\" src={hungryIcon} alt=\"\" />\n                        </div>\n                        <div className=\"\">\n                            <h4 className=\"text-sm leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                            The reason why you chose the planned food\n                            </h4>\n                            <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                            {todayMotivateResults.whyhungry}\n                            </h5> \n                        </div>\n                    </div>                            \n                </div>\n            </div>\n      }\n      else {\n        motivateHeader = \n\n            <div className=\"flex flex-row w-full justify-between\">\n                <div className=\"flex\">\n                    <div className=\"flex flex-col w-48\">\n                        <div className=\"\">\n                            <h4 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                            It looks like you didn't create a plan for today.\n                            </h4>\n                            <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                            Chat with Bea now\n                            </h5>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex w-48 justify-end pr-10\">\n                    \n                <Link to='/Motivate'>\n                    <img src={arrowRight} alt=\"arrow right\" className=\"w-24\" /></Link>\n                </div>\n            </div>\n            \n    //       <div className=\"flex flex-row w-full justify-between\">\n    //       <div className=\"flex\">\n    //           <div className=\"flex flex-col w-96\">\n    //               <div className=\"\">\n    //                   <h4 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n    //                       It looks like you didn't create a plan for today.\n    //                   </h4>\n    //                   <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n    //                   Chat with Bea now\n    //                   </h5>\n    //               </div>\n    //           </div>\n    //       </div>\n    //       <div className=\"flex w-48 justify-end pr-10\">\n              \n    //       <Link to='/PlanDaily'>\n    //           <img src={arrowRight} alt=\"arrow right\" className=\"w-24\" /></Link>\n    //       </div>\n    //   </div>\n      }\n    return (\n        <div style={{ backgroundImage: \"linear-gradient(to right, rgba(109, 80, 139, 1), rgba(173, 121, 226, 1), rgba(177, 208, 244, 1))\" }} className=\"flex rounded-xl mb-3 bg-contain bg-no-repeat bg-right-bottom flex flex-col p-6\">\n        <div className=\"mb-4\">\n            <h3 className=\"text-sm leading-6 font-medium text-white uppercase font-black tracking-widest mb-1\">\n            Your motivate summary today\n            </h3>                        \n        </div>\n        {motivateHeader}\n\n        </div>\n\n\n    )\n  }\n//}\n\nMotivateHeader.propTypes = {\n    getMotivResultsByIdToday: PropTypes.func.isRequired,\n    motivateResult: PropTypes.object.isRequired,\n    todayMotivateResult: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = (state) => ({\n    motivateResult: state.motivateResult,\n    todayMotivateResult: state.motivateResult,\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n  });\n  \n  export default connect(mapStateToProps, { getMotivResultsByIdToday })(MotivateHeader);\n\n\n// export default MotivateHeader;",["473","474"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/DifferentFoods.js",[],["475","476"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/dashboard/RadialGraph.js",[],["477","478"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/OverIndulgeSL.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/IdentifyTriggers2.js",[],["479","480"],"/Users/anders/dev/Bea/bea-be-2/client/src/reducers/motivateResult.js",["481"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanIcons.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateWeekly.js",["482","483","484"],"\nimport React, { useEffect, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getResultsByIdOneWeek } from '../../../actions/postMotivateResults';\nimport * as d3 from \"d3\";\nimport GaugeChart from 'react-gauge-chart';\nimport Spinner from '../../layout/Spinner';\nimport TreeMap from './TreeMap';\nimport SimpleGauge from './SimpleGauge';\nimport BarChart from './BarChart';\nimport AreaChart from './AreaChart';\nimport HeatMap from './HeatMap';\nimport ColumnChart from './ColumnChart';\nimport TemptedGauge from './TemptedGauge';\n\nconst MotivateWeekly = ({ user, getResultsByIdOneWeek, motivateResult: { summaryMotivateResults1wk } }) => {\n\n\n  useEffect(() => {\n    getResultsByIdOneWeek(user._id, 7);\n  }, [getResultsByIdOneWeek, user._id]);\n   console.log(\"motivate weekly has\", summaryMotivateResults1wk );\n  let motivateBodyResults = \"\";\n  if(summaryMotivateResults1wk.summaryStats){\n  \n    motivateBodyResults = \n    <Fragment>\n    {summaryMotivateResults1wk === null ? (\n      <Spinner />\n    ) : (\n      <Fragment>\n        <section>\n          {/* <div className=\"flex mx-auto p-4\">\n              <div className=\"flex flex-col flex-grow\"> */}\n                  <div className=\"border border-gray-200 rounded-xl p-10 my-4\">\n                    <TemptedGauge avgTemptationLvl={summaryMotivateResults1wk.summaryStats.avgTemptationLvl}/>\n                    {/* <div className=\"w-96 items-center\">\n                        <GaugeChart id=\"gauge-chart3\"\n                            nrOfLevels={2} \n                            colors={[\"#FFAD33\", \"#ECEFF1\"]} \n                            arcsLength={[0.37, 0.63]}\n                            arcWidth={0.45} \n                            percent={0.80} \n                            arcPadding={0}\n                            cornerRadius={0}\n                            textColor={\"#000000\"}\n                            needleColor={\"#58585E\"}\n                            needleBaseColor={\"#CFD8DC\"}\n                            formatTextValue={value => 'Very tempted'}\n                            hideText={true}\n                            />\n                            <p className=\"text-xl\">tempted</p>\n                            <p>to eat in a way not ideal</p>\n                        </div> */}\n                    <div className=\"w-48\">\n\n                        <ColumnChart level={summaryMotivateResults1wk.summaryStats.temptedlevel} dates={summaryMotivateResults1wk.summaryStats.temptedDates}/>\n            \n                      </div>\n                    <div className=\"w-full bg-beaOrange p-2 rounded-full flex items-center justify-between\">\n                        <div className=\"bg-gray-50 bg-opacity-50 uppercase font-bold text-beaOrange py-3 px-4 text-xl rounded-full\">BEA's Tips</div>\n                        <div className=\"m-3 text-lg text-white\">Oh no! It looks like you’re in the beginning stages of getting off track. Bea has some tips to make sure you don’t derail.</div>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n                        </svg>\n                    </div>\n                  </div> \n                  <div className=\"flex flex-grow w-full\">\n                    <div className=\"w-full border border-gray-200 rounded-xl p-10 mr-2\">\n                        <div className=\"text-beaDarkBlue uppercase text-center font-bold\">Visualizations: Triggers</div>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">Favorite food you planned to eat next</h2>\n                        <TreeMap data={summaryMotivateResults1wk.plan2eat}/>\n                        <p>(below is the data to be graphed)</p><br/>\n                      {/* {summaryMotivateResults1wk.planned2eat.map((item, index) => (\n                        <p key={index}>{item} - (one entry)</p>\n                    ))} */}\n                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">Reason why you chose the foods</span><br/>\n                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">{summaryMotivateResults1wk.summaryStats.whyHungry}</h2>\n                    <SimpleGauge />\n                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">If you overindulged, you felt</span><br/>\n                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">{summaryMotivateResults1wk.summaryStats.overindulgeresult}</h2>\n                    <SimpleGauge />\n                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">If you made a different choice, you felt</span><br/>\n                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">{summaryMotivateResults1wk.summaryStats.differentChoice}</h2>\n                    </div>\n                    <div className=\"w-full border border-gray-200 rounded-xl p-10 ml-2\">\n                        <div className=\"text-beaDarkBlue uppercase text-center font-bold\">Visualizations: Evaluating Mood</div>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">Favorite food you planned to eat next</h2>\n                        <TreeMap  data={summaryMotivateResults1wk.plan2eat}/>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">How you usually felt during each eating phase</h2>\n                        <AreaChart data={summaryMotivateResults1wk.summaryStats.phaseFeel}/>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">How long you thought each eating phase lasted</h2>\n                        <BarChart data={summaryMotivateResults1wk.summaryStats.lengthFeel}/>\n                    </div>\n                  </div>\n              {/* </div>\n            </div> */}\n          </section>\n      </Fragment>\n    )}\n  </Fragment>\n\n  }\n  else {\n    motivateBodyResults = \n        <Fragment><div>Loading</div></Fragment>\n\n  }\n  \n    return (\n\n      <Fragment>\n        {motivateBodyResults}\n    \n      </Fragment>\n\n\n    )}\n\n\n\nMotivateWeekly.propTypes = {\n  getResultsByIdOneWeek: PropTypes.func.isRequired,\n  motivateResult: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  motivateResult: state.motivateResult,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, { getResultsByIdOneWeek })(MotivateWeekly);",["485","486"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/TreeMap.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/HowTempted.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AfterEatingLength.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan2.js",["487","488"],"import React from 'react'\nimport Chatbot from 'react-chatbot-kit';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ActionProvider from '../chatbots/plan/ActionProvider';\nimport MessageParser from '../chatbots/plan/MessageParser';\nimport config from '../chatbots/plan/config';\n\n\nexport const Plan2 = ({user}) =>  {\n        console.log(\"USer level contains\", user.userlevel);\n        console.log(\"USer contains\", user);\n        if (user.userlevel === 1){\n            console.log(\"Paid User\");\n        }\n        if(user.userlevel === 0){\n            console.log(\"Free User\");\n        }\n        const levelone = (\n            //Should print if userlevel is 0 - only checks to see if user variable exists not which level it is\n            //this should print if free but changed for demo\n            // <div><h1>YOU ARE A FREE USER</h1></div>\n            <div><h1>YOU ARE A PAID USER</h1></div>\n        );\n        const leveltwo = (\n            //Should print if userlevel is 1 \n            //this should print if free but changed for demo\n            // <div><h1>YOU ARE A PAID USER</h1></div>            \n            <div><h1>YOU ARE NOT LOGGED IN</h1></div>\n        );\n        return (\n                    <div className=\"block w-full h-full\">\n                        <div className=\"fixed left-52 top-16     bottom-0 right-0\">\n                        <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                        {/* { (<div>{ user ? levelone : leveltwo }</div>)} */}\n                        </nav>\n\n                        <Chatbot config={config} actionProvider={ActionProvider}  messageParser={MessageParser} userid={user._id} className=\"h-full\" />\n                        {/* <button class=\"circle-div\">HI</button> */}\n                        </div>\n                    </div>\n\n    )\n}\n\nPlan2.propTypes = {\n    user: PropTypes.object.isRequired\n    // userlevel: PropTypes.number.isRequired\n  };\n  \nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n  });\n\nexport default connect(mapStateToProps)(Plan2);","/Users/anders/dev/Bea/bea-be-2/client/src/App.js",["489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, useLocation, withRouter } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Sidebar from './components/layout/Sidebar';\nimport Footer from './components/layout/Footer';\nimport Dashboard from './components/layout/Dashboard';\nimport Meditate from './components/layout/Meditate';\nimport Motivate from './components/layout/Motivate';\nimport Motivate2 from './components/layout/Motivate2';\nimport Plan from './components/layout/Plan';\nimport Plan2 from './components/layout/Plan2';\nimport TestPlanSubmit from './components/layout/TestPlanSubmit';\nimport Helpcenter from './components/layout/Helpcenter';\nimport Settings from './components/layout/Settings';\nimport Termsconditions from './components/layout/Termsconditions';\nimport Privacy from './components/layout/Privacy';\nimport Alert from './components/layout/Alert';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport Register from './components/auth/Register';\nimport CalendarPage from './components/layout/CalendarPage';\nimport Routes from './components/routing/Routes';\nimport { LOGOUT } from './actions/types';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\nconst App = () => {\n  useEffect(() => {\n    // check for token in LS\n\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    store.dispatch(loadUser());\n\n    // log user out from all tabs if they log out in one tab\n    window.addEventListener('storage', () => {\n      if (!localStorage.token) store.dispatch({ type: LOGOUT });\n    });\n  }, []);\n\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n        <Sidebar/>\n        <section >\n      <div className=\"flex-grow w-full mx-auto lg:px-0 flex\">\n      <div className=\"flex-1 min-w-0 lg:flex\">\n      <div className=\"bg-white lg:min-w-0 lg:flex-1 z-20 lg:ml-52 mt-16 min-h-screen -mb-16\">\n              \n\n        <div className=\"flex h-full w-full justify-center\">\n        <div className=\"mb-2 w-full max-w-7xl h-full\">\n          <Alert />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route component={Routes} />\n            {/* <Route exact path='/dashboard' component={Dashboard} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/meditate\" component={Meditate} />\n            <Route exact path=\"/motivate\" component={Motivate} />\n            <Route exact path=\"/calendarpage\" component={CalendarPage} />\n            <Route exact path=\"/plan\" component={Plan} onClick={() => setColor(\"#2898ec\")} />\n            <Route exact path=\"/plan2\" component={Plan2} />\n            <Route exact path=\"/testplansubmit\" component={TestPlanSubmit} />\n            <Route exact path=\"/privacy\" component={Privacy} />\n            <Route exact path=\"/termsconditions\" component={Termsconditions} />\n            <Route exact path=\"/helpcenter\" component={Helpcenter} />\n            <Route exact path=\"/settings\" component={Settings} />\n            <Route exact path=\"/register\" component={Register} /> */}\n          </Switch>\n          </div>\n              </div>\n              \n          </div>\n          </div>\n          </div>\n      </section>\n        <Footer/>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\n\nexport default App;",["506","507"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate.js",["508","509","510"],"import React from 'react'\nimport { Component } from 'react';\nimport Testpopuptwo from \"./Testpopuptwo\"; \nimport Videomodal from './Videomodal';\nimport Videoselection from './Videoselection';\nimport Chatbot from 'react-chatbot-kit'\n\n\nimport ActionProvider from '../chatbots/motivate/ActionProvider';\nimport MessageParser from '../chatbots/motivate/MessageParser';\nimport config from '../chatbots/motivate/config';\n\nclass Motivate extends Component {\n    state = {\n        show: false\n      };\n      showModal = e => {\n        this.setState({\n          show: !this.state.show\n        });\n      };\n      onClose = e => {\n        this.props.onClose && this.props.onClose(e);\n      };\n    render() {\n    return (\n\n                    <div className=\"block m-2\">\n                        <div>\n                        <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                            \n                            <Chatbot config={config} actionProvider={ActionProvider} \t    messageParser={MessageParser} />\n                      \n                        </nav>\n                        </div>\n                    </div>\n    )}\n}\n\nexport default Motivate;",["511","512"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Helpcenter.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/store.js",[],["513","514"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Spinner.js",["515"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanHeader.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/FoodChoices.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanAction.js",[],["516","517"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/OverIndulgeBored.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/OverIndulgeAnxious.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/StartMindfulness.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/DifferentChoiceBored.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest2.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/reducers/auth.js",["518"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  //LOGIN_FAIL,\n  LOGOUT,\n  // ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n      case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n      case AUTH_ERROR:\n      case REGISTER_FAIL:\n      case LOGIN_FAIL:\n      case LOGOUT:\n        localStorage.removeItem('token');\n        return {\n          ...state,\n          // ...payload,\n          token: null,\n          isAuthenticated: false,\n          loading: false\n        };\n    // case LOGIN_SUCCESS:\n    //   return {\n    //     ...state,\n    //     ...payload,\n    //     isAuthenticated: true,\n    //     loading: false\n    //   };\n    // case ACCOUNT_DELETED:\n    //   return {\n    //     ...state,\n    //     token: null,\n    //     isAuthenticated: false,\n    //     loading: false,\n    //     user: null\n    //   };\n    // case AUTH_ERROR:\n    // case LOGOUT:\n      // return {\n      //   ...state,\n      //   token: null,\n      //   isAuthenticated: false,\n      //   loading: false,\n      //   user: null\n      // };\n    default:\n      return state;\n  }\n}\n","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/SimpleGauge.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/ActionProvider.js",["519"],"import React from 'react'\nimport {Link} from 'react-router-dom';\n\n// ActionProvider starter code\nclass ActionProvider {\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n      this.createChatBotMessage = createChatBotMessage;\n      this.setState = setStateFunc;\n      this.createClientMessage = createClientMessage;\n\n    }\n    randomnumber(){\n        //random number generator for the random response blocks\n        const min = 1;\n        const max = 4;\n        let rand = min + Math.random() * (max - min);\n        console.log(\"random number produces equals\", rand);\n        rand = Math.floor(rand);\n        console.log(\"random number now contains\", rand);    \n        return (rand-1);\n    }\n    greet() {\n        const greetingMessage = this.createChatBotMessage(\"Hello friend\");\n        this.updateChatbotState(greetingMessage)\n    }\n    welcomeblock1 = () => {\n        //A random number is produced in this first black that will run for the whole entirity\n        // this.randomnumber();\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great! 👍`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`For this Activity, we will first Reflect on your past eating.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Next, we will decide upon a main Goal for the day and find ways to help you reach that Goal.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Finally, we will decide upon an Action to take if the urge to overindulge arises.`, {\n            delay: 8000,\n            widget: \"welcomeblock2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    welcomeblock2 = () => {\n        const randnum = this.randomnumber();\n        const randnum2 = this.randomnumber();\n        console.log(\"We should now be able to see global randnum\", randnum);\n        const randblock = [\"Welcome back!\",\n         \"I'm glad you’re ready to create a new Plan for the day!\", \n         \"Welcome back! You've been doing great so far.\"]\n         const randblock2 = [\"Let’s jump right in and come up with a new Plan for today.\",\n          \"Let’s begin by Reflecting briefly on your past before moving forward.\", \n          \"Let's create a new Plan and see where we can do some fine tuning.\"]\n        const letsBeginMessage = \n        [this.createChatBotMessage(randblock[randnum], {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(randblock2[randnum2], {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`To get started, how do you feel about what you ate in the past day?`, {\n            delay: 6000,\n            widget: \"howdoyoufeel\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    plangood = () => {\n        const randnum = this.randomnumber();\n        const randblock = [\"Doesn't it feel great to know that you stayed on track?\",\n         \"Nothing is as (ful)filling as staying on track!\", \"Doesn't it feel great to know that you stayed on track?\"]\n        const letsBeginMessage = \n        [this.createChatBotMessage(`I'm happy to hear that!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(randblock[randnum], {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`What do you think helped you stay on track?`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`This can be something emotional like feeling positive or something physical such starting the day with a filling meal.`, {\n            delay: 8000,\n            widget: \"plangoodblock\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    plangoodjournal = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Can you tell me more about what helped you stay on track?`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`You can type a brief response below:`, {\n            delay: 4000,\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    plangoodjournal2 = (message) => {\n        console.log(\"Message sent over to good journal is\", message);\n        this.setState((state) => ({\n            ...state,\n            planjournal: message,\n            lastblockvisited: \"Plan Good Journal\",\n            waitingformsgflag: false\n          }));\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Thanks! `, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`😁`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`I’ll save your entry in your Plan Journal so you can look back on it later.`, {\n            delay: 6000,\n            widget: \"plangoal\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    planbad = () => {\n        const randnum = this.randomnumber();\n        const randnum2 = this.randomnumber();\n        const randblock = [\"It's not about staying on the horse... PICTURE\",\n         \"But let's focus on moving forward.\", \n         \"The goal isn't to be perfect, but to identify patterns and make gradual changes if you aren’t 100 percent happy with your eating right now.\"]\n         const randblock2 = [\"It's about making sure you get back up after you fall!\",\n          \"The more we beat ourselves up, the more likely we are to repeat the same cycle.\", \n          \"Change takes time, but you can do this!\"]\n        const letsBeginMessage = \n        [this.createChatBotMessage(`I'm sorry to hear that. 😞`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(randblock[randnum], {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(randblock2[randnum2], {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Let’s briefly discuss and then find ways to make sure you are happier tomorrow. `, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`If you were to do it differently, which of the options below would you choose?`, {\n            delay: 10000,\n            widget: \"planbadblock\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n\n    smalleramounts = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`How much less would have been ideal?`, {\n            delay: 2000,\n            widget: \"smalleramounts\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n\n    differentfoods = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`If you were to do it differently, what would you have changed about the foods that you chose?`, {\n            delay: 4000,\n            widget: \"differentfoods\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n\n    planbadjournal = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Can you tell me a little bit more about what happened?`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`You can type a brief response below:`, {\n            delay: 4000,\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    planbadjournal2 = (message) => {\n        this.setState((state) => ({\n            ...state,\n            planjournal: message,\n            lastblockvisited: \"Plan Bad Journal\",\n            waitingformsgflag: false\n          }));\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Thanks for letting me know!`, {\n                delay: 2000,\n            }),\n            this.createChatBotMessage(`I’ll save your entry in your Plan Journal so you can look back and identify patterns.`, {\n                delay: 4000,\n            }),\n            this.createChatBotMessage(`Now that we’ve Reflected upon the past, let’s focus on moving forward.`, {\n                delay: 7000,\n            }),\n            this.createChatBotMessage(`In general, what feels like the most important Goal for you to have today?`, {\n                delay: 9000,\n                widget: \"plangoal\",\n            })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n\n    emotionalbehavioral = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Can you think of anything that happened recently that might have influenced your eating?`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This can be something emotional like feeling sad after a conflict with a loved one, or something physical such as skipping breakfast.`, {\n            delay: 4000,\n            widget: \"emotionalbehavioral\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n\n    plangoal = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Now that we’ve Reflected upon the past, let’s focus on moving forward.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`In general, what feels like the most important Goal for you to have today?`, {\n            delay: 4000,\n            widget: \"plangoal\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    smallerportions = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great! I can help you find ways to eat smaller amounts.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Would you prefer to stop eating when you’re full, or to choose foods that are more filling so you aren't as hungry?`, {\n            delay: 4000,\n            widget: \"smallerportions\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    stopfull = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`I know - it can be hard to stop when it tastes so good!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Sometimes we get confused by cravings and emotions and we forget to listen to our bodies.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Luckily, I've found an article that can help you learn to listen to your body again.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(<a href='https://www.mottchildren.org/health-library/zx3292' style={{color: \"white\"}} target=\"_blank\" rel=\"noreferrer\">Read Article</a>, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`When you’re ready, let me know and we can continue.`, {\n            delay: 10000,\n            widget: \"stopfull2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    stopfull2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Remember, your main Goal for today is to stop eating when you’re full.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Imagine how good that will feel in your body at the end of the day.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can expand on this same Goal or choose a new one.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`When you’re ready, we can move on to the Action you will take if you get a craving that doesn’t align with your Goal.`, {\n            delay: 8000,\n            widget: \"smallerportions\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    morefilling = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`That's always a great choice!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`😎`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Research shows that when we choose more filling foods, we’re less likely to overeat.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Luckily, I've located a great article that can help you find more filling foods.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(\n            <a href='https://www.healthline.com/nutrition/15-incredibly-filling-foods' style={{color: \"white\"}} target=\"_blank\" rel=\"noreferrer\">15 Filling Foods</a>, {\n            // `15 Filling Foods`\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re done reading and we can continue.`, {\n            delay: 12000,\n            widget: \"morefilling\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    morefilling2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Remember, your main Goal for today is to choose more filling foods.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Think about what kind of filling foods you would enjoy.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Imagine how good it will feel to make these healthy choices.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can continue to work on choosing more filling foods, or we can create a new Goal for the day.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready to come up with an Action to take if the urge to overindulge strikes.`, {\n            delay: 10000,\n            widget: \"morefilling2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    lessfat = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Why do fattening foods taste so good?`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`I know, you thought I was asking a rhetorical question . . . 😉`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`But there's actually a good reason!`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(<a href='https://www.psychologytoday.com/us/blog/your-brain-food/201201/why-does-fat-taste-so-good' style={{color: \"white\"}} target=\"_blank\" rel=\"noreferrer\">Why Fat Tastes So Good </a>, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`This article tells us that we can’t trick our bodies.`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`But we can choose less fattening foods that still taste great!`, {\n            delay: 12000,\n        }),\n        this.createChatBotMessage(`Here’s an article that can give you some ideas for foods that taste good and are healthy!`, {\n            delay: 14000,\n        }),\n        this.createChatBotMessage(<a href='https://www.healthline.com/nutrition/15-health-foods-that-taste-better-than-junk-foods#section10' style={{color: \"white\"}} target=\"_blank\" rel=\"noreferrer\">15 Healthy Foods </a>, {\n            delay: 16000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready and we can continue.`, {\n            delay: 18000,\n            widget: \"lessfat\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    lessfat2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Take some time now to reflect on your Goal of eating less fat today.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Hopefully the articles gave you some good ideas!`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can come back to eating less fattening foods, or choose a different goal for the day.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready and we can move on to your Action for today.`, {\n            delay: 8000,\n            widget: \"lessfat2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    lesssugar = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`I know it can be tough to cut down on sugar if you have a sweet tooth, but it's a great Goal for today! 😊`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Would you prefer to avoid sugar altogether, or to find healthy foods that taste sweet but are low in sugar?`, {\n            delay: 4000,\n            widget: \"lesssugar\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    avoidsugar = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Avoiding sugar altogether can be tough!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`But . . .`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`If sugar sets you off on a bad cycle, it's a great temporary goal to get you out of the habit of eating sweets.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`I've found an article that can help you transform your sugar addiction.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(<a href='https://www.healthline.com/nutrition/15-incredibly-filling-foods' style={{color: \"white\"}} target=\"_blank\" rel=\"noreferrer\">Sugar Addiction Tips</a>, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`When you’re done reading, let me know and we can continue.`, {\n            delay: 12000,\n            widget: \"avoidsugar\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    avoidsugar2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Now that you’ve chosen avoiding sugar as your main Goal, take a moment to imagine feeling peaceful and whole without it.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can choose again to avoid sugar, or try a different Goal for the day.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready to move on to your Action for today.`, {\n            delay: 6000,\n            widget: \"avoidsugar2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    foodchoices = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Our food choices don't need to be perfect, but it's great to start out with a general plan.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`What would you like to be the main focus of your food choices for today?`, {\n            delay: 4000,\n            widget: \"foodchoices\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    sweetfoods = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great choice! 😀`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`If you’re craving sugar, I always think it's helpful to find an alternative so you don't feel deprived.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Here’s an article that will help you find sweet snacks under 50 calories.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(<a href='https://www.bhg.com/recipes/healthy/snacks/20-sweet-snacks-for-50-calories-or-less/' style={{color: \"white\"}} target=\"_blank\" rel=\"noreferrer\">Find Sweet Snacks</a>, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re done reading and we can continue.`, {\n            delay: 10000,\n            widget: \"sweetfoods\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    sweetfoods2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Take a moment to think about what foods you’d like to eat today that taste sweet but don't have a lot of sugar.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Eating some of these foods instead of sugary foods is your main Goal for today.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can expand on this same Goal, or choose a new one for the day.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Next, we’ll make an Action plan for what to do if the urge strikes. Let me know when you’re ready to move on.`, {\n            delay: 8000,\n            widget: \"sweetfoods2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    fewercarbs = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Remember, no foods are bad, including carbohydrates.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`However, if you find that you don’t feel great when you eat too many carbs, then gradually cutting back is a great Goal!`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`So let's find some foods that make you feel better than indulging in those high in carbohydrates.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Here is a great article of great low-carb substitutes for your favorite full-carb foods!`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(<a href='https://www.verywellfit.com/low-carb-substitutes-for-high-carb-food-2242524' style={{color: \"white\"}} target=\"_blank\" rel=\"noreferrer\">Low Carb Foods</a>, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`When you’re ready, let me know and we can continue.`, {\n            delay: 12000,\n            widget: \"fewercarbs\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    fewercarbs2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Take a moment to think about which foods will taste great and make you feel great too!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Although your Goal is to eat fewer carbs, the best way to accomplish this is Goal is to focus on the foods you ‘want’ to eat, and not the foods that you don’t.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can come back to this or make a new Goal for the day.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Let me know when you are ready to move on to your Action for today.`, {\n            delay: 8000,\n            widget: \"fewercarbs2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    fewercalories = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great! Let's take a more specific look at how much less you should aim to eat.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Many people try to cut out too much, but then they fall off track and overindulge.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Instead, I recommend making small, incremental changes so you’ll be more likely to stay on track.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`This interactive article will help you find out how many calories you should consume based on your current weight.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(<a href='https://www.healthline.com/nutrition/how-many-calories-per-day' style={{color: \"white\"}} target=\"_blank\" rel=\"noreferrer\">Calorie Calculator</a>, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`When you’re ready, let me know and we can continue.`, {\n            delay: 12000,\n            widget: \"fewercalories\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    fewercalories2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`After reading this article, take a moment to think about how you’ll accomplish your Goal of eating fewer calories, and how good that will feel.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`I don't suggest counting calories unless that's something you already do.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Instead, I recommend being mindful of your intake in general.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can come back to this or make a new Goal for the day.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Let me know when you are ready to move on to your Action for today.`, {\n            delay: 10000,\n            widget: \"fewercalories2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    somethingelsefoods = () => {\n        const letsBeginMessage = \n        [\n        this.createChatBotMessage(`Please write briefly below how you would have liked it to be different:`, {\n            delay: 2000,\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n\n    somethingelsefoods2 = (message) => {\n        this.setState((state) => ({\n            ...state,\n            somethingelsebad: message,\n            lastblockvisited: \"Something Else Foods\"\n          }));\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Can you think of anything that happened recently that might have influenced your eating?`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This can be something emotional like feeling sad after a conflict with a loved one, or something physical such as skipping breakfast.`, {\n            delay: 4000,\n            widget: \"emotionalbehavioral\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n\n    somethingelse = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great! It sounds like you have something else in mind, so let's work on it together.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`What would you like to be your goal for today?`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`You can type briefly below:`, {\n            delay: 6000,\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    somethingelse2 = (message) => {\n        this.setState((state) => ({\n            ...state,\n            plangoal3: message,\n            lastblockvisited: \"Something Else\"\n          }));\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Thank you for sharing! Let's work on making this Goal a reality.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`First, take a moment to visualize how nice it would feel to accomplish this Goal.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Next, take a moment to think about what you need to do differently today to accomplish this Goal.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`What is it that you need to do differently? You can type briefly below:`, {\n            delay: 8000,\n        }),];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    somethingelse3 = (message) => {\n        this.setState((state) => ({\n            ...state,\n            plangoal4: message,\n            lastblockvisited: \"Something Else\",\n            waitingformsgflag: false\n          }));\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Okay! Make sure to do what you need to do to reach that Goal.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can attempt this Goal again, or choose a new one.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready and we can move on to your Action for today.`, {\n            delay: 6000,\n            widget: \"somethingelse\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    takeaction = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Let's decide on your Action for today.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This Action will help you quiet your mind if you feel the urge to overindulge.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Research shows that when there’s no real need for food, cravings tend to last just a few minutes.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Distracting yourself with something positive can calm that craving.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`If you feel that urge arising, which Action appeals the most to you today?`, {\n            delay: 10000,\n            widget: \"takeaction\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    afteraction = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great choice! If you feel tempted to eat in a way that is not healthy for you, go ahead and take that Action.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`You might be feeling better already!`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`So now we’ve Reflected upon your past eating, created a Goal for the day, and decided on the Action to take to quiet your cravings.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`What would you like to do next?`, {\n            delay: 8000,\n            widget: \"plansubmit\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    nofoulwords() {\n        const nofoulwordsMessage = \n        [this.createChatBotMessage(`I can tell by what you just wrote that you are upset, and that is of course okay.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Sometimes our language is a genuine expression of how we feel.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`For these meditations, I have included metaphors and analogies to help you listen to your body and think about food differently.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`That being said, I work best when you just press buttons.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Please scroll up to the last place you could make a selection in order to continue.`, {\n            delay: 10000,\n        })];\n        // this.updateChatbotState(nofoulwordsMessage)\n        this.addMessageToBotState(nofoulwordsMessage)\n    }\n    emergency() {\n        const emergencyMessage = \n        [this.createChatBotMessage(`Oh no! I'm so sorry to hear that you’re feeling so badly.`), \n        this.createChatBotMessage(`Please know that however down you feel, you are never alone.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Call the National Suicide Prevention Lifeline at 1-800-273-8255 to get help.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`If your need is more urgent, PLEASE call 911 right away or go to your nearest emergency room.`, {\n            delay: 6000,\n        })];\n        // this.updateChatbotState(emergencyMessage)\n        this.addMessageToBotState(emergencyMessage)\n    }\n    findtherapist() {\n        const therapyMessage = \n        [this.createChatBotMessage(`I'm glad you’re ready to take that step!`), \n        this.createChatBotMessage(`I've located a number of therapists in your area that specialize in issues with food and eating.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Please press below and I will redirect you.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`And if I can still be of help, we can continue at any time!`, {\n            delay: 6000,\n        })];\n        this.addMessageToBotState(therapyMessage)\n        // this.createChatBotMessage(\"I'm glad you’re ready to take that step!\");\n        // this.updateChatbotState(therapyMessage)\n    }\n    updateChatbotState(message) {\n \n        // NOTE: This function is set in the constructor, and is passed in      \n        // from the top level Chatbot component. The setState function here     \n        // actually manipulates the top level state of the Chatbot, so it's     \n        // important that we make sure that we preserve the previous state.\n         \n            \n           this.setState(prevState => ({\n                ...prevState, messages: [...prevState.messages, message]\n            }))\n          }\n    addMessageToBotState = (messages) => {\n            if (Array.isArray(messages)) {\n              this.setState((prevState) => ({\n                ...prevState,\n                messages: [...prevState.messages, ...messages],\n              }));\n            } else {\n              this.setState((prevState) => ({\n                ...prevState,\n                messages: [...prevState.messages, messages],\n              }));\n            }\n          };\n  }\n  \n  export default ActionProvider;\n",["520","521"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/RecentVideos.js",["522","523","524"],"\nimport React from 'react'\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport peskyPatterns from '../../img/pesky-patterns.svg';\nimport Videoselection from './Videoselection';\nimport clouds from '../../img/meditateimgs/clouds.png';\nimport cracklingfire from '../../img/meditateimgs/cracklingfire.png';\nimport lazyafternoon from '../../img/meditateimgs/lazyafternoon.png';\nimport monks from '../../img/meditateimgs/monks.png';\nimport moonlight from '../../img/meditateimgs/moonlight.png';\nimport mountainstream from '../../img/meditateimgs/mountainstream.png';\nimport orangegrove from '../../img/meditateimgs/orangegrove.png';\nimport sailboat from '../../img/meditateimgs/sailboat.png';\nimport twowomen from '../../img/meditateimgs/two-women.png';\nimport woods from '../../img/meditateimgs/woods.png';\n\n\nclass RecentVideos extends Component {\n    state = {\n        videolist: [\n            {id: \"1\", title: 'Clouds', length: '5 minutes', img: clouds, imgalt: \"Clouds\"},\n            {id: \"2\", title: 'Monks', length: '7 minutes', img: monks, imgalt: \"Monks\"},\n            {id: \"3\", title: 'Woods', length: '3 minutes', img: woods, imgalt: \"Woods\"},\n            {id: \"4\", title: 'Moonlight', length: '3 minutes', img: moonlight, imgalt: \"Moonlight\"},\n            {id: \"5\", title: 'Lazy Afternoon', length: '3 minutes', img: lazyafternoon, imgalt: \"Lazy Afternoon\"},\n            {id: \"6\", title: 'Crackling Fire', length: '3 minutes', img: cracklingfire, imgalt: \"Crackling Fire\"},\n            {id: \"7\", title: 'Sailboat', length: '5 minutes', img: sailboat, imgalt: \"Sailboat\"},\n            {id: \"8\", title: 'Two Women', length: '7 minutes', img: twowomen, imgalt: \"Two Women\"},\n            {id: \"9\", title: 'Orange Grove', length: '7 minutes', img: orangegrove, imgalt: \"Orange Grove\"}\n        ]\n    }\n    render() {\n    return (\n\n            \n            <ul className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 mr-4 gap-4 w-full\">\n                <Videoselection id={this.state.videolist[0].id} title={this.state.videolist[0].title} length={this.state.videolist[0].length} img={this.state.videolist[0].img} imgalt={this.state.videolist[0].imgalt}/>\n                <Videoselection id={this.state.videolist[8].id} title={this.state.videolist[8].title} length={this.state.videolist[8].length} img={this.state.videolist[8].img} imgalt={this.state.videolist[8].imgalt}  />\n                <Videoselection id={this.state.videolist[1].id} title={this.state.videolist[1].title} length={this.state.videolist[1].length} img={this.state.videolist[1].img} imgalt={this.state.videolist[1].imgalt}  />\n                <Videoselection id={this.state.videolist[7].id} title={this.state.videolist[7].title} length={this.state.videolist[7].length} img={this.state.videolist[7].img} imgalt={this.state.videolist[7].imgalt}  />\n                <Videoselection id={this.state.videolist[2].id} title={this.state.videolist[2].title} length={this.state.videolist[2].length} img={this.state.videolist[2].img} imgalt={this.state.videolist[2].imgalt}  />\n                <Videoselection id={this.state.videolist[6].id} title={this.state.videolist[6].title} length={this.state.videolist[6].length} img={this.state.videolist[6].img} imgalt={this.state.videolist[6].imgalt}  />\n                <Videoselection id={this.state.videolist[3].id} title={this.state.videolist[3].title} length={this.state.videolist[3].length} img={this.state.videolist[3].img} imgalt={this.state.videolist[3].imgalt}  />\n                <Videoselection id={this.state.videolist[5].id} title={this.state.videolist[5].title} length={this.state.videolist[5].length} img={this.state.videolist[5].img} imgalt={this.state.videolist[5].imgalt}  />\n                <Videoselection id={this.state.videolist[4].id} title={this.state.videolist[4].title} length={this.state.videolist[4].length} img={this.state.videolist[4].img} imgalt={this.state.videolist[4].imgalt} />\n            </ul>\n\n\n    )}\n}\n\nexport default RecentVideos;","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanGoodBlock.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/OverIndulgeGH.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningLength.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateYear.js",["525","526","527"],"\nimport React, { useEffect, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getResultsByIdOneYear } from '../../../actions/postMotivateResults';\nimport * as d3 from \"d3\";\nimport GaugeChart from 'react-gauge-chart';\nimport Spinner from '../../layout/Spinner';\nimport TreeMap from './TreeMap';\nimport SimpleGauge from './SimpleGauge';\nimport BarChart from './BarChart';\nimport AreaChart from './AreaChart';\nimport HeatMap from './HeatMap';\nimport ColumnChart from './ColumnChart';\nimport TemptedGauge from './TemptedGauge';\n\nconst MotivateYear = ({ user, getResultsByIdOneYear, motivateResult: { summaryMotivateResults1y } }) => {\n\n\n  useEffect(() => {\n    getResultsByIdOneYear(user._id, 365);\n  }, [getResultsByIdOneYear, user._id]);\n  // console.log(\"motivate weekly has\", summaryMotivateResults1y );\n  let motivateBodyResults = \"\";\n  if(summaryMotivateResults1y.summaryStats){\n  \n    motivateBodyResults = \n    <Fragment>\n    {summaryMotivateResults1y === null ? (\n      <Spinner />\n    ) : (\n      <Fragment>\n        <section>\n          {/* <div className=\"flex mx-auto p-4\">\n              <div className=\"flex flex-col flex-grow\"> */}\n                  <div className=\"border border-gray-200 rounded-xl p-10 my-4\">\n                    <TemptedGauge avgTemptationLvl={summaryMotivateResults1y.summaryStats.avgTemptationLvl}/>\n                    <div className=\"w-48\">\n\n                        <ColumnChart level={summaryMotivateResults1y.summaryStats.temptedlevel} dates={summaryMotivateResults1y.summaryStats.temptedDates}/>\n            \n                      </div>\n                    <div className=\"w-full bg-beaOrange p-2 rounded-full flex items-center justify-between\">\n                        <div className=\"bg-gray-50 bg-opacity-50 uppercase font-bold text-beaOrange py-3 px-4 text-xl rounded-full\">BEA's Tips</div>\n                        <div className=\"m-3 text-lg text-white\">Oh no! It looks like you’re in the beginning stages of getting off track. Bea has some tips to make sure you don’t derail.</div>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n                        </svg>\n                    </div>\n                  </div> \n                  <div className=\"flex flex-grow w-full\">\n                    <div className=\"w-full border border-gray-200 rounded-xl p-10 mr-2\">\n                        <div className=\"text-beaDarkBlue uppercase text-center font-bold\">Visualizations: Triggers</div>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">Favorite food you planned to eat next</h2>\n                        <TreeMap data={summaryMotivateResults1y.plan2eat}/>\n                        <p>(below is the data to be graphed)</p><br/>\n                      {/* {summaryMotivateResults1y.planned2eat.map((item, index) => (\n                        <p key={index}>{item} - (one entry)</p>\n                    ))} */}\n                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">Reason why you chose the foods</span><br/>\n                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">{summaryMotivateResults1y.summaryStats.whyHungry}</h2>\n                    <SimpleGauge />\n                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">If you overindulged, you felt</span><br/>\n                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">{summaryMotivateResults1y.summaryStats.overindulgeresult}</h2>\n                    <SimpleGauge />\n                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">If you made a different choice, you felt</span><br/>\n                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">{summaryMotivateResults1y.summaryStats.differentChoice}</h2>\n                    </div>\n                    <div className=\"w-full border border-gray-200 rounded-xl p-10 ml-2\">\n                        <div className=\"text-beaDarkBlue uppercase text-center font-bold\">Visualizations: Evaluating Mood</div>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">Favorite food you planned to eat next</h2>\n                        <TreeMap  data={summaryMotivateResults1y.plan2eat}/>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">How you usually felt during each eating phase</h2>\n                        <AreaChart data={summaryMotivateResults1y.summaryStats.phaseFeel}/>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">How long you thought each eating phase lasted</h2>\n                        <BarChart data={summaryMotivateResults1y.summaryStats.lengthFeel}/>\n                    </div>\n                  </div>\n              {/* </div>\n            </div> */}\n          </section>\n      </Fragment>\n    )}\n  </Fragment>\n\n  }\n  else {\n    motivateBodyResults = \n        <Fragment><div>Loading</div></Fragment>\n\n  }\n  \n    return (\n\n      <Fragment>\n        {motivateBodyResults}\n    \n      </Fragment>\n\n\n    )}\n\n\n\nMotivateYear.propTypes = {\n  getResultsByIdOneYear: PropTypes.func.isRequired,\n  motivateResult: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  motivateResult: state.motivateResult,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, { getResultsByIdOneYear })(MotivateYear);","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/AreaChart.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/PlanHeader.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/reportWebVitals.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Sidebar.js",["528","529","530"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Termsconditions.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/MessageParser.js",["531"],"import React from \"react\";\n\n// MessageParser starter code\nclass MessageParser {\n    constructor(actionProvider, state) {\n      this.actionProvider = actionProvider;\n      this.state = state;\n    }\n\n    parse(message) {\n      console.log(message)\n      console.log(\"State contains\", this.state)\n      console.log(\"State flag contains\", this.state.waitingformsgflag)\n      const lowerCaseMessage = message.toLowerCase()\n      if(this.state.waitingformsgflag){\n        console.log(\"flag was true\");\n        if(this.state.lastblockvisited === \"Plan Good Block\"){\n          this.actionProvider.plangoodjournal2(message)\n        }\n        if(this.state.lastblockvisited === \"Emotional Behavioral\"){\n          this.actionProvider.planbadjournal2(message)\n        }\n        if(this.state.lastblockvisited === \"Food Choices\"){\n          this.actionProvider.somethingelse2(message)\n        }\n        if(this.state.lastblockvisited === \"Different Foods\"){\n          this.actionProvider.emotionalbehavioral(message)\n        }\n        if(this.state.lastblockvisited === \"Something Else\"){\n          this.actionProvider.somethingelse3(message)\n        }\n      }\n      else {\n      if (lowerCaseMessage.includes(\"shit\") || lowerCaseMessage.includes(\"fuck\") || lowerCaseMessage.includes(\"pussy\") || lowerCaseMessage.includes(\"dick\") || lowerCaseMessage.includes(\"asshole\") || lowerCaseMessage.includes(\"bitch\") || lowerCaseMessage.includes(\"fucker\") || lowerCaseMessage.includes(\"cunt\")) {\n        this.actionProvider.nofoulwords()\n      }\n      else if (lowerCaseMessage.includes(\"die\") || lowerCaseMessage.includes(\"suicide\") || lowerCaseMessage.includes(\"harm\") || lowerCaseMessage.includes(\"kill\") || lowerCaseMessage.includes(\"death\") || lowerCaseMessage.includes(\"dying\") || lowerCaseMessage.includes(\"cut\") || lowerCaseMessage.includes(\"hurt myself\")) {\n        this.actionProvider.emergency()\n      }\n      else if (lowerCaseMessage.includes(\"therapy\") || lowerCaseMessage.includes(\"therapist\") || lowerCaseMessage.includes(\"psychologist\") || lowerCaseMessage.includes(\"psychotherapist\")) {\n        this.actionProvider.findtherapist()\n      }            \n      else if (lowerCaseMessage.includes(\"hello\") || lowerCaseMessage.includes(\"hi\") || lowerCaseMessage.includes(\"bea\")) {\n        this.actionProvider.greet()\n      }     \n      else {\n          this.actionProvider.dontunderstand()\n      }\n    }\n  }\n    \n  }\n  \n  export default MessageParser;","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/DifferentChoiceUpset.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/DifferentChoiceGH.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningIntro.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AreyouReady.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanBadBlock.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/HeatMap.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanSmiley.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Meditate.js",["532","533","534"],"import React from 'react'\nimport mountainStream from '../../img/mountain-stream.svg';\nimport MeditateVidSection from './MeditateVidSection';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\nexport const Meditate = () => {\n\n    return (\n        <section>\n            <div className=\"flex-grow w-full mx-auto lg:px-0 flex\">\n            <div className=\"flex-1 min-w-0 lg:flex\">\n            <div className=\"bg-white lg:min-w-0 lg:flex-1 z-20 ml-0 mt-16\">\n\n                <div className=\"flex md:flex justify-center mt-0\">\n                <div className=\"flex flex-col min-w-0 items-center mt-0\">\n\n                </div>\n                </div>\n\n                <div className=\"flex items-center px-4 border-b border-gray-200 sm:px-6 md:h-80 py-8 bg-gradient-to-t from-beaBlue to-white\">\n                <div className=\"md:pl-10 h-full w-full flex md:flex-row flex-col-reverse items-center\">\n                    <div className=\"flex flex-col lg:ml-4 ml-0 mt-2 md:w-5/12 w-full items-center md:items-start \">\n                    <div className=\"flex flex-col mb-6 items-center mt-5 md:mt-0 md:items-start\">\n                        <h3 className=\"text-sm leading-6 font-medium text-beaTextLightGrey uppercase font-black tracking-widest mb-1\">\n                        Your Meditation Today\n                        </h3>\n                        <h2 className=\"text-3xl leading-6 text-beaTextGrey font-light mb-1\">\n                        Mountain Stream\n                        </h2>\n                        <h4 className=\"text-beaTextGrey font-light\">\n                        3 minutes\n                        </h4>\n                    </div>\n                    <button type=\"button\" className=\"relative group text-white transition-all hover:bg-transparent hover:text-beaDarkPurple hover:border-beaDarkPurple inline-flex items-center px-6 py-2 border border-transparent shadow-none text-sm font-medium rounded-full bg-beaDarkPurple focus:outline-none\">\n                        <svg className=\"w-3.5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 210 210\">\n                        <path d=\"M179.07,105L30.93,210V0L179.07,105z\"/>\n                        </svg>           \n                        Play\n                    </button>\n                    </div>\n                    <div className=\"lg:ml-4 ml-0 flex flex-column h-full items-end\">\n                    <img src={mountainStream} alt=\"Mountain Stream\" className=\"w-96\" />\n                    </div>\n                </div>\n                </div>\n                {/* //Below will be the recent/featured section */}\n                <MeditateVidSection />\n            </div></div>\n            </div>\n        </section>\n    )\n}\n\nexport default Meditate;","/Users/anders/dev/Bea/bea-be-2/client/src/actions/postMotivateResults.js",["535"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/Visualization.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/InitialEatingFeel.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FullnessFeel.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/TemptedGauge.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/RadialGraph.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/TestPlanSubmit.js",["536","537","538","539"],"import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DisplayPlanResults from './DisplayPlanResults';\nimport DisplayMotivateResults from './DisplayMotivateResults';\nimport { postPlanResults } from '../../actions/postPlanResults';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nexport const TestPlanSubmit = ({postPlanResults, user}) => {\n  console.log(\"USer contains\", user);\n  console.log(\"user is found\", user._id);\n    // const [formData, setFormData] = useState({\n    //     user: user._id,\n    //     lastblockvisited: \"this\",\n    //     howdoyoufeel: \"is\",\n    //     howdoyoufeelint: 2,\n    //     planjournal: \"a\",\n    //     stayedontrack: \"test\",\n    //     planbadblock: \"\",\n    //     what2change: \"\",\n    //     influencedeating: \"\",\n    //     whathappened: \"\",\n    //     somethingelsebad: \"\",\n    //     plangoal: \"\",\n    //     plangoal2: \"\",\n    //     plangoal3: \"\",\n    //     plangoal4: \"\"\n    // });\n\n    // // const { name, email, password, password2 } = formData;\n    // const {\n    //   lastblockvisited,\n    //   howdoyoufeel,\n    //   planjournal,\n    //   stayedontrack,\n    //   planbadblock,\n    //   what2change,\n    //   influencedeating,\n    //   whathappened,\n    //   somethingelsebad,\n    //   plangoal,\n    //   plangoal2,\n    //   plangoal3,\n    //   plangoal4\n    // } = formData\n  \n    // const onChange = (e) =>\n    //   setFormData({ ...formData, [e.target.name]: e.target.value });\n  \n    // const onSubmit = async (e) => {\n    //   console.log('in on submit command');\n    //   e.preventDefault();\n    //   postPlanResults(\n    //     formData\n    //     // lastblockvisited,\n    //     // howdoyoufeel,\n    //     // planjournal,\n    //     // stayedontrack,\n    //     // planbadblock,\n    //     // what2change,\n    //     // influencedeating,\n    //     // whathappened,\n    //     // somethingelsebad,\n    //     // plangoal,\n    //     // plangoal2,\n    //     // plangoal3,\n    //     // plangoal4\n    //   );\n    //   console.log('in on submit command2', formData);\n    //   // try {\n    //   //   const config = {\n    //   //     headers: {\n    //   //       'Content-Type': 'application/json'\n    //   //     }\n    //   //   }\n    //   //   const body = JSON.stringify(formData)\n    //   //   const res = await axios.post('/api/planResults', body, config)\n    //   // } catch(err){\n\n    //   // }\n    // };\n  \n  \n    return (\n  \n                  <div className=\"block\">\n                      <div>\n                          \n                  <h1 className=\"large text-primary\">Test submit information</h1>\n                  <p className=\"lead\">\n                    {/* <i className=\"fas fa-user\" /> This is a test submit form for backend work, if curious about what shows up \n                    check console in inspect mode. */}\n                    This is a test page to display results from the Plan chat that have been completed by test user\n                  </p>\n                   {/* <form className=\"form\" onSubmit={onSubmit}>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"HowDoYouFeel\"\n                        name=\"howdoyoufeel\"\n                        value={howdoyoufeel}\n                        onChange={onChange}\n                      />\n                    </div> \n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit\" />\n                  </form> */}\n                    <DisplayPlanResults userid={user._id}/>\n                    <br/><br/>\n                    <DisplayMotivateResults userid={user._id}/>\n                </div>\n                  </div>\n    );\n  };\n  \n\n  // export default TestPlanSubmit;\n  TestPlanSubmit.propTypes = {\n    user: PropTypes.object.isRequired\n  };\n  const mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n  });\n  export default connect(mapStateToProps, { postPlanResults })(TestPlanSubmit);","/Users/anders/dev/Bea/bea-be-2/client/src/actions/types.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/FeaturedVideos.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/PlanLineGraph.js",["540","541","542","543","544","545","546","547"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningIntro2.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest3.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanIconsDash.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Testpage.js",["548","549","550","551","552"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanMoodHeader.js",["553","554","555","556","557","558"],"import React from 'react'\nimport smileyIcon from '../../../img/smiley-icon.svg';\nimport smileyIconExtraHappy from '../../../img/smiley-icon-extrahappy.svg';\nimport smileyIconNeutral from '../../../img/smiley-icon-neutral.svg';\nimport smileyIconUnhappy from '../../../img/smiley-icon-unhappy.svg';\nimport smileyIconRound from '../../../img/smiley-icon-round.svg';\nimport differentFoods from '../../../img/planimgs/different-foods.png';\nimport meditate from '../../../img/planimgs/meditate.png';\nimport read from '../../../img/planimgs/read.png';\nimport smallerAmounts from '../../../img/planimgs/smaller-amounts.png';\nimport noEntry from '../../../img/planimgs/no-entry.png';\nimport { Fragment } from 'react';\n\nclass PlanMoodHeader extends React.Component {\n\n    render() {\n        console.log(\"props has\", this.props);\n        let control = this.props.avgMood;\n        let planmood = \"\";\n      if(control === 4){\n\n        planmood = \n            <div className=\"bg-beaYellow plan-interactive-state\">\n            <div className=\"sm:p-6 flex-grow\">\n                <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                    Keep up the good work!\n                </h3>\n                <div className=\"mt-2 max-w-xl text-md text-white\">\n                <p>\n                    Your mood eating has on average been great for the past 30 days.\n                </p>\n                </div>\n                <div className=\"mt-5\">\n                    <button type=\"button\" className=\"btn-white\">\n                        <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                        Stay on Track Tips\n                    </button>\n                </div>\n            </div>\n            <div className=\"flex pr-10 align-middle\">\n                <img src={smileyIconExtraHappy} alt=\"Extra Happy Smiley\" className=\"w-36\" />\n            </div>\n        </div>\n      }\n      else if(control === 3){\n  \n        planmood = \n          <div className=\"bg-beaOrange plan-interactive-state\">\n          <div className=\"sm:p-6 flex-grow\">\n              <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                  Keep up the good work!\n              </h3>\n              <div className=\"mt-2 max-w-xl text-md text-white\">\n              <p>\n                  Your mood eating has on average been pretty good for the past 30 days.\n              </p>\n              </div>\n              <div className=\"mt-5\">\n                  <button type=\"button\" className=\"btn-white\">\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                      Stay on Track Tips\n                  </button>\n              </div>\n          </div>\n          <div className=\"flex pr-10 align-middle\">\n              <img src={smileyIcon} alt=\"Smiley Icon\" className=\"w-36\" />\n          </div>\n      </div>\n      }\n      else if(control === 2){\n  \n        planmood = \n            <div className=\"bg-beaBlueGreen plan-interactive-state\">\n            <div className=\"sm:p-6 flex-grow\">\n                <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                    Keep up the good work!\n                </h3>\n                <div className=\"mt-2 max-w-xl text-md text-white\">\n                <p>\n                    Your mood eating has on average been not good for the past 30 days.\n                </p>\n                </div>\n                <div className=\"mt-5\">\n                    <button type=\"button\" className=\"btn-white\">\n                        <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                        Getting Back on Track Tips\n                    </button>\n                </div>\n            </div>\n            <div className=\"flex pr-10 align-middle\">\n                <img src={smileyIconNeutral} alt=\"Neutral Smiley Face\" className=\"w-36\" />\n            </div>\n        </div>\n      }\n      else if(control === 1){\n        planmood = \n          <div className=\"bg-beaDarkBlue plan-interactive-state\">\n          <div className=\"sm:p-6 flex-grow\">\n              <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                  Keep up the good work!\n              </h3>\n              <div className=\"mt-2 max-w-xl text-md text-white\">\n              <p>\n                  Your mood eating has on average been horrible for the past 30 days.\n              </p>\n              </div>\n              <div className=\"mt-5\">\n                  <button type=\"button\" className=\"btn-white\">\n                      <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                      Getting Back on Track Tips\n                  </button>\n              </div>\n          </div>\n          <div className=\"flex pr-10 align-middle\">\n              <img src={smileyIconUnhappy} alt=\"Unhappy Smiley Icon\" className=\"w-36\" />\n          </div>\n      </div>\n      }\n      else {\n        planmood = \n          <div className=\"bg-gradient-to-r from-beaLightBlue to-gray-50 plan-interactive-state\">\n          <div className=\"sm:p-6 flex-grow\">\n              <h3 className=\"text-2xl leading-6 font-thin text-gray-700\">\n                  Get your mood eating trends\n              </h3>\n              <div className=\"mt-2 max-w-xl text-md text-gray-700 font-light\">\n              <p>\n                  When you upgrade you’ll unlock access to all your data which will help keep you on track.\n              </p>\n              </div>\n              <div className=\"mt-5\">\n                  <button type=\"button\" className=\"btn-darkPurple\">       \n                      Upgrade Today\n                  </button>\n              </div>\n          </div>\n      </div>\n      }\n\n    return (\n        // different colors are as follow\n        // bg-beaYellow = <img src={smileyIconExtraHappy} alt=\"Extra Happy Smiley\" className=\"w-36\" />\n        // bg-beaOrange = <img src={smileyIcon} alt=\"Smiley Icon\" className=\"w-36\" />\n        // bg-beaBlueGreen =  <img src={smileyIconNeutral} alt=\"Neutral Smiley Face\" className=\"w-36\" />\n        // bg-beaDarkBlue = <img src={smileyIconUnhappy} alt=\"Unhappy Smiley Icon\" className=\"w-36\" />\n    //     <div className=\"bg-beaYellow plan-interactive-state\">\n    //     <div className=\"sm:p-6 flex-grow\">\n    //         <h3 className=\"text-2xl leading-6 font-medium text-white\">\n    //             Keep up the good work!\n    //         </h3>\n    //         <div className=\"mt-2 max-w-xl text-md text-white\">\n    //         <p>\n    //             Your mood eating has on average been great for the past 30 days.\n    //         </p>\n    //         </div>\n    //         <div className=\"mt-5\">\n    //             <button type=\"button\" className=\"btn-white\">\n    //                 <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n    //                 Stay on Track Tips\n    //             </button>\n    //         </div>\n    //     </div>\n    //     <div className=\"flex pr-10 align-middle\">\n    //         <img src={smileyIconExtraHappy} alt=\"Extra Happy Smiley\" className=\"w-36\" />\n    //     </div>\n    // </div>]\n    <Fragment>  {planmood}\n    </Fragment>\n\n\n    )\n  }\n}\n\n\n\nexport default PlanMoodHeader;","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/Options.js",["559"],"import React from \"react\";\n\nimport \"./Options.css\";\n\nconst WelcomeBlock1 = (props) => {\n  const options = [\n    { text: \"I'm ready!\", handler: props.actionProvider.welcomeblock1, id: 1 },\n  ];\n\n  const optionsMarkup = options.map((option) => (\n    <button\n      className=\"learning-option-button\"\n      key={option.id}\n      onClick={option.handler}\n    >\n      {option.text}\n    </button>\n  ));\n\n  return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n};\n\nconst WelcomeBlock2 = (props) => {\n    const options = [\n      { text: \"I'm ready!\", handler: props.actionProvider.welcomeblock2, id: 1 },\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  }; \n  const WelcomeBlock3 = (props) => {\n    const options = [\n      { text: \"Great 😁\", handler: props.actionProvider.plangood, id: 1 },\n      { text: \"Pretty Good 🙂\", handler: props.actionProvider.plangood, id: 2 },\n      { text: \"Not Good 🙁\", handler: props.actionProvider.planbad, id: 3 },\n      { text: \"Horrible 😩\", handler: props.actionProvider.planbad, id: 4 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n \n\n  const PlanBadBlock = (props) => {\n    const options = [\n      { text: \"Smaller amounts\", handler: props.actionProvider.smalleramounts, id: 1 },\n      { text: \"Different foods\", handler: props.actionProvider.differentfoods, id: 2 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n\n  const DifferentFoods = (props) => {\n    const options = [\n      { text: \"Less fat\", handler: props.actionProvider.emotionalbehavioral, id: 1 },\n      { text: \"Less sugar\", handler: props.actionProvider.emotionalbehavioral, id: 2 },\n      { text: \"Less carbs\", handler: props.actionProvider.emotionalbehavioral, id: 3 },\n      { text: \"Fewer calories\", handler: props.actionProvider.emotionalbehavioral, id: 4 },\n      { text: \"Something else\", handler: props.actionProvider.somethingelsebad, id: 5 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n\n  // const PlanGoal = (props) => {\n  //   const options = [\n  //     { text: \"Keep going\", handler: props.actionProvider.plangoal, id: 1 }\n  //   ];\n  \n  //   const optionsMarkup = options.map((option) => (\n  //     <button\n  //       className=\"learning-option-button\"\n  //       key={option.id}\n  //       onClick={option.handler}\n  //     >\n  //       {option.text}\n  //     </button>\n  //   ));\n  \n  //   return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  // };\n  const StopFull = (props) => {\n    const options = [\n      { text: \"Let's continue\", handler: props.actionProvider.stopfull2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n  const StopFull2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const MoreFilling = (props) => {\n    const options = [\n      { text: \"Let's continue\", handler: props.actionProvider.morefilling2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const MoreFilling2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n\n  const LessFat = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.lessfat2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const LessFat2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n  const LessSugar = (props) => {\n    const options = [\n      { text: \"Avoid Sugar\", handler: props.actionProvider.avoidsugar, id: 1 },\n      { text: \"Find healthy sweets\", handler: props.actionProvider.sweetfoods, id: 2 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const AvoidSugar = (props) => {\n    const options = [\n      { text: \"Let's continue\", handler: props.actionProvider.avoidsugar2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const AvoidSugar2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const SweetFoods = (props) => {\n    const options = [\n      { text: \"Let's Continue\", handler: props.actionProvider.sweetfoods2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const SweetFoods2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n  const FewerCarbs = (props) => {\n    const options = [\n      { text: \"Let's Continue\", handler: props.actionProvider.fewercarbs2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const FewerCarbs2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n  const FewerCalories = (props) => {\n    const options = [\n      { text: \"Let's Continue\", handler: props.actionProvider.fewercalories2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const FewerCalories2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const SomethingElse = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  // const TakeAction = (props) => {\n  //   const options = [\n  //     { text: \"Take a walk\", handler: props.actionProvider.afteraction, id: 1 },\n  //     { text: \"Meditate\", handler: props.actionProvider.afteraction, id: 2 },\n  //     { text: \"Talk to a friend\", handler: props.actionProvider.afteraction, id: 3 },\n  //     { text: \"Eat something small\", handler: props.actionProvider.afteraction, id: 4 },\n  //     { text: \"Read\", handler: props.actionProvider.afteraction, id: 5 },\n  //     { text: \"Something else\", handler: props.actionProvider.afteraction, id: 6 }\n  //   ];\n  //   const optionsMarkup = options.map((option) => (\n  //     <button\n  //       className=\"learning-option-button\"\n  //       key={option.id}\n  //       onClick={option.handler}\n  //     >\n  //       {option.text}\n  //     </button>\n  //   ));\n  \n  //   return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  // };\n\n  const EndActivity = (props) => {\n    const options = [\n      { text: \"End Activity\", handler: props.actionProvider.endactivity, id: 1 }\n    ];\n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\nexport {\n    WelcomeBlock1,\n    WelcomeBlock2,\n    WelcomeBlock3,\n    PlanBadBlock,\n    StopFull,\n    StopFull2,\n    MoreFilling,\n    MoreFilling2,\n    LessFat,\n    LessFat2,\n    LessSugar,\n    AvoidSugar,\n    AvoidSugar2,\n    SweetFoods,\n    SweetFoods2,\n    FewerCarbs,\n    FewerCarbs2,\n    FewerCalories,\n    FewerCalories2,\n    SomethingElse,\n    // TakeAction,\n    EndActivity\n\n};","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MotivateAfterOptions.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/reducers/planResult.js",["560"],"import {\n  GET_PLAN_RESULTS,\n  GET_TODAY_PLAN_RESULTS,\n  GET_PREVIOUSDAY_PLAN_RESULTS,\n  GET_SUMMARY_PLAN_RESULTS,\n  PLAN_RESULTS_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  previousPlanResults: [],\n  todayPlanResults: [],\n  planResults: [],\n  planResults2: [],\n  previousPlanResult: null,\n  planResult: null,\n  planResult2: null,\n  todayPlanResult: null,\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_TODAY_PLAN_RESULTS:\n      return {\n        ...state,\n        todayPlanResults: payload,\n        loading: false\n      };\n      case GET_PREVIOUSDAY_PLAN_RESULTS:\n        return {\n          ...state,\n          previousPlanResults: payload,\n          loading: false\n        };\n    case GET_PLAN_RESULTS:\n      return {\n        ...state,\n        planResults: payload,\n        loading: false\n      };\n\n      case GET_SUMMARY_PLAN_RESULTS:\n        return {\n          ...state,\n          planResults2: payload,\n          loading: false\n        };\n  \n    case PLAN_RESULTS_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n  \n    default:\n      return state;\n  }\n}\n","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/DifferentChoiceStress.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/reducers/alert.js",["561"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Footer.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/ActionProvider.js",["562"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/BarChart.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate2.js",["563"],"import React from 'react'\nimport { Component } from 'react';\nimport * as d3 from \"d3\";\nimport GaugeChart from 'react-gauge-chart';\nimport appleIcon from '../../img/apple-icon.svg';\nimport calendarIcon from '../../img/calendar-icon.svg';\nimport hungryIcon from '../../img/hungry-icon.svg';\n\nclass Motivate2 extends Component {\n    state = {\n        show: false\n      };\n      showModal = e => {\n        this.setState({\n          show: !this.state.show\n        });\n      };\n      onClose = e => {\n        this.props.onClose && this.props.onClose(e);\n      };\n    render() {\n    return (\n\n<section>\n  <div className=\"flex mx-auto p-4\">\n      <div className=\"flex flex-col flex-grow\">\n          <div style={{ backgroundImage: \"linear-gradient(to right, rgba(109, 80, 139, 1), rgba(173, 121, 226, 1), rgba(177, 208, 244, 1))\" }} className=\"flex rounded-xl mb-3 bg-contain bg-no-repeat bg-right-bottom flex flex-col p-6\">\n              <div className=\"mb-4\">\n                  <h3 className=\"text-sm leading-6 font-medium text-white uppercase font-black tracking-widest mb-1\">\n                    Your motivate summary today\n                  </h3>                        \n              </div>\n              <div className=\"flex flex-row w-full justify-between\">\n                  <div className=\"flex\">\n                      <div className=\"flex flex-col w-48\">\n                          <div className=\"flex w-16 h-16 bg-gray-100 bg-opacity-50 rounded-3xl mb-2.5 items-center\">\n                            <img className=\"w-1/2 flex-shrink-0 mx-auto\" src={appleIcon} alt=\"\" />\n                          </div>\n                          <div className=\"\">\n                              <h4 className=\"text-sm leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                 Your urge to eat in a way that isn’t ideal for you right now\n                              </h4>\n                              <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                somewhat tempting\n                              </h5>\n                          </div>\n                      </div>\n                  </div>\n                  <div className=\"flex w-48\">\n                      <div className=\"flex flex-col\">\n                          <div className=\"flex w-16 h-16 bg-gray-100 bg-opacity-50 rounded-3xl mb-2.5 items-center\">\n                            <img className=\"w-1/2 flex-shrink-0 mx-auto\" src={calendarIcon} alt=\"\" />\n                          </div>\n                          <div className=\"\">\n                              <h4 className=\"text-sm leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                You planned to eat\n                              </h4>\n                              <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                apples with peanut butter &amp; kombucha\n                              </h5>\n                          </div>\n                      </div>                            \n                  </div>\n                  <div className=\"flex w-48\">\n                      <div className=\"flex flex-col\">\n                          <div className=\"flex w-16 h-16 bg-gray-100 bg-opacity-50 rounded-3xl mb-2.5 items-center\">\n                            <img className=\"w-1/2 flex-shrink-0 mx-auto\" src={hungryIcon} alt=\"\" />\n                          </div>\n                          <div className=\"\">\n                              <h4 className=\"text-sm leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                The reason why you chose the planned food\n                              </h4>\n                              <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                genuinely hungry\n                              </h5> \n                          </div>\n                      </div>                            \n                  </div>\n              </div>\n          </div>\n          <div className=\"flex flex-shrink\">\n            <div className=\"bg-gray-200 rounded-full p-0 flex flex-shrink\">\n                <div className=\"py-2 px-4 rounded-full\">1W</div>\n                <div className=\"py-2 px-4 rounded-full\">1M</div>\n                <div className=\"bg-beaPurpleCorrected text-white py-2 px-4 rounded-full\">3M</div>\n                <div className=\"py-2 px-4 rounded-full\">1Y</div>\n                <div className=\"py-2 px-4 rounded-full\">ALL</div>\n            </div>\n          </div>\n          <div className=\"border border-gray-200 rounded-xl p-10 my-4\">\n            <div className=\"w-96\">\n                <GaugeChart id=\"gauge-chart3\"\n                    nrOfLevels={2} \n                    colors={[\"#FFAD33\", \"#ECEFF1\"]} \n                    arcsLength={[0.37, 0.63]}\n                    arcWidth={0.45} \n                    percent={0.37} \n                    arcPadding={0}\n                    cornerRadius={0}\n                    textColor={\"#000000\"}\n                    needleColor={\"#58585E\"}\n                    needleBaseColor={\"#CFD8DC\"}\n                    formatTextValue={value => 'Very tempted'}\n                    hideText={true}\n                    />\n                </div>\n            <div className=\"w-full bg-beaOrange p-2 rounded-full flex items-center justify-between\">\n                <div className=\"bg-gray-50 bg-opacity-50 uppercase font-bold text-beaOrange py-3 px-4 text-xl rounded-full\">BEA's Tips</div>\n                <div className=\"m-3 text-lg text-white\">Oh no! It looks like you’re in the beginning stages of getting off track. Bea has some tips to make sure you don’t derail.</div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n                </svg>\n            </div>\n          </div>\n          <div className=\"flex flex-grow w-full\">\n            <div className=\"w-full border border-gray-200 rounded-xl p-10 mr-2\">\n                <div className=\"text-beaDarkBlue uppercase text-center font-bold\">Visualizations: Triggers</div>\n            </div>\n            <div className=\"w-full border border-gray-200 rounded-xl p-10 ml-2\">\n                <div className=\"text-beaDarkBlue uppercase text-center font-bold\">Visualizations: Evaluating Mood</div>\n            </div>\n          </div>\n      </div>\n    </div>\n  </section>\n\n\n    )}\n}\n\nexport default Motivate2;","/Users/anders/dev/Bea/bea-be-2/client/src/actions/auth.js",["564"],"import api from '../utils/api';\nimport axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await api.get('/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post('/users', formData);\n    console.log(\"made it to register\");\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const body = { email, password };\n  // const config = {\n  //   headers: {\n  //     'Content-Type': 'application/json'\n  //   }\n  // }\n  // const body = JSON.stringify({ email, password });\n  try {\n    const res = await api.post('/auth', body);\n    // const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// // Logout / Clear Profile\n// export const logout = () => ({ type: LOGOUT });\nexport const logout = () => dispatch => {\n  dispatch({ type: LOGOUT });\n};","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/OverIndulgeStress.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/StretchMsgorVoice.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateThreeMonth.js",["565","566","567"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Privacy.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Login.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/routing/Routes.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/utils/api.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/actions/postPlanResults.js",["568"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videodata.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/DisplayMotivateResults.js",["569","570","571"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/dashboard/MotivateHeader.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanMain.js",["572","573","574","575","576","577","578","579","580","581","582"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Testpopuptwo.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateMonth.js",["583","584"],"\nimport React, { useEffect, Fragment } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getResultsByIdOneMonth } from '../../../actions/postMotivateResults';\nimport GaugeChart from 'react-gauge-chart';\nimport Spinner from '../../layout/Spinner';\nimport TreeMap from './TreeMap';\nimport SimpleGauge from './SimpleGauge';\nimport BarChart from './BarChart';\nimport AreaChart from './AreaChart';\nimport HeatMap from './HeatMap';\nimport ColumnChart from './ColumnChart';\nimport TemptedGauge from './TemptedGauge';\n\nconst MotivateMonth = ({ user, getResultsByIdOneMonth, motivateResult: { summaryMotivateResults1m } }) => {\n\n\n  useEffect(() => {\n    getResultsByIdOneMonth(user._id, 30);\n  }, [getResultsByIdOneMonth, user._id]);\n // console.log(\"motivate weekly has\", summaryMotivateResults1m );\n  let motivateBodyResults = \"\";\n  if(summaryMotivateResults1m.summaryStats){\n  \n    motivateBodyResults = \n    <Fragment>\n    {summaryMotivateResults1m === null ? (\n      <Spinner />\n    ) : (\n      <Fragment>\n        <section>\n          {/* <div className=\"flex mx-auto p-4\">\n              <div className=\"flex flex-col flex-grow\"> */}\n                  <div className=\"border border-gray-200 rounded-xl p-10 my-4\">\n                    <TemptedGauge avgTemptationLvl={summaryMotivateResults1m.summaryStats.avgTemptationLvl}/>\n                    {/* <div className=\"w-96 items-center\">\n                        <GaugeChart id=\"gauge-chart3\"\n                            nrOfLevels={2} \n                            colors={[\"#FFAD33\", \"#ECEFF1\"]} \n                            arcsLength={[0.37, 0.63]}\n                            arcWidth={0.45} \n                            percent={0.80} \n                            arcPadding={0}\n                            cornerRadius={0}\n                            textColor={\"#000000\"}\n                            needleColor={\"#58585E\"}\n                            needleBaseColor={\"#CFD8DC\"}\n                            formatTextValue={value => 'Very tempted'}\n                            hideText={true}\n                            />\n                            <p className=\"text-xl\">tempted</p>\n                            <p>to eat in a way not ideal</p>\n                        </div> */}\n                    <div className=\"w-48\">\n\n                        <ColumnChart level={summaryMotivateResults1m.summaryStats.temptedlevel} dates={summaryMotivateResults1m.summaryStats.temptedDates}/>\n            \n                      </div>\n                    <div className=\"w-full bg-beaOrange p-2 rounded-full flex items-center justify-between\">\n                        <div className=\"bg-gray-50 bg-opacity-50 uppercase font-bold text-beaOrange py-3 px-4 text-xl rounded-full\">BEA's Tips</div>\n                        <div className=\"m-3 text-lg text-white\">Oh no! It looks like you’re in the beginning stages of getting off track. Bea has some tips to make sure you don’t derail.</div>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n                        </svg>\n                    </div>\n                  </div> \n                  <div className=\"flex flex-grow w-full\">\n                    <div className=\"w-full border border-gray-200 rounded-xl p-10 mr-2\">\n                        <div className=\"text-beaDarkBlue uppercase text-center font-bold\">Visualizations: Triggers</div>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">Favorite food you planned to eat next</h2>\n                        <TreeMap data={summaryMotivateResults1m.plan2eat}/>\n                        <p>(below is the data to be graphed)</p><br/>\n                      {/* {summaryMotivateResults1m.planned2eat.map((item, index) => (\n                        <p key={index}>{item} - (one entry)</p>\n                    ))} */}\n                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">Reason why you chose the foods</span><br/>\n                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">{summaryMotivateResults1m.summaryStats.whyHungry}</h2>\n                    <SimpleGauge />\n                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">If you overindulged, you felt</span><br/>\n                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">{summaryMotivateResults1m.summaryStats.overindulgeresult}</h2>\n                    <SimpleGauge />\n                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">If you made a different choice, you felt</span><br/>\n                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">{summaryMotivateResults1m.summaryStats.differentChoice}</h2>\n                    </div>\n                    <div className=\"w-full border border-gray-200 rounded-xl p-10 ml-2\">\n                        <div className=\"text-beaDarkBlue uppercase text-center font-bold\">Visualizations: Evaluating Mood</div>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">Favorite food you planned to eat next</h2>\n                        <TreeMap  data={summaryMotivateResults1m.plan2eat}/>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">How you usually felt during each eating phase</h2>\n                        <AreaChart data={summaryMotivateResults1m.summaryStats.phaseFeel}/>\n                        <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">How long you thought each eating phase lasted</h2>\n                        <BarChart data={summaryMotivateResults1m.summaryStats.lengthFeel}/>\n                    </div>\n                  </div>\n              {/* </div>\n            </div> */}\n          </section>\n      </Fragment>\n    )}\n  </Fragment>\n\n  }\n  else {\n    motivateBodyResults = \n        <Fragment><div>Loading</div></Fragment>\n\n  }\n  \n    return (\n\n      <Fragment>\n        {motivateBodyResults}\n    \n      </Fragment>\n\n\n    )}\n\n\n\nMotivateMonth.propTypes = {\n  getResultsByIdOneMonth: PropTypes.func.isRequired,\n  motivateResult: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  motivateResult: state.motivateResult,\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, { getResultsByIdOneMonth })(MotivateMonth);","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/InitialEatingLength.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FullnessLength.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanSubmit.js",["585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602"],"import React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { postPlanResults } from '../../../actions/postPlanResults';\nimport axios from 'axios';\n\nimport \"./Options.css\";\n\n//this code is for once it is understood how to merge global and local props\nexport const PlanSubmit = ({props, postPlanResults, state, auth, ownProps}) => {\n     console.log(\"USer contains\", auth.user);\n     console.log(\"user is found\", auth.user._id);\n\n\n\n// const PlanSubmit = (props) => {\n//   const { setState, actionProvider } = props;\n//  console.log(\"props in plan submit contains \", props);\n  console.log(\"own props in plan submit contains \", ownProps);\n  console.log(\"auth in plan submit contains \", auth);\n//   console.log(\"plan goal2 contains \", props.plangoal2);\n//   console.log(\"Spread state operator\", ...state)\n//   const setType1 = async (type) => {\n//     setState((state) => ({\n//       ...state,\n//       plangoal: type,\n//       lastblockvisited: \"Plan Goal\"\n//     }));\n\n//     actionProvider.smallerportions();\n//   };\n//   const setType2 = async (type) => {\n//     setState((state) => ({\n//       ...state,\n//       plangoal: type,\n//       lastblockvisited: \"Plan Goal\"\n//     }));\n\n//     actionProvider.foodchoices();\n//   };\n//    console.log(\"current entry state contains\", state);\n  const [formData, setFormData] = useState({\n    //user: \"60217a517f2b961147d214f0\",\n    user: auth.user._id,\n    lastblockvisited: ownProps.lastblockvisited,\n    howdoyoufeel: ownProps.howdoyoufeel,\n    howdoyoufeelint: ownProps.howdoyoufeelint,\n    planjournal: ownProps.planjournal,\n    stayedontrack: ownProps.stayedontrack,\n    planbadblock: ownProps.planbadblock,\n    what2change: ownProps.what2change,\n    influencedeating: ownProps.influencedeating,\n    whathappened: ownProps.whathappened,\n    somethingelsebad: ownProps.somethingelsebad,\n    plangoal: ownProps.plangoal,\n    plangoal2: ownProps.plangoal2,\n    plangoal3: ownProps.plangoal3,\n    plangoal4: ownProps.plangoal4,\n    plangoal5: ownProps.plangoal5\n});\nconst onSubmit = async (e) => {\n    console.log('in on submit command');\n\n\n    // e.preventDefault();\n    // postPlanResults(\n    //   formData\n    // );\n          try {\n              console.log(\"In try block\");\n        const config = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n        const body = JSON.stringify(formData)\n        const res = await axios.post('/api/planResults', body, config)\n      } catch(err){\n        console.log(\"In catch block\");\n      }\n};\n  return (\n    <div>\n      <div className=\"learning-options-container\">\n        <button\n          className=\"learning-option-button\"\n          onClick={() => onSubmit()}\n        >\n          I'm Finished!\n        </button>\n        {/* <button\n          className=\"learning-option-button\"\n          onClick={() => setType2(\"Different foods\")}\n        >\n          I'm Finished!\n        </button> */}\n      </div>\n    </div>\n  );\n};\n\n\n// export default PlanSubmit;\n\n// PlanSubmit.propTypes = {\n//     user: PropTypes.object.isRequired\n//   };\n  // const mapStateToProps = (state, ownProps) => ({\n  //   isAuthenticated: state.auth.isAuthenticated,\n  //   user: state.auth.user\n    \n  // },\n  // console.log(\"own props contains \", ownProps ),\n  // console.log(\"state props contains \", state ));\n  function mapStateToProps(state, ownProps) {\n    const { auth } = state\n    // ownProps would look like { \"id\" : 123 }\n    const { lastblockvisited,\n      howdoyoufeel,\n      howdoyoufeelint,\n      planjournal,\n      stayedontrack,\n      planbadblock,\n      what2change,\n      influencedeating,\n      whathappened,\n      somethingelsebad,\n      plangoal,\n      plangoal2,\n      plangoal3,\n      plangoal4,\n      plangoal5 } = ownProps\n \n   console.log(\"own props contains \", ownProps );\n    console.log(\"state props contains \", state );\n    // console.log(\"own props contains \", props );\n     console.log(\"state props contains \", auth );\n  \n    // component receives additionally:\n    return { ownProps, auth }\n  }\n  export default connect(mapStateToProps, { postPlanResults })(PlanSubmit);","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningFeel.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/ColumnChart.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/config.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/HowDoYouFeel.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateSections.js",["603","604","605","606"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MotivateAfter.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest1.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/calendar.js",["607","608","609","610","611","612"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/SmallerAmounts.js",[],{"ruleId":"613","replacedBy":"614"},{"ruleId":"615","replacedBy":"616"},{"ruleId":"617","severity":1,"message":"618","line":4,"column":8,"nodeType":"619","messageId":"620","endLine":4,"endColumn":12},{"ruleId":"617","severity":1,"message":"621","line":5,"column":8,"nodeType":"619","messageId":"620","endLine":5,"endColumn":25},{"ruleId":"617","severity":1,"message":"622","line":35,"column":11,"nodeType":"619","messageId":"620","endLine":35,"endColumn":20},{"ruleId":"617","severity":1,"message":"623","line":67,"column":15,"nodeType":"619","messageId":"620","endLine":67,"endColumn":25},{"ruleId":"613","replacedBy":"624"},{"ruleId":"615","replacedBy":"625"},{"ruleId":"613","replacedBy":"626"},{"ruleId":"615","replacedBy":"627"},{"ruleId":"617","severity":1,"message":"628","line":1,"column":17,"nodeType":"619","messageId":"620","endLine":1,"endColumn":25},{"ruleId":"617","severity":1,"message":"629","line":36,"column":5,"nodeType":"619","messageId":"620","endLine":36,"endColumn":15},{"ruleId":"613","replacedBy":"630"},{"ruleId":"615","replacedBy":"631"},{"ruleId":"617","severity":1,"message":"632","line":2,"column":8,"nodeType":"619","messageId":"620","endLine":2,"endColumn":18},{"ruleId":"617","severity":1,"message":"633","line":3,"column":8,"nodeType":"619","messageId":"620","endLine":3,"endColumn":28},{"ruleId":"617","severity":1,"message":"634","line":4,"column":8,"nodeType":"619","messageId":"620","endLine":4,"endColumn":25},{"ruleId":"617","severity":1,"message":"635","line":5,"column":8,"nodeType":"619","messageId":"620","endLine":5,"endColumn":25},{"ruleId":"617","severity":1,"message":"636","line":6,"column":8,"nodeType":"619","messageId":"620","endLine":6,"endColumn":23},{"ruleId":"617","severity":1,"message":"637","line":5,"column":8,"nodeType":"619","messageId":"620","endLine":5,"endColumn":24},{"ruleId":"617","severity":1,"message":"638","line":7,"column":8,"nodeType":"619","messageId":"620","endLine":7,"endColumn":21},{"ruleId":"617","severity":1,"message":"639","line":22,"column":9,"nodeType":"619","messageId":"620","endLine":22,"endColumn":18},{"ruleId":"613","replacedBy":"640"},{"ruleId":"615","replacedBy":"641"},{"ruleId":"613","replacedBy":"642"},{"ruleId":"615","replacedBy":"643"},{"ruleId":"613","replacedBy":"644"},{"ruleId":"615","replacedBy":"645"},{"ruleId":"613","replacedBy":"646"},{"ruleId":"615","replacedBy":"647"},{"ruleId":"648","severity":1,"message":"649","line":32,"column":3,"nodeType":"650","endLine":89,"endColumn":4},{"ruleId":"617","severity":1,"message":"651","line":6,"column":13,"nodeType":"619","messageId":"620","endLine":6,"endColumn":15},{"ruleId":"617","severity":1,"message":"652","line":7,"column":8,"nodeType":"619","messageId":"620","endLine":7,"endColumn":18},{"ruleId":"617","severity":1,"message":"653","line":13,"column":8,"nodeType":"619","messageId":"620","endLine":13,"endColumn":15},{"ruleId":"613","replacedBy":"654"},{"ruleId":"615","replacedBy":"655"},{"ruleId":"617","severity":1,"message":"656","line":19,"column":15,"nodeType":"619","messageId":"620","endLine":19,"endColumn":23},{"ruleId":"617","severity":1,"message":"657","line":25,"column":15,"nodeType":"619","messageId":"620","endLine":25,"endColumn":23},{"ruleId":"617","severity":1,"message":"628","line":1,"column":38,"nodeType":"619","messageId":"620","endLine":1,"endColumn":46},{"ruleId":"617","severity":1,"message":"658","line":2,"column":50,"nodeType":"619","messageId":"620","endLine":2,"endColumn":61},{"ruleId":"617","severity":1,"message":"659","line":2,"column":63,"nodeType":"619","messageId":"620","endLine":2,"endColumn":73},{"ruleId":"617","severity":1,"message":"660","line":8,"column":8,"nodeType":"619","messageId":"620","endLine":8,"endColumn":16},{"ruleId":"617","severity":1,"message":"661","line":9,"column":8,"nodeType":"619","messageId":"620","endLine":9,"endColumn":16},{"ruleId":"617","severity":1,"message":"662","line":10,"column":8,"nodeType":"619","messageId":"620","endLine":10,"endColumn":17},{"ruleId":"617","severity":1,"message":"663","line":11,"column":8,"nodeType":"619","messageId":"620","endLine":11,"endColumn":12},{"ruleId":"617","severity":1,"message":"664","line":12,"column":8,"nodeType":"619","messageId":"620","endLine":12,"endColumn":13},{"ruleId":"617","severity":1,"message":"665","line":13,"column":8,"nodeType":"619","messageId":"620","endLine":13,"endColumn":22},{"ruleId":"617","severity":1,"message":"666","line":14,"column":8,"nodeType":"619","messageId":"620","endLine":14,"endColumn":18},{"ruleId":"617","severity":1,"message":"667","line":15,"column":8,"nodeType":"619","messageId":"620","endLine":15,"endColumn":16},{"ruleId":"617","severity":1,"message":"668","line":16,"column":8,"nodeType":"619","messageId":"620","endLine":16,"endColumn":23},{"ruleId":"617","severity":1,"message":"669","line":17,"column":8,"nodeType":"619","messageId":"620","endLine":17,"endColumn":15},{"ruleId":"617","severity":1,"message":"670","line":19,"column":8,"nodeType":"619","messageId":"620","endLine":19,"endColumn":13},{"ruleId":"617","severity":1,"message":"671","line":20,"column":8,"nodeType":"619","messageId":"620","endLine":20,"endColumn":14},{"ruleId":"617","severity":1,"message":"672","line":21,"column":8,"nodeType":"619","messageId":"620","endLine":21,"endColumn":16},{"ruleId":"617","severity":1,"message":"673","line":22,"column":8,"nodeType":"619","messageId":"620","endLine":22,"endColumn":20},{"ruleId":"613","replacedBy":"674"},{"ruleId":"615","replacedBy":"675"},{"ruleId":"617","severity":1,"message":"676","line":3,"column":8,"nodeType":"619","messageId":"620","endLine":3,"endColumn":20},{"ruleId":"617","severity":1,"message":"677","line":4,"column":8,"nodeType":"619","messageId":"620","endLine":4,"endColumn":18},{"ruleId":"617","severity":1,"message":"678","line":5,"column":8,"nodeType":"619","messageId":"620","endLine":5,"endColumn":22},{"ruleId":"613","replacedBy":"679"},{"ruleId":"615","replacedBy":"680"},{"ruleId":"613","replacedBy":"681"},{"ruleId":"615","replacedBy":"682"},{"ruleId":"648","severity":1,"message":"683","line":4,"column":1,"nodeType":"650","endLine":12,"endColumn":3},{"ruleId":"613","replacedBy":"684"},{"ruleId":"615","replacedBy":"685"},{"ruleId":"648","severity":1,"message":"649","line":20,"column":1,"nodeType":"650","endLine":79,"endColumn":2},{"ruleId":"617","severity":1,"message":"686","line":2,"column":9,"nodeType":"619","messageId":"620","endLine":2,"endColumn":13},{"ruleId":"613","replacedBy":"687"},{"ruleId":"615","replacedBy":"688"},{"ruleId":"617","severity":1,"message":"686","line":4,"column":10,"nodeType":"619","messageId":"620","endLine":4,"endColumn":14},{"ruleId":"617","severity":1,"message":"689","line":5,"column":8,"nodeType":"619","messageId":"620","endLine":5,"endColumn":21},{"ruleId":"617","severity":1,"message":"690","line":12,"column":8,"nodeType":"619","messageId":"620","endLine":12,"endColumn":22},{"ruleId":"617","severity":1,"message":"651","line":6,"column":13,"nodeType":"619","messageId":"620","endLine":6,"endColumn":15},{"ruleId":"617","severity":1,"message":"652","line":7,"column":8,"nodeType":"619","messageId":"620","endLine":7,"endColumn":18},{"ruleId":"617","severity":1,"message":"653","line":13,"column":8,"nodeType":"619","messageId":"620","endLine":13,"endColumn":15},{"ruleId":"617","severity":1,"message":"691","line":3,"column":10,"nodeType":"619","messageId":"620","endLine":3,"endColumn":16},{"ruleId":"617","severity":1,"message":"692","line":4,"column":16,"nodeType":"619","messageId":"620","endLine":4,"endColumn":19},{"ruleId":"617","severity":1,"message":"693","line":4,"column":21,"nodeType":"619","messageId":"620","endLine":4,"endColumn":28},{"ruleId":"617","severity":1,"message":"694","line":1,"column":8,"nodeType":"619","messageId":"620","endLine":1,"endColumn":13},{"ruleId":"617","severity":1,"message":"695","line":4,"column":10,"nodeType":"619","messageId":"620","endLine":4,"endColumn":17},{"ruleId":"617","severity":1,"message":"696","line":5,"column":8,"nodeType":"619","messageId":"620","endLine":5,"endColumn":17},{"ruleId":"697","severity":1,"message":"698","line":37,"column":170,"nodeType":"699","endLine":37,"endColumn":191},{"ruleId":"617","severity":1,"message":"700","line":5,"column":3,"nodeType":"619","messageId":"620","endLine":5,"endColumn":16},{"ruleId":"617","severity":1,"message":"628","line":1,"column":17,"nodeType":"619","messageId":"620","endLine":1,"endColumn":25},{"ruleId":"617","severity":1,"message":"686","line":7,"column":10,"nodeType":"619","messageId":"620","endLine":7,"endColumn":14},{"ruleId":"617","severity":1,"message":"701","line":7,"column":16,"nodeType":"619","messageId":"620","endLine":7,"endColumn":24},{"ruleId":"617","severity":1,"message":"702","line":8,"column":8,"nodeType":"619","messageId":"620","endLine":8,"endColumn":13},{"ruleId":"617","severity":1,"message":"628","line":1,"column":26,"nodeType":"619","messageId":"620","endLine":1,"endColumn":34},{"ruleId":"617","severity":1,"message":"703","line":2,"column":8,"nodeType":"619","messageId":"620","endLine":2,"endColumn":23},{"ruleId":"617","severity":1,"message":"704","line":3,"column":8,"nodeType":"619","messageId":"620","endLine":3,"endColumn":28},{"ruleId":"617","severity":1,"message":"705","line":4,"column":8,"nodeType":"619","messageId":"620","endLine":4,"endColumn":26},{"ruleId":"617","severity":1,"message":"706","line":5,"column":8,"nodeType":"619","messageId":"620","endLine":5,"endColumn":25},{"ruleId":"617","severity":1,"message":"707","line":6,"column":8,"nodeType":"619","messageId":"620","endLine":6,"endColumn":15},{"ruleId":"617","severity":1,"message":"708","line":8,"column":8,"nodeType":"619","messageId":"620","endLine":8,"endColumn":22},{"ruleId":"617","severity":1,"message":"709","line":76,"column":11,"nodeType":"619","messageId":"620","endLine":76,"endColumn":23},{"ruleId":"617","severity":1,"message":"710","line":4,"column":8,"nodeType":"619","messageId":"620","endLine":4,"endColumn":26},{"ruleId":"617","severity":1,"message":"711","line":5,"column":8,"nodeType":"619","messageId":"620","endLine":5,"endColumn":30},{"ruleId":"617","severity":1,"message":"686","line":7,"column":10,"nodeType":"619","messageId":"620","endLine":7,"endColumn":14},{"ruleId":"617","severity":1,"message":"701","line":7,"column":16,"nodeType":"619","messageId":"620","endLine":7,"endColumn":24},{"ruleId":"617","severity":1,"message":"702","line":8,"column":8,"nodeType":"619","messageId":"620","endLine":8,"endColumn":13},{"ruleId":"617","severity":1,"message":"636","line":6,"column":8,"nodeType":"619","messageId":"620","endLine":6,"endColumn":23},{"ruleId":"617","severity":1,"message":"712","line":7,"column":8,"nodeType":"619","messageId":"620","endLine":7,"endColumn":22},{"ruleId":"617","severity":1,"message":"713","line":8,"column":8,"nodeType":"619","messageId":"620","endLine":8,"endColumn":16},{"ruleId":"617","severity":1,"message":"714","line":9,"column":8,"nodeType":"619","messageId":"620","endLine":9,"endColumn":12},{"ruleId":"617","severity":1,"message":"715","line":10,"column":8,"nodeType":"619","messageId":"620","endLine":10,"endColumn":22},{"ruleId":"617","severity":1,"message":"707","line":11,"column":8,"nodeType":"619","messageId":"620","endLine":11,"endColumn":15},{"ruleId":"617","severity":1,"message":"716","line":82,"column":9,"nodeType":"619","messageId":"620","endLine":82,"endColumn":23},{"ruleId":"648","severity":1,"message":"649","line":22,"column":1,"nodeType":"650","endLine":62,"endColumn":2},{"ruleId":"648","severity":1,"message":"649","line":5,"column":1,"nodeType":"650","endLine":16,"endColumn":2},{"ruleId":"617","severity":1,"message":"694","line":1,"column":8,"nodeType":"619","messageId":"620","endLine":1,"endColumn":13},{"ruleId":"617","severity":1,"message":"651","line":3,"column":13,"nodeType":"619","messageId":"620","endLine":3,"endColumn":15},{"ruleId":"617","severity":1,"message":"702","line":2,"column":8,"nodeType":"619","messageId":"620","endLine":2,"endColumn":13},{"ruleId":"617","severity":1,"message":"651","line":6,"column":13,"nodeType":"619","messageId":"620","endLine":6,"endColumn":15},{"ruleId":"617","severity":1,"message":"652","line":7,"column":8,"nodeType":"619","messageId":"620","endLine":7,"endColumn":18},{"ruleId":"617","severity":1,"message":"653","line":13,"column":8,"nodeType":"619","messageId":"620","endLine":13,"endColumn":15},{"ruleId":"617","severity":1,"message":"700","line":5,"column":3,"nodeType":"619","messageId":"620","endLine":5,"endColumn":16},{"ruleId":"617","severity":1,"message":"717","line":2,"column":10,"nodeType":"619","messageId":"620","endLine":2,"endColumn":16},{"ruleId":"617","severity":1,"message":"718","line":2,"column":18,"nodeType":"619","messageId":"620","endLine":2,"endColumn":28},{"ruleId":"617","severity":1,"message":"719","line":6,"column":8,"nodeType":"619","messageId":"620","endLine":6,"endColumn":15},{"ruleId":"617","severity":1,"message":"628","line":1,"column":28,"nodeType":"619","messageId":"620","endLine":1,"endColumn":36},{"ruleId":"617","severity":1,"message":"720","line":2,"column":8,"nodeType":"619","messageId":"620","endLine":2,"endColumn":16},{"ruleId":"617","severity":1,"message":"721","line":3,"column":8,"nodeType":"619","messageId":"620","endLine":3,"endColumn":21},{"ruleId":"617","severity":1,"message":"722","line":4,"column":9,"nodeType":"619","messageId":"620","endLine":4,"endColumn":13},{"ruleId":"617","severity":1,"message":"686","line":5,"column":10,"nodeType":"619","messageId":"620","endLine":5,"endColumn":14},{"ruleId":"617","severity":1,"message":"708","line":9,"column":8,"nodeType":"619","messageId":"620","endLine":9,"endColumn":22},{"ruleId":"617","severity":1,"message":"723","line":10,"column":8,"nodeType":"619","messageId":"620","endLine":10,"endColumn":22},{"ruleId":"617","severity":1,"message":"724","line":11,"column":8,"nodeType":"619","messageId":"620","endLine":11,"endColumn":26},{"ruleId":"617","severity":1,"message":"673","line":14,"column":8,"nodeType":"619","messageId":"620","endLine":14,"endColumn":20},{"ruleId":"617","severity":1,"message":"725","line":16,"column":8,"nodeType":"619","messageId":"620","endLine":16,"endColumn":21},{"ruleId":"726","severity":1,"message":"727","line":39,"column":6,"nodeType":"728","endLine":39,"endColumn":65,"suggestions":"729"},{"ruleId":"617","severity":1,"message":"652","line":6,"column":8,"nodeType":"619","messageId":"620","endLine":6,"endColumn":18},{"ruleId":"617","severity":1,"message":"653","line":12,"column":8,"nodeType":"619","messageId":"620","endLine":12,"endColumn":15},{"ruleId":"617","severity":1,"message":"696","line":3,"column":8,"nodeType":"619","messageId":"620","endLine":3,"endColumn":17},{"ruleId":"617","severity":1,"message":"730","line":42,"column":20,"nodeType":"619","messageId":"620","endLine":42,"endColumn":31},{"ruleId":"617","severity":1,"message":"731","line":77,"column":15,"nodeType":"619","messageId":"620","endLine":77,"endColumn":18},{"ruleId":"617","severity":1,"message":"732","line":118,"column":13,"nodeType":"619","messageId":"620","endLine":118,"endColumn":29},{"ruleId":"617","severity":1,"message":"733","line":119,"column":7,"nodeType":"619","messageId":"620","endLine":119,"endColumn":19},{"ruleId":"617","severity":1,"message":"734","line":120,"column":7,"nodeType":"619","messageId":"620","endLine":120,"endColumn":22},{"ruleId":"617","severity":1,"message":"735","line":121,"column":7,"nodeType":"619","messageId":"620","endLine":121,"endColumn":18},{"ruleId":"617","severity":1,"message":"736","line":122,"column":7,"nodeType":"619","messageId":"620","endLine":122,"endColumn":20},{"ruleId":"617","severity":1,"message":"737","line":123,"column":7,"nodeType":"619","messageId":"620","endLine":123,"endColumn":19},{"ruleId":"617","severity":1,"message":"738","line":124,"column":7,"nodeType":"619","messageId":"620","endLine":124,"endColumn":18},{"ruleId":"617","severity":1,"message":"739","line":125,"column":7,"nodeType":"619","messageId":"620","endLine":125,"endColumn":23},{"ruleId":"617","severity":1,"message":"740","line":126,"column":7,"nodeType":"619","messageId":"620","endLine":126,"endColumn":19},{"ruleId":"617","severity":1,"message":"741","line":127,"column":7,"nodeType":"619","messageId":"620","endLine":127,"endColumn":23},{"ruleId":"617","severity":1,"message":"742","line":128,"column":7,"nodeType":"619","messageId":"620","endLine":128,"endColumn":15},{"ruleId":"617","severity":1,"message":"743","line":129,"column":7,"nodeType":"619","messageId":"620","endLine":129,"endColumn":16},{"ruleId":"617","severity":1,"message":"744","line":130,"column":7,"nodeType":"619","messageId":"620","endLine":130,"endColumn":16},{"ruleId":"617","severity":1,"message":"745","line":131,"column":7,"nodeType":"619","messageId":"620","endLine":131,"endColumn":16},{"ruleId":"617","severity":1,"message":"746","line":132,"column":7,"nodeType":"619","messageId":"620","endLine":132,"endColumn":16},{"ruleId":"617","severity":1,"message":"747","line":3,"column":10,"nodeType":"619","messageId":"620","endLine":3,"endColumn":19},{"ruleId":"617","severity":1,"message":"686","line":4,"column":10,"nodeType":"619","messageId":"620","endLine":4,"endColumn":14},{"ruleId":"617","severity":1,"message":"689","line":5,"column":8,"nodeType":"619","messageId":"620","endLine":5,"endColumn":21},{"ruleId":"748","severity":1,"message":"749","line":15,"column":30,"nodeType":"750","messageId":"751","endLine":15,"endColumn":32},{"ruleId":"617","severity":1,"message":"752","line":4,"column":10,"nodeType":"619","messageId":"620","endLine":4,"endColumn":24},{"ruleId":"617","severity":1,"message":"753","line":4,"column":26,"nodeType":"619","messageId":"620","endLine":4,"endColumn":36},{"ruleId":"617","severity":1,"message":"754","line":26,"column":9,"nodeType":"619","messageId":"620","endLine":26,"endColumn":14},{"ruleId":"617","severity":1,"message":"755","line":29,"column":17,"nodeType":"619","messageId":"620","endLine":29,"endColumn":25},{"ruleId":"617","severity":1,"message":"756","line":35,"column":12,"nodeType":"619","messageId":"620","endLine":35,"endColumn":24},{"ruleId":"617","severity":1,"message":"757","line":111,"column":12,"nodeType":"619","messageId":"620","endLine":111,"endColumn":20},"no-native-reassign",["758"],"no-negated-in-lhs",["759"],"no-unused-vars","'wave' is defined but never used.","Identifier","unusedVar","'meditateIconLarge' is defined but never used.","'authLinks' is assigned a value but never used.","'guestLinks' is assigned a value but never used.",["758"],["759"],["758"],["759"],"'useState' is defined but never used.","'TakeAction' is defined but never used.",["758"],["759"],"'smileyIcon' is defined but never used.","'smileyIconExtraHappy' is defined but never used.","'smileyIconNeutral' is defined but never used.","'smileyIconUnhappy' is defined but never used.","'smileyIconRound' is defined but never used.","'planIllustration' is defined but never used.","'PlanIconsDash' is defined but never used.","'tempcheck' is assigned a value but never used.",["758"],["759"],["758"],["759"],["758"],["759"],["758"],["759"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'d3' is defined but never used.","'GaugeChart' is defined but never used.","'HeatMap' is defined but never used.",["758"],["759"],"'levelone' is assigned a value but never used.","'leveltwo' is assigned a value but never used.","'useLocation' is defined but never used.","'withRouter' is defined but never used.","'Meditate' is defined but never used.","'Motivate' is defined but never used.","'Motivate2' is defined but never used.","'Plan' is defined but never used.","'Plan2' is defined but never used.","'TestPlanSubmit' is defined but never used.","'Helpcenter' is defined but never used.","'Settings' is defined but never used.","'Termsconditions' is defined but never used.","'Privacy' is defined but never used.","'Login' is defined but never used.","'Signup' is defined but never used.","'Register' is defined but never used.","'CalendarPage' is defined but never used.",["758"],["759"],"'Testpopuptwo' is defined but never used.","'Videomodal' is defined but never used.","'Videoselection' is defined but never used.",["758"],["759"],["758"],["759"],"Assign arrow function to a variable before exporting as module default",["758"],["759"],"'Link' is defined but never used.",["758"],["759"],"'peskyPatterns' is defined but never used.","'mountainstream' is defined but never used.","'render' is defined but never used.","'Nav' is defined but never used.","'NavLink' is defined but never used.","'React' is defined but never used.","'connect' is defined but never used.","'PropTypes' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'REGISTER_FAIL' is defined but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","'smileyIconGreat' is defined but never used.","'smileyIconPrettyGood' is defined but never used.","'smileyIconHorrible' is defined but never used.","'smileyIconNotGood' is defined but never used.","'noEntry' is defined but never used.","'chartTrendline' is defined but never used.","'loopincremet' is assigned a value but never used.","'DisplayPlanResults' is defined but never used.","'DisplayMotivateResults' is defined but never used.","'differentFoods' is defined but never used.","'meditate' is defined but never used.","'read' is defined but never used.","'smallerAmounts' is defined but never used.","'DifferentFoods' is assigned a value but never used.","'format' is defined but never used.","'compareAsc' is defined but never used.","'Spinner' is defined but never used.","'bowlIcon' is defined but never used.","'newspaperIcon' is defined but never used.","'Line' is defined but never used.","'PlanMoodHeader' is defined but never used.","'PlanMoodHeaderFree' is defined but never used.","'PlanLineGraph' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'getResultsById'. Either exclude it or remove the dependency array. Outer scope values like 'getResultsById' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["760"],"'setFormData' is assigned a value but never used.","'res' is assigned a value but never used.","'lastblockvisited' is assigned a value but never used.","'howdoyoufeel' is assigned a value but never used.","'howdoyoufeelint' is assigned a value but never used.","'planjournal' is assigned a value but never used.","'stayedontrack' is assigned a value but never used.","'planbadblock' is assigned a value but never used.","'what2change' is assigned a value but never used.","'influencedeating' is assigned a value but never used.","'whathappened' is assigned a value but never used.","'somethingelsebad' is assigned a value but never used.","'plangoal' is assigned a value but never used.","'plangoal2' is assigned a value but never used.","'plangoal3' is assigned a value but never used.","'plangoal4' is assigned a value but never used.","'plangoal5' is assigned a value but never used.","'Component' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'browserHistory' is defined but never used.","'useHistory' is defined but never used.","'dates' is assigned a value but never used.","'setValue' is assigned a value but never used.","'getDayOfWeek' is defined but never used.","'onChange' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"761","fix":"762"},"Update the dependencies array to be: [getResultsByIdToday, getSummary, user._id]",{"range":"763","text":"764"},[1381,1440],"[getResultsByIdToday, getSummary, user._id]"]