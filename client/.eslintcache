[{"/Users/anders/dev/Bea/bea-be-2/client/src/reportWebVitals.js":"1","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Navbar.js":"2","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Settings.js":"3","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Alert.js":"4","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate.js":"5","/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Register.js":"6","/Users/anders/dev/Bea/bea-be-2/client/src/actions/types.js":"7","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Dashboard.js":"8","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/MeditateVidSection.js":"9","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videomodal.js":"10","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Testpage.js":"11","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/MessageParser.js":"12","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanDaily.js":"13","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AreyouReady.js":"14","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/HowTempted.js":"15","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MotivateAfterOptions.js":"16","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/SmallerAmounts.js":"17","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanAction.js":"18","/Users/anders/dev/Bea/bea-be-2/client/src/reducers/auth.js":"19","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateWeekly.js":"20","/Users/anders/dev/Bea/bea-be-2/client/src/App.js":"21","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Footer.js":"22","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Sidebar.js":"23","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan.js":"24","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Termsconditions.js":"25","/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Signup.js":"26","/Users/anders/dev/Bea/bea-be-2/client/src/components/routing/Routes.js":"27","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videodata.js":"28","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videoselection.js":"29","/Users/anders/dev/Bea/bea-be-2/client/src/actions/postPlanResults.js":"30","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/dashboard/DashboardSections.js":"31","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanMonthly.js":"32","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/config.js":"33","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanHeader.js":"34","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanSubmit.js":"35","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningIntro.js":"36","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest1.js":"37","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/LessSugar.js":"38","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/EmotionalBehavioral.js":"39","/Users/anders/dev/Bea/bea-be-2/client/src/reducers/planResult.js":"40","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Meditate.js":"41","/Users/anders/dev/Bea/bea-be-2/client/src/utils/api.js":"42","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/PlanPastDay.js":"43","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/ActionProvider.js":"44","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanBody.js":"45","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/Options.js":"46","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MotivateAfter.js":"47","/Users/anders/dev/Bea/bea-be-2/client/src/reducers/alert.js":"48","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate2.js":"49","/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Login.js":"50","/Users/anders/dev/Bea/bea-be-2/client/src/components/routing/PrivateRoute.js":"51","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/DisplayPlanResults.js":"52","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanMain.js":"53","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MessageParser.js":"54","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/ActionProvider.js":"55","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Spinner.js":"56","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanMonthlyLineItem.js":"57","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanGoal.js":"58","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/SmallerPortions.js":"59","/Users/anders/dev/Bea/bea-be-2/client/src/reducers/motivateResult.js":"60","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/PlanHeader.js":"61","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/HowDoYouFeel.js":"62","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Privacy.js":"63","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Testpopuptwo.js":"64","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan3.js":"65","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/config.js":"66","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/calendar.js":"67","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateSections.js":"68","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanSubmit.js":"69","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/InitialEatingLength.js":"70","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FullnessFeel.js":"71","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan2.js":"72"},{"size":362,"mtime":1620325297172,"results":"73","hashOfConfig":"74"},{"size":25609,"mtime":1627398081247,"results":"75","hashOfConfig":"74"},{"size":326,"mtime":1620325297165,"results":"76","hashOfConfig":"74"},{"size":438,"mtime":1620325297164,"results":"77","hashOfConfig":"74"},{"size":1163,"mtime":1626348158480,"results":"78","hashOfConfig":"74"},{"size":3129,"mtime":1620325297161,"results":"79","hashOfConfig":"74"},{"size":1568,"mtime":1627393590839,"results":"80","hashOfConfig":"74"},{"size":12447,"mtime":1627393590839,"results":"81","hashOfConfig":"74"},{"size":4489,"mtime":1620329634908,"results":"82","hashOfConfig":"74"},{"size":1883,"mtime":1620325297166,"results":"83","hashOfConfig":"74"},{"size":4519,"mtime":1627234525033,"results":"84","hashOfConfig":"74"},{"size":2441,"mtime":1623259289770,"results":"85","hashOfConfig":"74"},{"size":9398,"mtime":1627396825379,"results":"86","hashOfConfig":"74"},{"size":510,"mtime":1620325297162,"results":"87","hashOfConfig":"74"},{"size":2483,"mtime":1626348158479,"results":"88","hashOfConfig":"74"},{"size":1559,"mtime":1623259289769,"results":"89","hashOfConfig":"74"},{"size":982,"mtime":1620325297164,"results":"90","hashOfConfig":"74"},{"size":1427,"mtime":1623259289771,"results":"91","hashOfConfig":"74"},{"size":1656,"mtime":1620325297172,"results":"92","hashOfConfig":"74"},{"size":2807,"mtime":1627393590841,"results":"93","hashOfConfig":"74"},{"size":3654,"mtime":1623259289767,"results":"94","hashOfConfig":"74"},{"size":1274,"mtime":1620325297164,"results":"95","hashOfConfig":"74"},{"size":6935,"mtime":1627502750869,"results":"96","hashOfConfig":"74"},{"size":29514,"mtime":1620325297165,"results":"97","hashOfConfig":"74"},{"size":354,"mtime":1620325297166,"results":"98","hashOfConfig":"74"},{"size":1668,"mtime":1620325297161,"results":"99","hashOfConfig":"74"},{"size":2985,"mtime":1627393590843,"results":"100","hashOfConfig":"74"},{"size":2274,"mtime":1620325297166,"results":"101","hashOfConfig":"74"},{"size":2613,"mtime":1620329198870,"results":"102","hashOfConfig":"74"},{"size":4602,"mtime":1627393590838,"results":"103","hashOfConfig":"74"},{"size":4745,"mtime":1627393590841,"results":"104","hashOfConfig":"74"},{"size":6256,"mtime":1627393590842,"results":"105","hashOfConfig":"74"},{"size":5683,"mtime":1623259289770,"results":"106","hashOfConfig":"74"},{"size":4429,"mtime":1627397213830,"results":"107","hashOfConfig":"74"},{"size":3866,"mtime":1626348158479,"results":"108","hashOfConfig":"74"},{"size":1126,"mtime":1623259289770,"results":"109","hashOfConfig":"74"},{"size":751,"mtime":1620325297162,"results":"110","hashOfConfig":"74"},{"size":974,"mtime":1620325297163,"results":"111","hashOfConfig":"74"},{"size":871,"mtime":1620325297163,"results":"112","hashOfConfig":"74"},{"size":2345,"mtime":1627393590844,"results":"113","hashOfConfig":"74"},{"size":2815,"mtime":1620325297165,"results":"114","hashOfConfig":"74"},{"size":659,"mtime":1620325297174,"results":"115","hashOfConfig":"74"},{"size":9408,"mtime":1627393590840,"results":"116","hashOfConfig":"74"},{"size":17538,"mtime":1627393590839,"results":"117","hashOfConfig":"74"},{"size":9100,"mtime":1627499393763,"results":"118","hashOfConfig":"74"},{"size":12577,"mtime":1627499101407,"results":"119","hashOfConfig":"74"},{"size":512,"mtime":1620325297162,"results":"120","hashOfConfig":"74"},{"size":371,"mtime":1620325297172,"results":"121","hashOfConfig":"74"},{"size":6670,"mtime":1626348158480,"results":"122","hashOfConfig":"74"},{"size":2663,"mtime":1620325297161,"results":"123","hashOfConfig":"74"},{"size":695,"mtime":1620325297166,"results":"124","hashOfConfig":"74"},{"size":3579,"mtime":1627234525031,"results":"125","hashOfConfig":"74"},{"size":4181,"mtime":1627393590842,"results":"126","hashOfConfig":"74"},{"size":2358,"mtime":1623259289769,"results":"127","hashOfConfig":"74"},{"size":31575,"mtime":1623259289770,"results":"128","hashOfConfig":"74"},{"size":258,"mtime":1620325297166,"results":"129","hashOfConfig":"74"},{"size":4584,"mtime":1627393590842,"results":"130","hashOfConfig":"74"},{"size":976,"mtime":1620325297163,"results":"131","hashOfConfig":"74"},{"size":1005,"mtime":1620325297164,"results":"132","hashOfConfig":"74"},{"size":2104,"mtime":1627393590844,"results":"133","hashOfConfig":"74"},{"size":3877,"mtime":1627393590840,"results":"134","hashOfConfig":"74"},{"size":1503,"mtime":1627499155287,"results":"135","hashOfConfig":"74"},{"size":330,"mtime":1620325297165,"results":"136","hashOfConfig":"74"},{"size":0,"mtime":1620325297166,"results":"137","hashOfConfig":"74"},{"size":9601,"mtime":1627393590840,"results":"138","hashOfConfig":"74"},{"size":7571,"mtime":1626348158480,"results":"139","hashOfConfig":"74"},{"size":3056,"mtime":1627393590843,"results":"140","hashOfConfig":"74"},{"size":4941,"mtime":1627393590841,"results":"141","hashOfConfig":"74"},{"size":4168,"mtime":1626348158480,"results":"142","hashOfConfig":"74"},{"size":2179,"mtime":1623259289769,"results":"143","hashOfConfig":"74"},{"size":2050,"mtime":1623259289769,"results":"144","hashOfConfig":"74"},{"size":1987,"mtime":1627503567442,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"138ny1l",{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"148"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"172"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"184"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"148"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"184"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"172"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"172"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"148"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"148"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"148"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anders/dev/Bea/bea-be-2/client/src/reportWebVitals.js",[],["307","308"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Navbar.js",["309","310","311","312"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Settings.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Alert.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate.js",["313","314","315"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Register.js",["316"],"import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n\n                <div className=\"block\">\n                    <div>\n                        \n                <h1 className=\"large text-primary\">Sign Up</h1>\n                <p className=\"lead\">\n                  <i className=\"fas fa-user\" /> Create Your Account\n                </p>\n                <form className=\"form\" onSubmit={onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      name=\"name\"\n                      value={name}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"email\"\n                      placeholder=\"Email Address\"\n                      name=\"email\"\n                      value={email}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      name=\"password2\"\n                      value={password2}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n                </form>\n                <p className=\"my-1\">\n                  Already have an account? <Link to=\"/login\">Sign In</Link>\n                </p>\n\n              </div>\n                </div>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);","/Users/anders/dev/Bea/bea-be-2/client/src/actions/types.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Dashboard.js",["317","318","319","320"],"import React from 'react'\n// import Login from '../auth/Login';\n// import planIllustration from '../../img/plan-illustration.svg';\n// import arrowRight from '../../img/arrow-right.svg';\n// import smileyIcon from '../../img/smiley-icon.svg';\n// import smileyIconExtraHappy from '../../img/smiley-icon-extrahappy.svg';\n// import smileyIconNeutral from '../../img/smiley-icon-neutral.svg';\n// import smileyIconUnhappy from '../../img/smiley-icon-unhappy.svg';\nimport smileyIconRound from '../../img/smiley-icon-round.svg';\nimport planIconWhite from '../../img/plan-icon-white.svg';\n// import heartIcon from '../../img/heart-icon.svg';\n// import bowlIcon from '../../img/bowl-icon.svg';\n// import newspaperIcon from '../../img/newspaper-icon.svg';\n// import smileyIconUnhappyRound from '../../img/smiley-icon-unhappy-round.svg';\nimport {Line} from 'react-chartjs-2';\nimport chartTrendline from \"chartjs-plugin-trendline\";\nimport GaugeChart from 'react-gauge-chart';\n\nimport DashboardSections from './dashboard/DashboardSections';\nimport Videoselection from './Videoselection';\nimport { Videodata } from \"./Videodata\";\n\nconst data = {\n    labels: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'],\n    datasets: [\n      {\n        label: 'Mood',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(128,128,128,1)',\n        borderCapStyle: 'butt',\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: 'rgba(75,192,192,1)',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 6,\n        pointHitRadius: 10,\n\n        trendlineLinear: {\n            style: \"rgb(128, 55, 202, 1)\",\n            lineStyle: \"dotted|solid\",\n            width: 2\n        },\n\n        data: [65, 59, null, 80, 81, 32, 56, 55, 40, 12, 45, 32, 23, 67, 32, 34, 21, 10, 8, 12, 56, null, 13, 18, 28, 64, 24, 31, 35, 19]\n      }\n    ]\n  };\n\n  const options = {\n    maintainAspectRatio: true,\n    spanGaps: false,\n    legend:\n    {\n        display: false,\n    },\n    scales:\n    {\n        yAxes: [{\n            display: false,\n            gridLines : {\n                display : false\n            }\n        }],\n        xAxes: [{\n            gridLines : {\n                display : true,\n                drawBorder: true,\n                lineWidth: 1,\n                drawOnChartArea: false\n            }\n        }]\n    }\n  };\n\nexport const Dashboard = () => {\n    return (\n        <section>\n            <div className=\"flex mx-auto p-4\">\n                <div className=\"flex flex-col flex-grow\">\n                    <div className=\"flex flex-row flex-grow mb-3\">\n                        <div className=\"flex flex-grow w-full items-center rounded-xl mr-3 bg-contain bg-no-repeat bg-right-bottom flex flex-col p-6 bg-beaDarkBlue\">\n                            <h4 className=\"text-base leading-6 font-bold text-white uppercase mb-4\">\n                                Plan\n                            </h4>\n                            <img src={planIconWhite} className=\"w-14 mb-3\" />\n                            <label className=\"text-4xl leading-6 font-bold text-white uppercase\">43%</label>\n                            <label className=\"text-xl font-thin text-white mb-4\">Complete Today</label>\n                            <button type=\"button\" className=\"btn-white mt-1\">\n                                Continue\n                            </button>\n                        </div>\n                        <div className=\"flex flex-grow w-full items-center rounded-xl mr-3 bg-contain bg-no-repeat bg-right-bottom flex flex-col p-6 bg-beaStrongOrange\">\n                            <h4 className=\"text-base leading-6 font-bold text-white uppercase mb-4\">\n                                Motivate\n                            </h4>\n                            <img src={planIconWhite} className=\"w-14 mb-3\" />\n                            <label className=\"text-4xl leading-6 font-bold text-white uppercase\">43%</label>\n                            <label className=\"text-xl font-thin text-white mb-4\">Complete Today</label>\n                            <button type=\"button\" className=\"btn-white mt-1\">\n                                View Results\n                            </button>\n                        </div>\n                        <div className=\"flex flex-grow w-full items-center rounded-xl bg-contain bg-no-repeat bg-right-bottom flex flex-col p-6 bg-beaPurple\">\n                            <h4 className=\"text-base leading-6 font-bold text-white uppercase mb-4\">\n                                Meditate\n                            </h4>\n                            <img src={planIconWhite} className=\"w-14 mb-3\" />\n                            <label className=\"text-4xl leading-6 font-bold text-white uppercase\">43%</label>\n                            <label className=\"text-xl font-thin text-white mb-4\">Complete Today</label>\n                            <button type=\"button\" className=\"btn-white mt-1\">\n                                Meditate Now\n                            </button>\n                        </div>\n                    </div>\n                    <DashboardSections />\n\n                    <div className=\"flex bg-white overflow-hidden border border-gray-400 rounded-xl mb-3 p-10 items-start\">\n                        <div className=\"flex flex-col items-center w-72\">\n                            <img src={smileyIconRound} alt=\"Round Smiley Icon\" className=\"w-36 mb-3\" />\n                            <p className=\"mt-1 max-w-2xl text-sm text-gray-500 mb-0\">\n                                You've been feeling 52%\n                            </p>\n                            <h3 className=\"text-4xl text-gray-900 font-extralight mb-0\">\n                                Pretty Good\n                            </h3>\n                            <p className=\"mt-1 text-sm text-gray-500 mb-0 text-center\">\n                                about your eating these days. It’s mostly because of <strong>something physical</strong>.\n                            </p>\n                        </div>\n                        <div className=\"flex flex-col flex-grow mb-3 px-4 py-3 sm:px-6 items-center\">\n                            <h4 className=\"text-base font-medium text-beaBlueText font-bold mb-3 uppercase\">\n                                Mood Eating\n                            </h4>\n                            <div className=\"w-full h-48 mb-20\">\n                                <Line\n                                    data={data}\n                                    width={100}\n                                    height={30}\n                                    options={options}\n                                />\n                            </div>\n                            <button type=\"button\" className=\"btn-darkPurpleInvert\">        \n                                More Plan Results\n                            </button>\n                        </div>\n                    </div>\n\n\n                    <div className=\"flex bg-white overflow-hidden border border-gray-400 rounded-xl mb-3 p-10 items-start\">\n                        <div className=\"flex flex-col items-center w-72\">\n                        <div className=\"w-48 mb-3\">\n                            <GaugeChart id=\"gauge-chart3\"\n                                nrOfLevels={2} \n                                colors={[\"#FFAD33\", \"#ECEFF1\"]} \n                                arcsLength={[0.37, 0.63]}\n                                arcWidth={0.45} \n                                percent={0.37} \n                                arcPadding={0}\n                                cornerRadius={0}\n                                textColor={\"#000000\"}\n                                needleColor={\"#58585E\"}\n                                needleBaseColor={\"#CFD8DC\"}\n                                formatTextValue={value => 'Very tempted'}\n                                hideText={true}\n                                />\n                            </div>\n                            <h3 className=\"text-4xl text-gray-900 font-extralight mb-0\">\n                                Very Tempted\n                            </h3>\n                            <p className=\"mt-1 text-sm text-gray-500 mb-0 text-center\">\n                                to eat in a way not ideal\n                            </p>\n                        </div>\n                        <div className=\"flex flex-col flex-grow mb-3 px-4 py-3 sm:px-6 items-center\">\n                            <h4 className=\"text-base font-medium text-beaBlueText font-bold mb-3 uppercase\">\n                                Eating Temptation Level\n                            </h4>\n                            <div className=\"w-full h-48 mb-20\">\n                                <Line\n                                    data={data}\n                                    width={100}\n                                    height={30}\n                                    options={options}\n                                />\n                            </div>\n                            <button type=\"button\" className=\"btn-darkPurpleInvert\">        \n                                More Motivate Results\n                            </button>\n                        </div>\n                    </div>\n\n\n\n                    <div className=\"flex bg-white overflow-hidden border border-gray-400 rounded-xl mb-3 p-10 items-start\">\n                        <div className=\"flex flex-col flex-grow mb-3 px-4 py-3 sm:px-6 items-center\">\n                            <h4 className=\"text-base font-medium text-beaBlueText font-bold mb-3 uppercase\">\n                            FAVORITE MEDITATIONS\n                            </h4>\n                            <div className=\"w-full mb-10\">\n\n                            <ul className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 mr-4 gap-4 w-full\">\n                                {Videodata.map((data, key) => {\n                                    return (\n                                        <div key={key}>\n                                        <Videoselection\n                                            id={data.id}\n                                            title={data.title}\n                                            length={data.length}\n                                            img={data.img}\n                                            imgalt={data.imgalt}\n                                            vidurl={data.vidurl}\n                                        />\n                                        </div>\n                                    );\n                                    })}\n                                </ul>\n\n                            </div>\n                            <button type=\"button\" className=\"btn-darkPurpleInvert\">        \n                                More Meditations\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"w-72 min-w-72 pl-3\">\n                    <div className=\"flex justify-center items-center w-full h-72 rounded-xl bg-gray-300 w-72\">\n                        <button type=\"button\" className=\"relative inline-flex items-center px-6 py-2 shadow-none text-sm font-medium rounded-full text-beaDarkPurple hover:bg-beaDarkPurple hover:text-white transition-all border-t border-b border-l border-r border-beaDarkPurple group focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                        <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg>\n                        Call to Action\n                        </button>\n                    </div>\n                </div>  \n            </div>\n        </section>      \n\n    )\n}\n\nexport default Dashboard;","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/MeditateVidSection.js",["321","322","323"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videomodal.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Testpage.js",["324","325","326","327","328"],"import React, { useState } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport DisplayPlanResults from './DisplayPlanResults';\nimport DisplayMotivateResults from './DisplayMotivateResults';\nimport { postPlanResults } from '../../actions/postPlanResults';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nexport const Testpage = () => {\n\n\n    const [formData, setFormData] = useState({\n       // user: user._id,\n        lastblockvisited: \"this\",\n        howdoyoufeel: \"is\",\n        howdoyoufeelint: 2,\n        planjournal: \"a\",\n        stayedontrack: \"test\",\n        planbadblock: \"\",\n        what2change: \"\",\n        influencedeating: \"\",\n        whathappened: \"\",\n        somethingelsebad: \"\",\n        plangoal: \"\",\n        plangoal2: \"\",\n        plangoal3: \"\",\n        plangoal4: \"\"\n    });\n\n    // const { name, email, password, password2 } = formData;\n    const {\n      // lastblockvisited,\n      howdoyoufeel\n      // planjournal,\n      // stayedontrack,\n      // planbadblock,\n      // what2change,\n      // influencedeating,\n      // whathappened,\n      // somethingelsebad,\n      // plangoal,\n      // plangoal2,\n      // plangoal3,\n      // plangoal4\n    } = formData\n  \n    const onChange = (e) =>\n      setFormData({ ...formData, [e.target.name]: e.target.value });\n  \n    const onSubmit = async (e) => {\n      console.log('in on submit command');\n      e.preventDefault();\n    //   postPlanResults(\n    //     formData\n        // lastblockvisited,\n        // howdoyoufeel,\n        // planjournal,\n        // stayedontrack,\n        // planbadblock,\n        // what2change,\n        // influencedeating,\n        // whathappened,\n        // somethingelsebad,\n        // plangoal,\n        // plangoal2,\n        // plangoal3,\n        // plangoal4\n     // );\n     // console.log('in on submit command2', formData);\n      // try {\n      //   const config = {\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     }\n      //   }\n      //   const body = JSON.stringify(formData)\n      //   const res = await axios.post('/api/planResults', body, config)\n      // } catch(err){\n\n      // }\n      let dateArray = [];\n      let i = 0;\n      while (i < 31 ) {\n          let day = new Date();\n          console.log(\"day currently contains \", day);\n          dateArray.push(day);\n//        text += \"The number is \" + i;\n        i++;\n      }\n      console.log(\"date array contains \", dateArray);\n      // below code works for 30 days plus, needs to be modified for minus\n      var resolution = 30,\n      results = [],\n      start = Date.now(),\n      end = start + (30 * 86400000),\n      delta = start - end\n      // delta = end - start\n\n    for (let i = 0; i < resolution; i++) {\n      let t = (delta / resolution) * i\n      results.push(new Date(start + t))\n    }\n\n        console.log(results)\n    };\n  \n  \n    return (\n  \n                  <div className=\"block\">\n                      <div>\n                          \n                  <h1 className=\"large text-primary\">Test submit information</h1>\n                  <p className=\"lead\">\n                    {/* <i className=\"fas fa-user\" /> This is a test submit form for backend work, if curious about what shows up \n                    check console in inspect mode. */}\n                    This is a test page to display results from the Plan chat that have been completed by test user\n                  </p>\n                   <form className=\"form\" onSubmit={onSubmit}>\n                    <div className=\"form-group\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"HowDoYouFeel\"\n                        name=\"howdoyoufeel\"\n                        value={howdoyoufeel}\n                        onChange={onChange}\n                      />\n                    </div> \n                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit\" />\n                  </form>\n                    {/* <DisplayPlanResults userid={user._id}/> */}\n                    <br/><br/>\n                    {/* <DisplayMotivateResults userid={user._id}/> */}\n                </div>\n                  </div>\n    );\n  };\n  \n\n //  export default Testpage;\n Testpage.propTypes = {\n    user: PropTypes.object.isRequired\n  };\n  const mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n  });\n  export default connect(mapStateToProps, { postPlanResults })(Testpage);",["329","330"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/MessageParser.js",["331"],"import React from \"react\";\n\n// MessageParser starter code\nclass MessageParser {\n    constructor(actionProvider, state) {\n      this.actionProvider = actionProvider;\n      this.state = state;\n    }\n\n    parse(message) {\n      console.log(message)\n      console.log(\"State contains\", this.state)\n      console.log(\"State flag contains\", this.state.waitingformsgflag)\n      const lowerCaseMessage = message.toLowerCase()\n      if(this.state.waitingformsgflag){\n        console.log(\"flag was true\");\n        if(this.state.lastblockvisited === \"Plan Good Block\"){\n          this.actionProvider.plangoodjournal2(message)\n        }\n        if(this.state.lastblockvisited === \"Emotional Behavioral\"){\n          this.actionProvider.planbadjournal2(message)\n        }\n        if(this.state.lastblockvisited === \"Food Choices\"){\n          this.actionProvider.somethingelse2(message)\n        }\n        if(this.state.lastblockvisited === \"Different Foods\"){\n          this.actionProvider.emotionalbehavioral(message)\n        }\n        if(this.state.lastblockvisited === \"Something Else\"){\n          this.actionProvider.somethingelse3(message)\n        }\n      }\n      else {\n      if (lowerCaseMessage.includes(\"shit\") || lowerCaseMessage.includes(\"fuck\") || lowerCaseMessage.includes(\"pussy\") || lowerCaseMessage.includes(\"dick\") || lowerCaseMessage.includes(\"asshole\") || lowerCaseMessage.includes(\"bitch\") || lowerCaseMessage.includes(\"fucker\") || lowerCaseMessage.includes(\"cunt\")) {\n        this.actionProvider.nofoulwords()\n      }\n      else if (lowerCaseMessage.includes(\"die\") || lowerCaseMessage.includes(\"suicide\") || lowerCaseMessage.includes(\"harm\") || lowerCaseMessage.includes(\"kill\") || lowerCaseMessage.includes(\"death\") || lowerCaseMessage.includes(\"dying\") || lowerCaseMessage.includes(\"cut\") || lowerCaseMessage.includes(\"hurt myself\")) {\n        this.actionProvider.emergency()\n      }\n      else if (lowerCaseMessage.includes(\"therapy\") || lowerCaseMessage.includes(\"therapist\") || lowerCaseMessage.includes(\"psychologist\") || lowerCaseMessage.includes(\"psychotherapist\")) {\n        this.actionProvider.findtherapist()\n      }            \n      else if (lowerCaseMessage.includes(\"hello\") || lowerCaseMessage.includes(\"hi\") || lowerCaseMessage.includes(\"bea\")) {\n        this.actionProvider.greet()\n      }     \n      else {\n          this.actionProvider.dontunderstand()\n      }\n    }\n  }\n    \n  }\n  \n  export default MessageParser;","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanDaily.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AreyouReady.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/HowTempted.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MotivateAfterOptions.js",[],["332","333"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/SmallerAmounts.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanAction.js",[],["334","335"],"/Users/anders/dev/Bea/bea-be-2/client/src/reducers/auth.js",["336"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateWeekly.js",["337","338","339","340","341"],"import React from 'react'\nimport { Component } from 'react';\nimport * as d3 from \"d3\";\nimport GaugeChart from 'react-gauge-chart';\nimport appleIcon from '../../../img/apple-icon.svg';\nimport calendarIcon from '../../../img/calendar-icon.svg';\nimport hungryIcon from '../../../img/hungry-icon.svg';\nimport MotivateSections from './MotivateSections';\n\nclass MotivateWeekly extends Component {\n    state = {\n        show: false\n      };\n      showModal = e => {\n        this.setState({\n          show: !this.state.show\n        });\n      };\n      onClose = e => {\n        this.props.onClose && this.props.onClose(e);\n      };\n    render() {\n    return (\n\n<section>\n  {/* <div className=\"flex mx-auto p-4\">\n      <div className=\"flex flex-col flex-grow\"> */}\n          <div className=\"border border-gray-200 rounded-xl p-10 my-4\">\n            <div className=\"w-96\">\n                <GaugeChart id=\"gauge-chart3\"\n                    nrOfLevels={2} \n                    colors={[\"#FFAD33\", \"#ECEFF1\"]} \n                    arcsLength={[0.37, 0.63]}\n                    arcWidth={0.45} \n                    percent={0.37} \n                    arcPadding={0}\n                    cornerRadius={0}\n                    textColor={\"#000000\"}\n                    needleColor={\"#58585E\"}\n                    needleBaseColor={\"#CFD8DC\"}\n                    formatTextValue={value => 'Very tempted'}\n                    hideText={true}\n                    />\n                </div>\n            <div className=\"w-full bg-beaOrange p-2 rounded-full flex items-center justify-between\">\n                <div className=\"bg-gray-50 bg-opacity-50 uppercase font-bold text-beaOrange py-3 px-4 text-xl rounded-full\">BEA's Tips</div>\n                <div className=\"m-3 text-lg text-white\">Oh no! It looks like you’re in the beginning stages of getting off track. Bea has some tips to make sure you don’t derail.</div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-16 w-16 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n                </svg>\n            </div>\n          </div> \n           <div className=\"flex flex-grow w-full\">\n            <div className=\"w-full border border-gray-200 rounded-xl p-10 mr-2\">\n                <div className=\"text-beaDarkBlue uppercase text-center font-bold\">Visualizations: Triggers</div>\n            </div>\n            <div className=\"w-full border border-gray-200 rounded-xl p-10 ml-2\">\n                <div className=\"text-beaDarkBlue uppercase text-center font-bold\">Visualizations: Evaluating Mood</div>\n            </div>\n          </div>\n      {/* </div>\n    </div> */}\n  </section>\n\n\n    )}\n}\n\nexport default MotivateWeekly;","/Users/anders/dev/Bea/bea-be-2/client/src/App.js",["342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, useLocation, withRouter } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Sidebar from './components/layout/Sidebar';\nimport Footer from './components/layout/Footer';\nimport Dashboard from './components/layout/Dashboard';\nimport Meditate from './components/layout/Meditate';\nimport Motivate from './components/layout/Motivate';\nimport Motivate2 from './components/layout/Motivate2';\nimport Plan from './components/layout/Plan';\nimport Plan2 from './components/layout/Plan2';\nimport TestPlanSubmit from './components/layout/TestPlanSubmit';\nimport Helpcenter from './components/layout/Helpcenter';\nimport Settings from './components/layout/Settings';\nimport Termsconditions from './components/layout/Termsconditions';\nimport Privacy from './components/layout/Privacy';\nimport Alert from './components/layout/Alert';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport Register from './components/auth/Register';\nimport CalendarPage from './components/layout/CalendarPage';\nimport Routes from './components/routing/Routes';\nimport { LOGOUT } from './actions/types';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\nconst App = () => {\n  useEffect(() => {\n    // check for token in LS\n\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    store.dispatch(loadUser());\n\n    // log user out from all tabs if they log out in one tab\n    window.addEventListener('storage', () => {\n      if (!localStorage.token) store.dispatch({ type: LOGOUT });\n    });\n  }, []);\n\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n        <Sidebar/>\n        <section >\n      <div className=\"flex-grow w-full mx-auto lg:px-0 flex\">\n      <div className=\"flex-1 min-w-0 lg:flex\">\n      <div className=\"bg-white lg:min-w-0 lg:flex-1 z-20 lg:ml-52 mt-16\">\n              \n\n        <div className=\"flex flex-col w-full\">\n        <div className=\"mb-2\">\n          <Alert />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route component={Routes} />\n            {/* <Route exact path='/dashboard' component={Dashboard} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/meditate\" component={Meditate} />\n            <Route exact path=\"/motivate\" component={Motivate} />\n            <Route exact path=\"/calendarpage\" component={CalendarPage} />\n            <Route exact path=\"/plan\" component={Plan} onClick={() => setColor(\"#2898ec\")} />\n            <Route exact path=\"/plan2\" component={Plan2} />\n            <Route exact path=\"/testplansubmit\" component={TestPlanSubmit} />\n            <Route exact path=\"/privacy\" component={Privacy} />\n            <Route exact path=\"/termsconditions\" component={Termsconditions} />\n            <Route exact path=\"/helpcenter\" component={Helpcenter} />\n            <Route exact path=\"/settings\" component={Settings} />\n            <Route exact path=\"/register\" component={Register} /> */}\n          </Switch>\n          </div>\n              </div>\n              \n          </div>\n          </div>\n          </div>\n      </section>\n        <Footer/>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\n\nexport default App;","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Footer.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Sidebar.js",["359","360","361"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan.js",["362"],"import React from 'react'\nimport planIllustration from '../../img/plan-illustration.svg';\nimport arrowRight from '../../img/arrow-right.svg';\nimport smileyIcon from '../../img/smiley-icon.svg';\nimport smileyIconExtraHappy from '../../img/smiley-icon-extrahappy.svg';\nimport smileyIconNeutral from '../../img/smiley-icon-neutral.svg';\nimport smileyIconUnhappy from '../../img/smiley-icon-unhappy.svg';\nimport smileyIconRound from '../../img/smiley-icon-round.svg';\nimport heartIcon from '../../img/heart-icon.svg';\nimport bowlIcon from '../../img/bowl-icon.svg';\nimport newspaperIcon from '../../img/newspaper-icon.svg';\nimport smileyIconUnhappyRound from '../../img/smiley-icon-unhappy-round.svg';\nimport {Line} from 'react-chartjs-2';\nimport chartTrendline from \"chartjs-plugin-trendline\";\n\n\nconst data = {\n    labels: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'],\n    datasets: [\n      {\n        label: 'Mood',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(128,128,128,1)',\n        borderCapStyle: 'butt',\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: 'rgba(75,192,192,1)',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 6,\n        pointHitRadius: 10,\n\n        trendlineLinear: {\n            style: \"rgb(128, 55, 202, 1)\",\n            lineStyle: \"dotted|solid\",\n            width: 2\n        },\n\n        data: [65, 59, null, 80, 81, 32, 56, 55, 40, 12, 45, 32, 23, 67, 32, 34, 21, 10, 8, 12, 56, null, 13, 18, 28, 64, 24, 31, 35, 19]\n      }\n    ]\n  };\n\n  const options = {\n    maintainAspectRatio: true,\n    spanGaps: false,\n    legend:\n    {\n        display: false,\n    },\n    scales:\n    {\n        yAxes: [{\n            display: false,\n            gridLines : {\n                display : false\n            }\n        }],\n        xAxes: [{\n            gridLines : {\n                display : true,\n                drawBorder: true,\n                lineWidth: 1,\n                drawOnChartArea: false\n            }\n        }]\n    }\n  };\n\nexport const Plan = () => {\n    return (\n        <section>\n            <div className=\"flex mx-auto p-4\">\n                <div className=\"flex flex-col flex-grow\">\n                    <div style={{ backgroundImage: \"url(\" + planIllustration + \"), linear-gradient(rgba(177, 201, 243, 0.9), rgba(173, 126, 227, 0.9), rgba(139, 99, 178, 0.9))\" }} className=\"flex rounded-xl mb-3 bg-contain bg-no-repeat bg-right-bottom flex flex-col p-6\">\n                        <div className=\"mb-4\">\n                            <h3 className=\"text-sm leading-6 font-medium text-white uppercase font-black tracking-widest mb-1\">\n                                Your Plan Today\n                            </h3>                        \n                        </div>\n                        <div className=\"flex flex-row w-full justify-between\">\n                            <div className=\"flex\">\n                                <div className=\"flex flex-col w-48\">\n                                    <div className=\"w-24 h-24 bg-gray-100 bg-opacity-50 rounded-3xl mb-2.5\"></div>\n                                    <div className=\"\">\n                                        <h4 className=\"text-sm leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                            Your main goal is to eat\n                                        </h4>\n                                        <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                            smaller amounts and to stop eating when full\n                                        </h5>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"flex w-48\">\n                                <div className=\"flex flex-col\">\n                                    <div className=\"w-24 h-24 bg-gray-100 bg-opacity-50 rounded-3xl mb-2.5\"></div>\n                                    <div className=\"\">\n                                        <h4 className=\"text-sm leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                            When you feel the urge to eat\n                                        </h4>\n                                        <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                            take a walk\n                                        </h5> \n                                    </div>\n                                </div>                            \n                            </div>\n                            <div className=\"flex w-48 justify-end pr-10\">\n                                <img src={arrowRight} alt=\"arrow right\" className=\"w-24\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mb-3\">\n                        <Line\n                            data={data}\n                            width={100}\n                            height={15}\n                            options={options}\n                        />\n                    </div>\n                    <div className=\"bg-beaYellow plan-interactive-state\">\n                        <div className=\"sm:p-6 flex-grow\">\n                            <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                                Keep up the good work!\n                            </h3>\n                            <div className=\"mt-2 max-w-xl text-md text-white\">\n                            <p>\n                                Your mood eating has on average been great for the past 30 days.\n                            </p>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"button\" className=\"btn-white\">\n                                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                                    Stay on Track Tips\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex pr-10 align-middle\">\n                            <img src={smileyIconExtraHappy} alt=\"Extra Happy Smiley\" className=\"w-36\" />\n                        </div>\n                    </div>\n\n\n                    <div className=\"bg-beaOrange plan-interactive-state\">\n                        <div className=\"sm:p-6 flex-grow\">\n                            <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                                Keep up the good work!\n                            </h3>\n                            <div className=\"mt-2 max-w-xl text-md text-white\">\n                            <p>\n                                Your mood eating has on average been pretty good for the past 30 days.\n                            </p>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"button\" className=\"btn-white\">\n                                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                                    Stay on Track Tips\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex pr-10 align-middle\">\n                            <img src={smileyIcon} alt=\"Smiley Icon\" className=\"w-36\" />\n                        </div>\n                    </div>\n\n                    <div className=\"bg-beaBlueGreen plan-interactive-state\">\n                        <div className=\"sm:p-6 flex-grow\">\n                            <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                                Keep up the good work!\n                            </h3>\n                            <div className=\"mt-2 max-w-xl text-md text-white\">\n                            <p>\n                                Your mood eating has on average been not good for the past 30 days.\n                            </p>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"button\" className=\"btn-white\">\n                                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                                    Getting Back on Track Tips\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex pr-10 align-middle\">\n                            <img src={smileyIconNeutral} alt=\"Neutral Smiley Face\" className=\"w-36\" />\n                        </div>\n                    </div>\n\n                    <div className=\"bg-beaDarkBlue plan-interactive-state\">\n                        <div className=\"sm:p-6 flex-grow\">\n                            <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                                Keep up the good work!\n                            </h3>\n                            <div className=\"mt-2 max-w-xl text-md text-white\">\n                            <p>\n                                Your mood eating has on average been horrible for the past 30 days.\n                            </p>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"button\" className=\"btn-white\">\n                                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                                    Getting Back on Track Tips\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex pr-10 align-middle\">\n                            <img src={smileyIconUnhappy} alt=\"Unhappy Smiley Icon\" className=\"w-36\" />\n                        </div>\n                    </div>\n\n\n                    <div className=\"bg-gradient-to-r from-beaLightBlue to-gray-50 plan-interactive-state\">\n                        <div className=\"sm:p-6 flex-grow\">\n                            <h3 className=\"text-2xl leading-6 font-thin text-gray-700\">\n                                Get your mood eating trends\n                            </h3>\n                            <div className=\"mt-2 max-w-xl text-md text-gray-700 font-light\">\n                            <p>\n                                When you upgrade you’ll unlock access to all your data which will help keep you on track.\n                            </p>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"button\" className=\"btn-darkPurple\">       \n                                    Upgrade Today\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className=\"flex bg-white overflow-hidden border border-gray-400 rounded-xl p-4 mb-3 items-start\">\n                        <img src={smileyIconRound} alt=\"Round Smiley Icon\" className=\"w-36\" />\n                        <div className=\"px-4 py-3 sm:px-6\">\n                            <p className=\"mt-1 max-w-2xl text-sm text-gray-500 mb-0\">\n                                How you felt about what you ate in the past day\n                            </p>\n                            <h3 className=\"text-4xl font-medium text-gray-900 font-extralight mb-3\">\n                                Pretty Good\n                            </h3>\n                            <div className=\"rounded-md bg-beaLightBlue p-4\">\n                                <div className=\"flex\">\n                                    <div className=\"flex-shrink-0\">\n                                        <img src={heartIcon} alt=\"Heart Icon\" className=\"w-5\" />\n                                    </div>\n                                    <div className=\"ml-3 flex-1 md:flex md:justify-between\">\n                                        <p className=\"text-sm text-blue-700 mb-0\">\n                                            <strong>Something emotional</strong> helped you stay on track for the following reason:\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <p className=\"mt-1 text-sm text-gray-700 max-w-prose leading-6\">\n                            Having a better relationship with food and feeling good about making the right food choices. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras mollis rhoncus ipsum ac faucibus. Quisque lectus dui, dignissim non ligula vitae, commodo interdum dui. Integer consectetur ultrices tellus ac sodales. Cras efficitur ipsum risus. Sed laoreet sapien vel ex viverra faucibus. Maecenas at bibendum magna, sed aliquet nibh. Vivamus ac libero in augue maximus euismod vitae ut leo. Vestibulum quis metus malesuada, lobortis diam sit amet, lacinia velit. Donec sit amet nisl arcu. In hac habitasse platea dictumst. Cras aliquet laoreet dui vitae dignissim. Praesent laoreet pellentesque nunc accumsan scelerisque. Proin diam risus, sollicitudin at eros id, volutpat porta orci. Duis at erat quis quam mollis condimentum ut ac magna. Quisque non blandit dui. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In mauris felis, facilisis ut cursus vel, efficitur vitae est. Nam nec metus sodales, pretium nisi at, sollicitudin odio.\n                            <br/><br/>\n                            Duis volutpat malesuada ornare. Sed metus lorem, faucibus ac placerat nec, rutrum finibus dolor. Curabitur consequat rhoncus risus. Donec eleifend convallis tristique. Quisque tempus ligula eu massa auctor, a aliquam eros consequat. Aenean non est elit. Donec commodo purus nisi, eget gravida tellus lobortis et. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Mauris tincidunt, quam vitae feugiat gravida, metus diam elementum sem, eget ornare enim felis at nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Maecenas blandit, elit eget rhoncus laoreet, justo leo dictum purus, ac porta massa sapien non felis.\n                            <br/><br/>\n                            In tincidunt tellus quis lobortis efficitur. Aliquam vestibulum sapien id dui venenatis, non ornare nunc ornare. Ut rhoncus diam sed rhoncus posuere. Vivamus a nunc non elit lacinia efficitur. Mauris sit amet turpis met.\n                            </p>\n                        </div>\n                    </div>\n\n\n\n\n                    <div>\n                        <ul className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-2\">\n                            <li className=\"col-span-1 flex flex-col text-center bg-white rounded-xl divide-y divide-gray-200 border border-gray-400\">\n                                <div className=\"flex-1 flex flex-col p-8 items-center\">\n                                    <span className=\"text-beaBlueText text-sm\">Goal</span>\n                                    <span className=\"mt-6 p-3 bg-beaLightBlue rounded-3xl flex items-center justify-center\">\n                                        <img src={bowlIcon} alt=\"Bowl Icon\" className=\"w-11\" />\n                                    </span>\n                                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">The most important goal for you to have today</span>\n                                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">Smaller amounts and stop eating when full</h2>\n                                    <span className=\"mt-6 p-2 border-2 border-beaLightBlue rounded-2xl flex items-center justify-center\">\n                                        <img src={newspaperIcon} alt=\"Newspaper Icon\" className=\"w-7\" />\n                                    </span>\n                                    <span className=\"mt-1 text-gray-700 text-sm font-bold uppercase tracking-wider\">BEA’S RECOMMENDED READ</span>\n                                    <span className=\"mt-1 mb-3 text-gray-700 text-sm font-light\">Healthy Eating: Recognizing Your Hunger Signals</span>\n                                    <button type=\"button\" className=\"btn-darkPurple\">       \n                                        Read Article\n                                    </button>\n                                </div>\n                            </li>\n                            <li className=\"col-span-1 flex flex-col text-center bg-white rounded-xl divide-y divide-gray-200 border border-gray-400\">\n                                <div className=\"flex-1 flex flex-col p-8 items-center\">\n                                    <span className=\"text-beaBlueText text-sm\">Goal</span>\n                                    <span className=\"mt-6 p-3 bg-beaLightBlue rounded-3xl flex items-center justify-center\">\n                                        <img src={bowlIcon}  alt=\"Bowl Icon\" className=\"w-11\" />\n                                    </span>\n                                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">The most important goal for you to have today</span>\n                                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">Smaller amounts and stop eating when full</h2>\n                                    <span className=\"mt-6 p-2 border-2 border-beaLightBlue rounded-2xl flex items-center justify-center\">\n                                        <img src={newspaperIcon} alt=\"Newspaper Icon\" className=\"w-7\" />\n                                    </span>\n                                    <span className=\"mt-1 text-gray-700 text-sm font-bold uppercase tracking-wider\">BEA’S RECOMMENDED READ</span>\n                                    <span className=\"mt-1 mb-3 text-gray-700 text-sm font-light\">Healthy Eating: Recognizing Your Hunger Signals</span>\n                                    <button type=\"button\" className=\"btn-darkPurple\">       \n                                        Read Article\n                                    </button>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n\n\n\n\n\n                    <div className=\"flex flex-col max-w-full overflow-hidden\">\n                        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                            <div className=\"overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                                <table className=\"min-w-full divide-y divide-gray-200\">\n                                <tbody className=\"bg-white divide-y divide-gray-200\">\n                                    <tr>\n                                        <td className=\"px-6 py-4\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"flex flex-col items-center\">\n                                                        <div className=\"text-xs font-light text-gray-700\">\n                                                        Today\n                                                        </div>\n                                                        <div className=\"text-3xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                        27\n                                                        </div>\n                                                </div>\n                                                <div className=\"flex ml-4 items-center justify-center\">\n                                                    <span className=\"p-1 mr-3 bg-beaLightBlue rounded-xl flex items-center justify-center\">\n                                                            <img src={bowlIcon} alt=\"Bowl Icon\" className=\"w-12\" />\n                                                    </span>\n                                                    <div>\n                                                        <div className=\"text-sm font-light text-gray-700\">\n                                                        Your main goal is to eat\n                                                        </div>\n                                                        <div className=\"text-xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                            smaller amounts and<br/>\n                                                            stop eating when full\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td className=\"px-2 py-4\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"flex ml-4 items-center justify-center\">\n                                                    <span className=\"p-1 mr-3 bg-beaLightBlue rounded-xl flex items-center justify-center\">\n                                                            <img src={bowlIcon} alt=\"Bowl Icon\" className=\"w-12\" />\n                                                    </span>\n                                                    <div>\n                                                        <div className=\"text-sm font-light text-gray-700\">\n                                                            When you feel the urge to eat\n                                                        </div>\n                                                        <div className=\"text-xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                            take a walk\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                            <img src={smileyIconUnhappyRound} alt=\"Unahppy Smiley Icon\" className=\"w-14\" />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"px-6 py-4\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"flex flex-col items-center\">\n                                                        <div className=\"text-xs font-light text-gray-700\">\n                                                        Today\n                                                        </div>\n                                                        <div className=\"text-3xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                        27\n                                                        </div>\n                                                </div>\n                                                <div className=\"flex ml-4 items-center justify-center\">\n                                                    <span className=\"p-1 mr-3 bg-beaLightBlue rounded-xl flex items-center justify-center\">\n                                                            <img src={bowlIcon} alt=\"Bowl Icon\" className=\"w-12\" />\n                                                    </span>\n                                                    <div>\n                                                        <div className=\"text-sm font-light text-gray-700\">\n                                                        Your main goal is to eat\n                                                        </div>\n                                                        <div className=\"text-xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                            smaller amounts and<br/>\n                                                            stop eating when full\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td className=\"px-2 py-4\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"flex ml-4 items-center justify-center\">\n                                                    <span className=\"p-1 mr-3 bg-beaLightBlue rounded-xl flex items-center justify-center\">\n                                                            <img src={bowlIcon} alt=\"Bowl Icon\" className=\"w-12\" />\n                                                    </span>\n                                                    <div>\n                                                        <div className=\"text-sm font-light text-gray-700\">\n                                                            When you feel the urge to eat\n                                                        </div>\n                                                        <div className=\"text-xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                            take a walk\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                            <img src={smileyIconUnhappyRound} alt=\"Unhappy Smiley Icon\" className=\"w-14\" />\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n\n\n\n\n\n\n                </div>\n                <div className=\"w-72 min-w-72 pl-3\">\n                    <div className=\"flex justify-center items-center w-full h-72 rounded-xl bg-gray-300 w-72\">\n                        <button type=\"button\" className=\"relative inline-flex items-center px-6 py-2 shadow-none text-sm font-medium rounded-full text-beaDarkPurple hover:bg-beaDarkPurple hover:text-white transition-all border-t border-b border-l border-r border-beaDarkPurple group focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                        <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg>\n                        Call to Action\n                        </button>\n                    </div>\n                </div>  \n            </div>\n        </section>\n    )\n}\n\nexport default Plan;","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Termsconditions.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Signup.js",["363","364","365","366","367","368"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/routing/Routes.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videodata.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videoselection.js",["369","370"],"import React from 'react'\nimport 'reactjs-popup/dist/index.css';\nimport Videomodal from './Videomodal';\nimport Clouds from '../../img/meditateimgs/clouds.png';\n\n\nclass Videoselection extends React.Component {\n// export const Videoselection = (props) => {\n    state = {\n        show: false\n      };\n      showModal = e => {\n        this.setState({\n          show: !this.state.show\n        });\n      };\n      onClose = e => {\n        this.props.onClose && this.props.onClose(e);\n      };\n\n  render() {\n    return (\n        <li className=\"col-span-1 flex flex-col text-center bg-white rounded-lg\">\n            {/* <div  onClick={() => {alert(\"Hello from here\")}}> */}\n            <div id=\"1\" onClick={e => {\n                this.showModal(e.target.id);\n            }}>\n\n\n                <div id=\"{this.props.id}\" style={{ backgroundImage: \"url(\" + this.props.img + \")\" }} className=\"flex-1 flex flex-col p-8 bg-beaLightBlue rounded-lg h-52 bg-cover bg-center\">\n                \n                </div>\n                <div>\n                    <div className=\"-mt-px flex divide-x divide-gray-200\">\n                        <div className=\"w-0 flex-1 flex relative -mr-px w-0 flex-1 inline-flex items-center justify-start py-4 text-sm text-gray-700 font-medium border-none border-transparent rounded-bl-lg hover:text-gray-500\">\n                            <button type=\"button\" className=\"relative inline-flex items-center px-3 transition-all py-3 border border-transparent text-sm font-medium border border-beaDarkPurple rounded-full text-beaDarkPurple group-hover:bg-beaDarkPurple group-hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                            <svg className=\"w-3.5 h-3.5\" fill=\"currentColor\" viewBox=\"0 0 24 24\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 210 210\">\n                                <path d=\"M179.07,105L30.93,210V0L179.07,105z\"/>\n                            </svg>\n                            </button>\n                            <div className=\"flex flex-col ml-3\">\n                                <span className=\"text-left\">{this.props.title}</span>\n                                <span className=\"text-left\">{this.props.length}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                </div>\n\n            <Videomodal onClose={this.showModal} show={this.state.show} title={this.props.title} length={this.props.length} vidurl={this.props.vidurl}/>\n        </li>\n    )}\n}\n\n\nexport default Videoselection;","/Users/anders/dev/Bea/bea-be-2/client/src/actions/postPlanResults.js",["371"],"import api from '../utils/api';\nimport axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  GET_PLAN_RESULTS,\n  GET_TODAY_PLAN_RESULTS,\n  GET_PREVIOUSDAY_PLAN_RESULTS,\n  GET_SUMMARY_PLAN_RESULTS,\n  PLAN_RESULTS_ERROR\n} from './types';\n\n\n\n// Register User\n// export const postPlanResults = formData => async dispatch => {\n//     console.log(\"in post plan results/actions \");\n//   try {\n//     const res = await api.post('/planResults', formData);\n//     console.log(\"made it to post plan results in actions\");\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     console.log(\"made it to post plan results in actions\");\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n\n//     dispatch({\n//       type: REGISTER_FAIL\n//     });\n//   }\n// };\n\nexport const postPlanResults = formData => async dispatch => {\n    console.log(\"in post plan results/actions \", formData);\n    // const body = { email, password };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const body = JSON.stringify(formData);\n    try {\n      // const res = await api.post('/auth', body);\n    console.log(\"made it to post plan results in actions\", formData );\n      const res = await axios.post('/api/planResults', body, config);\n      console.log('success maybe');\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      \n    //   dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n        console.log(\"in catch\", errors);\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        console.log(\"in erros\");\n      }\n  \n      dispatch({\n        type: LOGIN_FAIL\n      });\n    }\n  };\n\n  // Get results by ID\nexport const getResultsById = userId => async dispatch => {\n  console.log(\"get results by id is called\", userId);\n  try {\n    \n    // const res = await api.get(`/planResults/${userId}`);\n    const res = await api.get(`/planResults/${userId}`);\n    console.log('in try for get results');\n    dispatch({\n      type: GET_PLAN_RESULTS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log('error reached', err.response);\n    dispatch({\n      type: PLAN_RESULTS_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n  // Get results by ID\n  export const getSummary = userId => async dispatch => {\n    console.log(\"get summary by id is called\", userId);\n    try {\n      \n      // const res = await api.get(`/planResults/${userId}`);\n      const res = await api.get(`/planResults/summary/${userId}`);\n      console.log('in summary try for get results in postPlanResults');\n      dispatch({\n        type: GET_SUMMARY_PLAN_RESULTS,\n        payload: res.data\n      });\n    } catch (err) {\n      //console.log('error reached', err.response.statusText);\n      dispatch({\n        type: PLAN_RESULTS_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n  // Get today's plan results\n  export const getResultsByIdToday = (userId, date) => async dispatch => {\n    console.log(\"get results by id today is called\");\n //   const date = new Date();\n\n    try {\n      \n      // const res = await api.get(`/planResults/${userId}`);\n      const res = await api.get(`/planResults/today/${userId}/${date}`);\n      console.log('in try for get results for today');\n      dispatch({\n        type: GET_TODAY_PLAN_RESULTS,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log('error reached');\n      dispatch({\n        type: PLAN_RESULTS_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };\n\n\n  // Get profile by ID\n  export const getPastDayResults = postId => async dispatch => {\n    console.log(\"results for getting a specific day is called\");\n    console.log(\"params for past day contains\", postId)\n //   const date = new Date();\n    try {\n      \n      // const res = await api.get(`/previousDay/${userId}`);\n      const res = await api.get(`/planResults/previousDay/${postId}`);\n      console.log('in try for get results for getting a specific day', res.data);\n      dispatch({\n        type: GET_PREVIOUSDAY_PLAN_RESULTS,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log('error reached');\n      dispatch({\n        type: PLAN_RESULTS_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  };","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/dashboard/DashboardSections.js",["372","373","374","375"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanMonthly.js",["376","377","378","379","380","381","382","383","384","385"],"import React, { useEffect } from 'react'\nimport { Links } from 'react-router-dom';\nimport moment from 'moment';\nimport {Line} from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getResultsByIdToday, getResultsById } from '../../../actions/postPlanResults';\nimport chartTrendline from \"chartjs-plugin-trendline\";\nimport PlanMoodHeader from './PlanMoodHeader';\nimport PlanMonthlyLineItem from './PlanMonthlyLineItem';\n\n\nconst data = {\n    labels: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'],\n    datasets: [\n      {\n        label: 'Mood',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(128,128,128,1)',\n        borderCapStyle: 'butt',\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: 'rgba(75,192,192,1)',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 6,\n        pointHitRadius: 10,\n\n        trendlineLinear: {\n            style: \"rgb(128, 55, 202, 1)\",\n            lineStyle: \"dotted|solid\",\n            width: 2\n        },\n\n        data: [65, 59, null, 80, 81, 32, 56, 55, 40, 12, 45, 32, 23, 67, 32, 34, 21, 10, 8, 12, 56, null, 13, 18, 28, 64, 24, 31, 35, 19]\n      }\n    ]\n  };\n\n  const options = {\n    maintainAspectRatio: true,\n    spanGaps: false,\n    legend:\n    {\n        display: false,\n    },\n    scales:\n    {\n        yAxes: [{\n            display: false,\n            gridLines : {\n                display : false\n            }\n        }],\n        xAxes: [{\n            gridLines : {\n                display : true,\n                drawBorder: true,\n                lineWidth: 1,\n                drawOnChartArea: false\n            }\n        }]\n    }\n  };\n  const Plan3 = ({ user, getResultsById, getResultsByIdToday, planResult: { planResults } }) => {\n      //planResult: { planResults }, \n      //todayPlanResult: {todayPlanResults}\n        console.log('user in plan monthly has', user._id);\n    useEffect(() => {\n        getResultsById(user._id);\n        getResultsByIdToday(user._id);\n        if(planResults.length){\n            thisResults = planResults[0];\n            dataloaded = true;\n            console.log(thisResults);\n        }\n    // }, [getResultsByIdToday, user._id], [getResultsById, user._id]);\n}, [getResultsByIdToday, getResultsById, user._id]);\n    let dataloaded = false;\n    let thisResults = [];\n   console.log(\"plan results has\", planResults);\n\n   // console.log(\"today plan results has\", todayPlanResults);\n\n// export const Plan3 = () => {\n    return (\n        <section>\n            <div className=\"flex mx-auto p-4\">\n                <div className=\"flex flex-col flex-grow\">\n                    \n\n\n\n\n\n                    <div className=\"flex flex-col max-w-full overflow-hidden\">\n                        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                            <div className=\"overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                                <table className=\"min-w-full divide-y divide-gray-200\">\n                                <tbody className=\"bg-white divide-y divide-gray-200\">\n                                     {planResults.map((planResult) => (\n\n                                            <PlanMonthlyLineItem \n                                            userSubmission={planResult.userSubmission}\n                                            date = {planResult.date}\n                                            _id = {planResult._id}\n                                            plangoal = {planResult.plangoal}\n                                            plangoal2 = {planResult.plangoal2}\n                                            plangoal5 = {planResult.plangoal5}\n                                            howdoyoufeel = {planResult.howdoyoufeel}\n                                            />\n                                ))} \n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n\n\n\n\n\n\n                </div>\n                <div className=\"w-72 min-w-72 pl-3\">\n                    <div className=\"flex justify-center items-center w-full h-72 rounded-xl bg-gray-300 w-72\">\n                        <button type=\"button\" className=\"relative inline-flex items-center px-6 py-2 shadow-none text-sm font-medium rounded-full text-beaDarkPurple hover:bg-beaDarkPurple hover:text-white transition-all border-t border-b border-l border-r border-beaDarkPurple group focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                        <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg>\n                        Call to Action\n                        </button>\n                    </div>\n                </div>  \n            </div>\n        </section>\n    )\n}\n\n//export default Plan3;\n\n\n  Plan3.propTypes = {\n    getResultsByIdToday: PropTypes.func.isRequired,\n    getResultsById: PropTypes.func.isRequired,\n    planResult: PropTypes.object.isRequired,\n    todayPlanResult: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = (state) => ({\n    planResult: state.planResult,\n    todayPlanResult: state.todayPlanResult,\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n  });\n  \n  export default connect(mapStateToProps, { getResultsById, getResultsByIdToday })(Plan3);","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/config.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanHeader.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanSubmit.js",["386","387","388"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningIntro.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest1.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/LessSugar.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/EmotionalBehavioral.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/reducers/planResult.js",["389"],"import {\n  GET_PLAN_RESULTS,\n  GET_TODAY_PLAN_RESULTS,\n  GET_PREVIOUSDAY_PLAN_RESULTS,\n  GET_SUMMARY_PLAN_RESULTS,\n  PLAN_RESULTS_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  previousPlanResults: [],\n  todayPlanResults: [],\n  planResults: [],\n  planResults2: [],\n  previousPlanResult: null,\n  planResult: null,\n  planResult2: null,\n  todayPlanResult: null,\n  loading: true,\n  error: {}\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_TODAY_PLAN_RESULTS:\n      return {\n        ...state,\n        todayPlanResults: payload,\n        loading: false\n      };\n      case GET_PREVIOUSDAY_PLAN_RESULTS:\n        return {\n          ...state,\n          previousPlanResults: payload,\n          loading: false\n        };\n    case GET_PLAN_RESULTS:\n      return {\n        ...state,\n        planResults: payload,\n        loading: false\n      };\n\n      case GET_SUMMARY_PLAN_RESULTS:\n        return {\n          ...state,\n          planResults2: payload,\n          loading: false\n        };\n  \n  //   case GET_POST:\n  //     return {\n  //       ...state,\n  //       post: payload,\n  //       loading: false\n  //     };\n  //   case ADD_POST:\n  //     return {\n  //       ...state,\n  //       posts: [payload, ...state.posts],\n  //       loading: false\n  //     };\n  //   case DELETE_POST:\n  //     return {\n  //       ...state,\n  //       posts: state.posts.filter(post => post._id !== payload),\n  //       loading: false\n  //     };\n    case PLAN_RESULTS_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n  //   case UPDATE_LIKES:\n  //     return {\n  //       ...state,\n  //       posts: state.posts.map(post =>\n  //         post._id === payload.id ? { ...post, likes: payload.likes } : post\n  //       ),\n  //       loading: false\n  //     };\n  //   case ADD_COMMENT:\n  //     return {\n  //       ...state,\n  //       post: { ...state.post, comments: payload },\n  //       loading: false\n  //     };\n  //   case REMOVE_COMMENT:\n  //     return {\n  //       ...state,\n  //       post: {\n  //         ...state.post,\n  //         comments: state.post.comments.filter(\n  //           comment => comment._id !== payload\n  //         )\n  //       },\n  //       loading: false\n  //     };\n    default:\n      return state;\n  }\n}\n","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Meditate.js",["390","391","392"],"import React from 'react'\nimport mountainStream from '../../img/mountain-stream.svg';\nimport MeditateVidSection from './MeditateVidSection';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\nexport const Meditate = () => {\n\n    return (\n        <section>\n            <div className=\"flex-grow w-full mx-auto lg:px-0 flex\">\n            <div className=\"flex-1 min-w-0 lg:flex\">\n            <div className=\"bg-white lg:min-w-0 lg:flex-1 z-20 ml-0 mt-16\">\n\n                <div className=\"flex md:flex justify-center mt-0\">\n                <div className=\"flex flex-col min-w-0 items-center mt-0\">\n\n                </div>\n                </div>\n\n                <div className=\"flex items-center px-4 border-b border-gray-200 sm:px-6 md:h-80 py-8 bg-gradient-to-t from-beaBlue to-white\">\n                <div className=\"md:pl-10 h-full w-full flex md:flex-row flex-col-reverse items-center\">\n                    <div className=\"flex flex-col lg:ml-4 ml-0 mt-2 md:w-5/12 w-full items-center md:items-start \">\n                    <div className=\"flex flex-col mb-6 items-center mt-5 md:mt-0 md:items-start\">\n                        <h3 className=\"text-sm leading-6 font-medium text-beaTextLightGrey uppercase font-black tracking-widest mb-1\">\n                        Your Meditation Today\n                        </h3>\n                        <h2 className=\"text-3xl leading-6 text-beaTextGrey font-light mb-1\">\n                        Mountain Stream\n                        </h2>\n                        <h4 className=\"text-beaTextGrey font-light\">\n                        3 minutes\n                        </h4>\n                    </div>\n                    <button type=\"button\" className=\"relative group text-white transition-all hover:bg-transparent hover:text-beaDarkPurple hover:border-beaDarkPurple inline-flex items-center px-6 py-2 border border-transparent shadow-none text-sm font-medium rounded-full bg-beaDarkPurple focus:outline-none\">\n                        <svg className=\"w-3.5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 210 210\">\n                        <path d=\"M179.07,105L30.93,210V0L179.07,105z\"/>\n                        </svg>           \n                        Play\n                    </button>\n                    </div>\n                    <div className=\"lg:ml-4 ml-0 flex flex-column h-full items-end\">\n                    <img src={mountainStream} alt=\"Mountain Stream\" className=\"w-96\" />\n                    </div>\n                </div>\n                </div>\n                {/* //Below will be the recent/featured section */}\n                <MeditateVidSection />\n            </div></div>\n            </div>\n        </section>\n    )\n}\n\nexport default Meditate;","/Users/anders/dev/Bea/bea-be-2/client/src/utils/api.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/PlanPastDay.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/ActionProvider.js",["393"],"import React from 'react'\n\n// ActionProvider starter code\nclass ActionProvider {\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n      this.createChatBotMessage = createChatBotMessage;\n      this.setState = setStateFunc;\n      this.createClientMessage = createClientMessage;\n    }\n    greet() {\n        const greetingMessage = this.createChatBotMessage(\"Hello friend\");\n        this.updateChatbotState(greetingMessage)\n    }\n    handleLetsBegin = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`To start, let’s Rate how you are currently feeling.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`How tempted are you to eat in a way that isn't ideal for you right now?`, {\n            delay: 4000,\n            widget: \"howtempted\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    handleHowTempted = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`To start, let’s Rate how you are currently feeling.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`How tempted are you to eat in a way that isn't ideal for you right now?`, {\n            delay: 4000,\n            widget: \"howtempted\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    notAtAll = () => {\n        const notAtAllMessage = \n        [this.createChatBotMessage(`I'm so glad to hear that. 🏆 Keep up the good work!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Let’s do a Visualization anyways to make sure you stay on this positive path.`, {\n            delay: 4000,\n            widget: \"visualization\",\n        })];\n        this.addMessageToBotState(notAtAllMessage)\n    }\n    slightSomewhat = () => {\n        const slightSomewhatMessage = \n        [this.createChatBotMessage(`So you are a little bit tempted right now, but it’s okay, I’m here to help!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Let’s do a Visualization to help you quell your craving.`, {\n            delay: 4000,\n            widget: \"visualization\",\n        })];\n        this.addMessageToBotState(slightSomewhatMessage)\n    }\n    veryExtremely = () => {\n        const veryExtremelyMessage = \n        [this.createChatBotMessage(`Oh no - I'm sorry to hear that. 🙁`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`But that's okay. I'm here to help!`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Let’s do our daily Visualization to help you feel more in control of your eating.`, {\n            delay: 6000,\n            widget: \"visualization\",\n        })];\n        this.addMessageToBotState(veryExtremelyMessage)\n    }\n    visualization = () => {\n        const visualizationMessage = \n        [this.createChatBotMessage(`A Visualization helps you evaluate how you will feel if you make a particular food choice.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This often makes it easier to control your urges.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Your Visualization for the day is: Evaluating Moods`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`This Visualization will help you weigh the emotional costs and benefits of eating different foods.`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`First, take a moment to think about what you’re planning to eat next.`, {\n            delay: 12000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready.`, {\n            delay: 14000,\n            widget: \"planningIntro\",\n        })];\n        this.addMessageToBotState(visualizationMessage)\n    }\n    // evaluatingMoods = () => {\n    //     const evaluatingMoodsMessage = \n    //     [this.createChatBotMessage(`Your Visualization for the day is: Evaluating Moods`, {\n    //         delay: 2000,\n    //     }),\n    //     this.createChatBotMessage(`This Visualization will help you weigh the emotional costs and benefits of eating different foods.`, {\n    //         delay: 4000,\n    //     }),\n    //     this.createChatBotMessage(`First, take a moment to think about what you’re planning to eat next.`, {\n    //         delay: 6000,\n    //     }),\n    //     this.createChatBotMessage(`Let me know when you’re ready.`, {\n    //         delay: 8000,\n    //         widget: \"planningIntro\",\n    //     })];\n    //     this.addMessageToBotState(evaluatingMoodsMessage)\n    // }\n    planningPhase = () => {\n        const planningPhaseMessage = \n        [this.createChatBotMessage(`Great! What are you planning to eat? Please type below: `, {\n            delay: 2000,\n        })];\n        this.addMessageToBotState(planningPhaseMessage)\n    }\n    planningPhas2ealt = (message) => {\n        console.log(\"Message sent over to planning phase 2 is\", message);\n        this.setState((state) => ({\n            ...state,\n            plan2eat: message,\n            lastblockvisited: \"Planning Phase 2 alt\",\n            waitingformsgflag: false\n          }));\n        const planningPhaseMessage = \n        [this.createChatBotMessage(`Keeping that food in mind, let’s answer a few questions:`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`How do you feel during the Planning Phase, from when you first start thinking about food up until you take the first bite?`, {\n            delay: 6000,\n            widget: \"planningFeel\",\n        })];\n        this.addMessageToBotState(planningPhaseMessage)\n    }\n    planningPhase2 = (message) => {\n        console.log(\"Message sent over to planning phase 2 is\", message);\n        this.setState((state) => ({\n            ...state,\n            plan2eat: message,\n            lastblockvisited: \"Planning Phase 2\",\n            waitingformsgflag: false\n          }));\n        const planningPhaseMessage = \n        [this.createChatBotMessage(`Keeping that food in mind, let’s answer a few questions:`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`How do you feel during the Planning Phase, from when you first start thinking about food up until you take the first bite?`, {\n            delay: 6000,\n            widget: \"planningFeel\",\n        })];\n        this.addMessageToBotState(planningPhaseMessage)\n    }\n    planningPhaseLength = () => {\n        const planningPhaseLengthMessage = \n        [this.createChatBotMessage(`How long does your Planning Phase generally last?`, {\n            delay: 2000,\n            widget: \"planningLength\",\n        })];\n        this.addMessageToBotState(planningPhaseLengthMessage)\n    }\n    initialEatingIntro = () => {\n        const initialEatingIntroMessage = \n        [this.createChatBotMessage(`Now let's focus on the Initial Eating Phase.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This is the time from when you take your first bite of food up until when you first start to feel full.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Continuing to imagine what you were planning to eat, how do you think you’d feel during this time?`, {\n            delay: 6000,\n            widget: \"initialEatingFeel\",\n        })];\n        this.addMessageToBotState(initialEatingIntroMessage)\n    }\n    initialEatingLength = () => {\n        const initialEatingLengthMessage = \n        [this.createChatBotMessage(`How long do you think your Initial Eating Phase would last?`, {\n            delay: 2000,\n            widget: \"initialEatingLength\",\n        })];\n        this.addMessageToBotState(initialEatingLengthMessage)\n    }\n    fullnessIntro = () => {\n        const fullnessIntroMessage = \n        [this.createChatBotMessage(`Next, let's focus on the Fullness Phase.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This is the time when you continue to eat after you are comfortably full.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`How do you imagine you’d feel during this time?`, {\n            delay: 6000,\n            widget: \"fullnessFeel\",\n        })];\n        this.addMessageToBotState(fullnessIntroMessage)\n    }\n    fullnessLength = () => {\n        const fullnessLengthMessage = \n        [this.createChatBotMessage(`How long do you think your Fullness Phase would last?`, {\n            delay: 2000,\n            widget: \"fullnessLength\",\n        })];\n        this.addMessageToBotState(fullnessLengthMessage)\n    }\n    afterEatingIntro = () => {\n        const afterEatingMessage = \n        [this.createChatBotMessage(`Lastly, let’s focus on the After Eating Phase — what happens after you stop eating and when you’re still feeling full.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`How do you imagine you’d feel during this time?`, {\n            delay: 4000,\n            widget: \"afterEatingFeel\",\n        })];\n        this.addMessageToBotState(afterEatingMessage)\n    }\n    afterEatingLength = () => {\n        const afterEatingLengthMessage = \n        [this.createChatBotMessage(`How long do you think you’d continue to feel full if you eat the food/foods you were planning to eat?`, {\n            delay: 2000,\n            widget: \"afterEatingLength\",\n        })];\n        this.addMessageToBotState(afterEatingLengthMessage)\n    }\n    //below was removed due to change in script\n    // feelBest1 = () => {\n    //     const feelBest1Message = \n    //     [this.createChatBotMessage(`If you decide to eat the food you listed previously, in which phase do you think you’d feel the best?`, {\n    //         delay: 2000,\n    //         widget: \"feelBest1\",\n    //     })];\n    //     this.addMessageToBotState(feelBest1Message)\n    // }\n    // feelBest2 = () => {\n    //     const feelBest2Message = \n    //     [this.createChatBotMessage(`In which phase would you feel the worst?`, {\n    //         delay: 2000,\n    //         widget: \"feelBest2\",\n    //     })];\n    //     this.addMessageToBotState(feelBest2Message)\n    // }\n    // feelBest3 = () => {\n    //     const feelBest3Message = \n    //     [this.createChatBotMessage(`Overall, how would you feel if you decide to eat the food you were planning to eat?`, {\n    //         delay: 2000,\n    //         widget: \"feelBest3\",\n    //     })];\n    //     this.addMessageToBotState(feelBest3Message)\n    // }\n    feelBest4 = () => {\n        const feelBest4Message = \n        [this.createChatBotMessage(`Take a moment now to reflect on your answers.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`When you’re ready, we’ll move on to your Mindfulness Exercise for today.`, {\n            delay: 4000,\n            widget: \"startMindfulness\",\n        })];\n        this.addMessageToBotState(feelBest4Message)\n    }\n    mindfulness = () => {\n        const mindfulnessMessage = \n        [this.createChatBotMessage(`I have several different 1-minute Mindfulness Exercises we can do together.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`I’ll choose one at random, but you can always come back later to try a different one.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Your 1-minute mindfulness exercise for today is to STRETCH!`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Doesn't it feel good to stretch? 🤗`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`Would you prefer to do your Stretch Mindfulness Exercise by continuing to message with me or by listening to my voice?`, {\n            delay: 12000,\n            widget: \"stretchMsgorVoice\",\n        })];\n        this.addMessageToBotState(mindfulnessMessage)\n    }\n    stretchMessage = () => {\n        const stretchMessage = \n        [this.createChatBotMessage(`Take a slow, deep breath in . . .`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Stretch really, really slowly for at least 10 seconds.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`If you notice any tightness . . .`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`. . .  just say “ease” or \"hello\" to that place in your body.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Take another 20 seconds to stretch and notice any feeling of calmness in your body.`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`Now take your time to reorient yourself to the present.`, {\n            delay: 12000,\n        }),\n        this.createChatBotMessage(`And when you are ready, we will mindfully move forward.`, {\n            delay: 14000,\n            widget: \"motivateAfter\",\n        })];\n        this.addMessageToBotState(stretchMessage)\n    }\n    motivateAfter = () => {\n        const motivateAfterMessage = \n        [this.createChatBotMessage(`Thanks for taking the time to do this Motivational work!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`After doing these exercises, how do you feel about your ability to calm your cravings?`, {\n            delay: 4000,\n            widget: \"motivateAfterOptions\",\n        })];\n        this.addMessageToBotState(motivateAfterMessage)\n    }\n    thankYouDemo = () => {\n        const thankYouDemoMessage = \n        [this.createChatBotMessage(`Thanks for participating in this demo with me!`, {\n            delay: 2000,\n            widget: \"plansubmit\",\n        })];\n        this.addMessageToBotState(thankYouDemoMessage)\n    }\n    nofoulwords() {\n        const nofoulwordsMessage = \n        [this.createChatBotMessage(`I can tell by what you just wrote that you are upset, and that is of course okay.`), \n        this.createChatBotMessage(`Sometimes our language is a genuine expression of how we feel.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`For these meditations, I have included metaphors and analogies to help you listen to your body and think about food differently.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`That being said, I work best when you just press buttons.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Please scroll up to the last place you could make a selection in order to continue.`, {\n            delay: 8000,\n        })];\n        // this.updateChatbotState(nofoulwordsMessage)\n        this.addMessageToBotState(nofoulwordsMessage)\n    }\n    dontunderstand() {\n        const dontunderstandMessage = \n        [this.createChatBotMessage(`🤔`), \n        this.createChatBotMessage(`My robot brain does not compute what you just wrote.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Scroll back up to the last place you could select a button in order to continue where we left off.`, {\n            delay: 4000,\n        })];\n        this.addMessageToBotState(dontunderstandMessage)\n    }\n    emergency() {\n        const emergencyMessage = \n        [this.createChatBotMessage(`Oh no! I'm so sorry to hear that you’re feeling so badly.`), \n        this.createChatBotMessage(`Please know that however down you feel, you are never alone.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Call the National Suicide Prevention Lifeline at 1-800-273-8255 to get help.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`If your need is more urgent, PLEASE call 911 right away or go to your nearest emergency room.`, {\n            delay: 6000,\n        })];\n        // this.updateChatbotState(emergencyMessage)\n        this.addMessageToBotState(emergencyMessage)\n    }\n    findtherapist() {\n        const therapyMessage = \n        [this.createChatBotMessage(`I'm glad you’re ready to take that step!`), \n        this.createChatBotMessage(`I've located a number of therapists in your area that specialize in issues with food and eating.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Please press below and I will redirect you.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`And if I can still be of help, we can continue at any time!`, {\n            delay: 6000,\n        })];\n        this.addMessageToBotState(therapyMessage)\n        // this.createChatBotMessage(\"I'm glad you’re ready to take that step!\");\n        // this.updateChatbotState(therapyMessage)\n    }\n    updateChatbotState(message) {\n \n        // NOTE: This function is set in the constructor, and is passed in      \n        // from the top level Chatbot component. The setState function here     \n        // actually manipulates the top level state of the Chatbot, so it's     \n        // important that we make sure that we preserve the previous state.\n         \n            \n           this.setState(prevState => ({\n                ...prevState, messages: [...prevState.messages, message]\n            }))\n          }\n    addMessageToBotState = (messages) => {\n            if (Array.isArray(messages)) {\n              this.setState((prevState) => ({\n                ...prevState,\n                messages: [...prevState.messages, ...messages],\n              }));\n            } else {\n              this.setState((prevState) => ({\n                ...prevState,\n                messages: [...prevState.messages, messages],\n              }));\n            }\n          };\n  }\n  \n  export default ActionProvider;\n","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanBody.js",["394","395","396","397","398","399","400","401","402","403"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/Options.js",["404"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MotivateAfter.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/reducers/alert.js",["405"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate2.js",["406"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Login.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/routing/PrivateRoute.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/DisplayPlanResults.js",["407","408","409"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanMain.js",["410","411","412","413","414","415","416","417","418","419","420"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MessageParser.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/ActionProvider.js",["421"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Spinner.js",["422"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/PlanMonthlyLineItem.js",["423","424"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanGoal.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/SmallerPortions.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/reducers/motivateResult.js",["425"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/PlanHeader.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/HowDoYouFeel.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Privacy.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Testpopuptwo.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan3.js",["426","427","428","429","430"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/config.js",["431","432"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/plan/calendar.js",["433","434","435","436","437","438","439"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/motivate/MotivateSections.js",["440","441","442","443"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanSubmit.js",["444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/InitialEatingLength.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FullnessFeel.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan2.js",["462","463"],{"ruleId":"464","replacedBy":"465"},{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","severity":1,"message":"469","line":4,"column":8,"nodeType":"470","messageId":"471","endLine":4,"endColumn":12},{"ruleId":"468","severity":1,"message":"472","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":25},{"ruleId":"468","severity":1,"message":"473","line":35,"column":11,"nodeType":"470","messageId":"471","endLine":35,"endColumn":20},{"ruleId":"468","severity":1,"message":"474","line":67,"column":15,"nodeType":"470","messageId":"471","endLine":67,"endColumn":25},{"ruleId":"468","severity":1,"message":"475","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":20},{"ruleId":"468","severity":1,"message":"476","line":4,"column":8,"nodeType":"470","messageId":"471","endLine":4,"endColumn":18},{"ruleId":"468","severity":1,"message":"477","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":22},{"ruleId":"468","severity":1,"message":"478","line":1,"column":17,"nodeType":"470","messageId":"471","endLine":1,"endColumn":25},{"ruleId":"468","severity":1,"message":"479","line":16,"column":8,"nodeType":"470","messageId":"471","endLine":16,"endColumn":22},{"ruleId":"480","severity":1,"message":"481","line":94,"column":29,"nodeType":"482","endLine":94,"endColumn":78},{"ruleId":"480","severity":1,"message":"481","line":105,"column":29,"nodeType":"482","endLine":105,"endColumn":78},{"ruleId":"480","severity":1,"message":"481","line":116,"column":29,"nodeType":"482","endLine":116,"endColumn":78},{"ruleId":"468","severity":1,"message":"483","line":3,"column":10,"nodeType":"470","messageId":"471","endLine":3,"endColumn":19},{"ruleId":"468","severity":1,"message":"484","line":4,"column":10,"nodeType":"470","messageId":"471","endLine":4,"endColumn":14},{"ruleId":"485","severity":1,"message":"486","line":11,"column":32,"nodeType":"487","messageId":"488","endLine":11,"endColumn":34},{"ruleId":"468","severity":1,"message":"489","line":4,"column":8,"nodeType":"470","messageId":"471","endLine":4,"endColumn":26},{"ruleId":"468","severity":1,"message":"490","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":30},{"ruleId":"468","severity":1,"message":"484","line":7,"column":10,"nodeType":"470","messageId":"471","endLine":7,"endColumn":14},{"ruleId":"468","severity":1,"message":"491","line":7,"column":16,"nodeType":"470","messageId":"471","endLine":7,"endColumn":24},{"ruleId":"468","severity":1,"message":"492","line":8,"column":8,"nodeType":"470","messageId":"471","endLine":8,"endColumn":13},{"ruleId":"464","replacedBy":"493"},{"ruleId":"466","replacedBy":"494"},{"ruleId":"468","severity":1,"message":"495","line":1,"column":8,"nodeType":"470","messageId":"471","endLine":1,"endColumn":13},{"ruleId":"464","replacedBy":"496"},{"ruleId":"466","replacedBy":"497"},{"ruleId":"464","replacedBy":"498"},{"ruleId":"466","replacedBy":"499"},{"ruleId":"500","severity":1,"message":"501","line":20,"column":1,"nodeType":"502","endLine":79,"endColumn":2},{"ruleId":"468","severity":1,"message":"503","line":3,"column":13,"nodeType":"470","messageId":"471","endLine":3,"endColumn":15},{"ruleId":"468","severity":1,"message":"504","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":17},{"ruleId":"468","severity":1,"message":"505","line":6,"column":8,"nodeType":"470","messageId":"471","endLine":6,"endColumn":20},{"ruleId":"468","severity":1,"message":"506","line":7,"column":8,"nodeType":"470","messageId":"471","endLine":7,"endColumn":18},{"ruleId":"468","severity":1,"message":"507","line":8,"column":8,"nodeType":"470","messageId":"471","endLine":8,"endColumn":24},{"ruleId":"468","severity":1,"message":"508","line":1,"column":38,"nodeType":"470","messageId":"471","endLine":1,"endColumn":46},{"ruleId":"468","severity":1,"message":"509","line":2,"column":50,"nodeType":"470","messageId":"471","endLine":2,"endColumn":61},{"ruleId":"468","severity":1,"message":"510","line":2,"column":63,"nodeType":"470","messageId":"471","endLine":2,"endColumn":73},{"ruleId":"468","severity":1,"message":"511","line":8,"column":8,"nodeType":"470","messageId":"471","endLine":8,"endColumn":16},{"ruleId":"468","severity":1,"message":"512","line":9,"column":8,"nodeType":"470","messageId":"471","endLine":9,"endColumn":16},{"ruleId":"468","severity":1,"message":"513","line":10,"column":8,"nodeType":"470","messageId":"471","endLine":10,"endColumn":17},{"ruleId":"468","severity":1,"message":"514","line":11,"column":8,"nodeType":"470","messageId":"471","endLine":11,"endColumn":12},{"ruleId":"468","severity":1,"message":"515","line":12,"column":8,"nodeType":"470","messageId":"471","endLine":12,"endColumn":13},{"ruleId":"468","severity":1,"message":"516","line":13,"column":8,"nodeType":"470","messageId":"471","endLine":13,"endColumn":22},{"ruleId":"468","severity":1,"message":"517","line":14,"column":8,"nodeType":"470","messageId":"471","endLine":14,"endColumn":18},{"ruleId":"468","severity":1,"message":"518","line":15,"column":8,"nodeType":"470","messageId":"471","endLine":15,"endColumn":16},{"ruleId":"468","severity":1,"message":"519","line":16,"column":8,"nodeType":"470","messageId":"471","endLine":16,"endColumn":23},{"ruleId":"468","severity":1,"message":"520","line":17,"column":8,"nodeType":"470","messageId":"471","endLine":17,"endColumn":15},{"ruleId":"468","severity":1,"message":"521","line":19,"column":8,"nodeType":"470","messageId":"471","endLine":19,"endColumn":13},{"ruleId":"468","severity":1,"message":"522","line":20,"column":8,"nodeType":"470","messageId":"471","endLine":20,"endColumn":14},{"ruleId":"468","severity":1,"message":"523","line":21,"column":8,"nodeType":"470","messageId":"471","endLine":21,"endColumn":16},{"ruleId":"468","severity":1,"message":"524","line":22,"column":8,"nodeType":"470","messageId":"471","endLine":22,"endColumn":20},{"ruleId":"468","severity":1,"message":"525","line":3,"column":10,"nodeType":"470","messageId":"471","endLine":3,"endColumn":16},{"ruleId":"468","severity":1,"message":"526","line":4,"column":16,"nodeType":"470","messageId":"471","endLine":4,"endColumn":19},{"ruleId":"468","severity":1,"message":"527","line":4,"column":21,"nodeType":"470","messageId":"471","endLine":4,"endColumn":28},{"ruleId":"468","severity":1,"message":"479","line":14,"column":8,"nodeType":"470","messageId":"471","endLine":14,"endColumn":22},{"ruleId":"468","severity":1,"message":"528","line":2,"column":8,"nodeType":"470","messageId":"471","endLine":2,"endColumn":21},{"ruleId":"468","severity":1,"message":"529","line":3,"column":16,"nodeType":"470","messageId":"471","endLine":3,"endColumn":21},{"ruleId":"468","severity":1,"message":"530","line":6,"column":19,"nodeType":"470","messageId":"471","endLine":6,"endColumn":27},{"ruleId":"468","severity":1,"message":"531","line":7,"column":18,"nodeType":"470","messageId":"471","endLine":7,"endColumn":25},{"ruleId":"468","severity":1,"message":"532","line":8,"column":12,"nodeType":"470","messageId":"471","endLine":8,"endColumn":19},{"ruleId":"468","severity":1,"message":"533","line":8,"column":21,"nodeType":"470","messageId":"471","endLine":8,"endColumn":31},{"ruleId":"468","severity":1,"message":"534","line":4,"column":8,"nodeType":"470","messageId":"471","endLine":4,"endColumn":14},{"ruleId":"535","severity":1,"message":"536","line":37,"column":175,"nodeType":"537","endLine":37,"endColumn":196},{"ruleId":"468","severity":1,"message":"538","line":5,"column":3,"nodeType":"470","messageId":"471","endLine":5,"endColumn":16},{"ruleId":"468","severity":1,"message":"483","line":3,"column":10,"nodeType":"470","messageId":"471","endLine":3,"endColumn":19},{"ruleId":"468","severity":1,"message":"484","line":4,"column":10,"nodeType":"470","messageId":"471","endLine":4,"endColumn":14},{"ruleId":"468","severity":1,"message":"539","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":21},{"ruleId":"485","severity":1,"message":"486","line":9,"column":31,"nodeType":"487","messageId":"488","endLine":9,"endColumn":33},{"ruleId":"468","severity":1,"message":"540","line":2,"column":10,"nodeType":"470","messageId":"471","endLine":2,"endColumn":15},{"ruleId":"468","severity":1,"message":"541","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":14},{"ruleId":"468","severity":1,"message":"542","line":4,"column":9,"nodeType":"470","messageId":"471","endLine":4,"endColumn":13},{"ruleId":"468","severity":1,"message":"479","line":8,"column":8,"nodeType":"470","messageId":"471","endLine":8,"endColumn":22},{"ruleId":"468","severity":1,"message":"543","line":9,"column":8,"nodeType":"470","messageId":"471","endLine":9,"endColumn":22},{"ruleId":"468","severity":1,"message":"544","line":13,"column":7,"nodeType":"470","messageId":"471","endLine":13,"endColumn":11},{"ruleId":"468","severity":1,"message":"545","line":48,"column":9,"nodeType":"470","messageId":"471","endLine":48,"endColumn":16},{"ruleId":"546","severity":1,"message":"547","line":81,"column":27,"nodeType":"548","endLine":81,"endColumn":41},{"ruleId":"546","severity":1,"message":"549","line":82,"column":26,"nodeType":"550","endLine":82,"endColumn":30},{"ruleId":"468","severity":1,"message":"551","line":87,"column":9,"nodeType":"470","messageId":"471","endLine":87,"endColumn":19},{"ruleId":"468","severity":1,"message":"552","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":17},{"ruleId":"468","severity":1,"message":"553","line":44,"column":20,"nodeType":"470","messageId":"471","endLine":44,"endColumn":31},{"ruleId":"468","severity":1,"message":"554","line":83,"column":15,"nodeType":"470","messageId":"471","endLine":83,"endColumn":18},{"ruleId":"500","severity":1,"message":"501","line":22,"column":1,"nodeType":"502","endLine":104,"endColumn":2},{"ruleId":"468","severity":1,"message":"555","line":4,"column":10,"nodeType":"470","messageId":"471","endLine":4,"endColumn":17},{"ruleId":"468","severity":1,"message":"552","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":17},{"ruleId":"535","severity":1,"message":"536","line":37,"column":170,"nodeType":"537","endLine":37,"endColumn":191},{"ruleId":"468","severity":1,"message":"495","line":1,"column":8,"nodeType":"470","messageId":"471","endLine":1,"endColumn":13},{"ruleId":"468","severity":1,"message":"556","line":1,"column":17,"nodeType":"470","messageId":"471","endLine":1,"endColumn":26},{"ruleId":"468","severity":1,"message":"557","line":2,"column":8,"nodeType":"470","messageId":"471","endLine":2,"endColumn":23},{"ruleId":"468","severity":1,"message":"558","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":17},{"ruleId":"468","severity":1,"message":"559","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":21},{"ruleId":"468","severity":1,"message":"560","line":6,"column":8,"nodeType":"470","messageId":"471","endLine":6,"endColumn":30},{"ruleId":"468","severity":1,"message":"479","line":11,"column":8,"nodeType":"470","messageId":"471","endLine":11,"endColumn":22},{"ruleId":"468","severity":1,"message":"561","line":13,"column":8,"nodeType":"470","messageId":"471","endLine":13,"endColumn":16},{"ruleId":"468","severity":1,"message":"562","line":14,"column":8,"nodeType":"470","messageId":"471","endLine":14,"endColumn":26},{"ruleId":"468","severity":1,"message":"563","line":15,"column":8,"nodeType":"470","messageId":"471","endLine":15,"endColumn":18},{"ruleId":"468","severity":1,"message":"564","line":86,"column":5,"nodeType":"470","messageId":"471","endLine":86,"endColumn":18},{"ruleId":"468","severity":1,"message":"565","line":82,"column":9,"nodeType":"470","messageId":"471","endLine":82,"endColumn":23},{"ruleId":"500","severity":1,"message":"501","line":5,"column":1,"nodeType":"502","endLine":16,"endColumn":2},{"ruleId":"468","severity":1,"message":"503","line":3,"column":13,"nodeType":"470","messageId":"471","endLine":3,"endColumn":15},{"ruleId":"468","severity":1,"message":"566","line":2,"column":10,"nodeType":"470","messageId":"471","endLine":2,"endColumn":16},{"ruleId":"468","severity":1,"message":"567","line":2,"column":18,"nodeType":"470","messageId":"471","endLine":2,"endColumn":28},{"ruleId":"468","severity":1,"message":"568","line":6,"column":8,"nodeType":"470","messageId":"471","endLine":6,"endColumn":15},{"ruleId":"468","severity":1,"message":"508","line":1,"column":28,"nodeType":"470","messageId":"471","endLine":1,"endColumn":36},{"ruleId":"468","severity":1,"message":"569","line":2,"column":8,"nodeType":"470","messageId":"471","endLine":2,"endColumn":16},{"ruleId":"468","severity":1,"message":"559","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":21},{"ruleId":"468","severity":1,"message":"542","line":4,"column":9,"nodeType":"470","messageId":"471","endLine":4,"endColumn":13},{"ruleId":"468","severity":1,"message":"484","line":5,"column":10,"nodeType":"470","messageId":"471","endLine":5,"endColumn":14},{"ruleId":"468","severity":1,"message":"479","line":9,"column":8,"nodeType":"470","messageId":"471","endLine":9,"endColumn":22},{"ruleId":"468","severity":1,"message":"543","line":10,"column":8,"nodeType":"470","messageId":"471","endLine":10,"endColumn":22},{"ruleId":"468","severity":1,"message":"562","line":11,"column":8,"nodeType":"470","messageId":"471","endLine":11,"endColumn":26},{"ruleId":"468","severity":1,"message":"524","line":14,"column":8,"nodeType":"470","messageId":"471","endLine":14,"endColumn":20},{"ruleId":"468","severity":1,"message":"570","line":16,"column":8,"nodeType":"470","messageId":"471","endLine":16,"endColumn":21},{"ruleId":"546","severity":1,"message":"571","line":39,"column":6,"nodeType":"572","endLine":39,"endColumn":65,"suggestions":"573"},{"ruleId":"468","severity":1,"message":"495","line":1,"column":8,"nodeType":"470","messageId":"471","endLine":1,"endColumn":13},{"ruleId":"500","severity":1,"message":"574","line":4,"column":1,"nodeType":"502","endLine":12,"endColumn":3},{"ruleId":"468","severity":1,"message":"556","line":1,"column":26,"nodeType":"470","messageId":"471","endLine":1,"endColumn":35},{"ruleId":"468","severity":1,"message":"484","line":2,"column":10,"nodeType":"470","messageId":"471","endLine":2,"endColumn":14},{"ruleId":"500","severity":1,"message":"501","line":16,"column":3,"nodeType":"502","endLine":84,"endColumn":4},{"ruleId":"468","severity":1,"message":"479","line":8,"column":8,"nodeType":"470","messageId":"471","endLine":8,"endColumn":22},{"ruleId":"468","severity":1,"message":"543","line":9,"column":8,"nodeType":"470","messageId":"471","endLine":9,"endColumn":22},{"ruleId":"468","severity":1,"message":"562","line":10,"column":8,"nodeType":"470","messageId":"471","endLine":10,"endColumn":26},{"ruleId":"468","severity":1,"message":"551","line":90,"column":9,"nodeType":"470","messageId":"471","endLine":90,"endColumn":19},{"ruleId":"468","severity":1,"message":"575","line":91,"column":9,"nodeType":"470","messageId":"471","endLine":91,"endColumn":20},{"ruleId":"468","severity":1,"message":"508","line":1,"column":17,"nodeType":"470","messageId":"471","endLine":1,"endColumn":25},{"ruleId":"468","severity":1,"message":"576","line":36,"column":5,"nodeType":"470","messageId":"471","endLine":36,"endColumn":15},{"ruleId":"468","severity":1,"message":"566","line":5,"column":10,"nodeType":"470","messageId":"471","endLine":5,"endColumn":16},{"ruleId":"468","severity":1,"message":"567","line":5,"column":18,"nodeType":"470","messageId":"471","endLine":5,"endColumn":28},{"ruleId":"468","severity":1,"message":"577","line":5,"column":30,"nodeType":"470","messageId":"471","endLine":5,"endColumn":38},{"ruleId":"468","severity":1,"message":"578","line":40,"column":17,"nodeType":"470","messageId":"471","endLine":40,"endColumn":25},{"ruleId":"468","severity":1,"message":"579","line":42,"column":12,"nodeType":"470","messageId":"471","endLine":42,"endColumn":21},{"ruleId":"468","severity":1,"message":"580","line":43,"column":9,"nodeType":"470","messageId":"471","endLine":43,"endColumn":16},{"ruleId":"468","severity":1,"message":"581","line":67,"column":11,"nodeType":"470","messageId":"471","endLine":67,"endColumn":19},{"ruleId":"468","severity":1,"message":"483","line":3,"column":10,"nodeType":"470","messageId":"471","endLine":3,"endColumn":19},{"ruleId":"468","severity":1,"message":"484","line":4,"column":10,"nodeType":"470","messageId":"471","endLine":4,"endColumn":14},{"ruleId":"468","severity":1,"message":"539","line":5,"column":8,"nodeType":"470","messageId":"471","endLine":5,"endColumn":21},{"ruleId":"485","severity":1,"message":"486","line":11,"column":30,"nodeType":"487","messageId":"488","endLine":11,"endColumn":32},{"ruleId":"468","severity":1,"message":"552","line":3,"column":8,"nodeType":"470","messageId":"471","endLine":3,"endColumn":17},{"ruleId":"468","severity":1,"message":"553","line":42,"column":20,"nodeType":"470","messageId":"471","endLine":42,"endColumn":31},{"ruleId":"468","severity":1,"message":"554","line":77,"column":15,"nodeType":"470","messageId":"471","endLine":77,"endColumn":18},{"ruleId":"468","severity":1,"message":"582","line":118,"column":13,"nodeType":"470","messageId":"471","endLine":118,"endColumn":29},{"ruleId":"468","severity":1,"message":"583","line":119,"column":7,"nodeType":"470","messageId":"471","endLine":119,"endColumn":19},{"ruleId":"468","severity":1,"message":"584","line":120,"column":7,"nodeType":"470","messageId":"471","endLine":120,"endColumn":22},{"ruleId":"468","severity":1,"message":"585","line":121,"column":7,"nodeType":"470","messageId":"471","endLine":121,"endColumn":18},{"ruleId":"468","severity":1,"message":"586","line":122,"column":7,"nodeType":"470","messageId":"471","endLine":122,"endColumn":20},{"ruleId":"468","severity":1,"message":"587","line":123,"column":7,"nodeType":"470","messageId":"471","endLine":123,"endColumn":19},{"ruleId":"468","severity":1,"message":"588","line":124,"column":7,"nodeType":"470","messageId":"471","endLine":124,"endColumn":18},{"ruleId":"468","severity":1,"message":"589","line":125,"column":7,"nodeType":"470","messageId":"471","endLine":125,"endColumn":23},{"ruleId":"468","severity":1,"message":"590","line":126,"column":7,"nodeType":"470","messageId":"471","endLine":126,"endColumn":19},{"ruleId":"468","severity":1,"message":"591","line":127,"column":7,"nodeType":"470","messageId":"471","endLine":127,"endColumn":23},{"ruleId":"468","severity":1,"message":"592","line":128,"column":7,"nodeType":"470","messageId":"471","endLine":128,"endColumn":15},{"ruleId":"468","severity":1,"message":"593","line":129,"column":7,"nodeType":"470","messageId":"471","endLine":129,"endColumn":16},{"ruleId":"468","severity":1,"message":"594","line":130,"column":7,"nodeType":"470","messageId":"471","endLine":130,"endColumn":16},{"ruleId":"468","severity":1,"message":"595","line":131,"column":7,"nodeType":"470","messageId":"471","endLine":131,"endColumn":16},{"ruleId":"468","severity":1,"message":"596","line":132,"column":7,"nodeType":"470","messageId":"471","endLine":132,"endColumn":16},{"ruleId":"468","severity":1,"message":"597","line":19,"column":15,"nodeType":"470","messageId":"471","endLine":19,"endColumn":23},{"ruleId":"468","severity":1,"message":"598","line":25,"column":15,"nodeType":"470","messageId":"471","endLine":25,"endColumn":23},"no-native-reassign",["599"],"no-negated-in-lhs",["600"],"no-unused-vars","'wave' is defined but never used.","Identifier","unusedVar","'meditateIconLarge' is defined but never used.","'authLinks' is assigned a value but never used.","'guestLinks' is assigned a value but never used.","'Testpopuptwo' is defined but never used.","'Videomodal' is defined but never used.","'Videoselection' is defined but never used.","'Fragment' is defined but never used.","'chartTrendline' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'Link' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'DisplayPlanResults' is defined but never used.","'DisplayMotivateResults' is defined but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.",["599"],["600"],"'React' is defined but never used.",["599"],["600"],["599"],["600"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'d3' is defined but never used.","'appleIcon' is defined but never used.","'calendarIcon' is defined but never used.","'hungryIcon' is defined but never used.","'MotivateSections' is defined but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'withRouter' is defined but never used.","'Meditate' is defined but never used.","'Motivate' is defined but never used.","'Motivate2' is defined but never used.","'Plan' is defined but never used.","'Plan2' is defined but never used.","'TestPlanSubmit' is defined but never used.","'Helpcenter' is defined but never used.","'Settings' is defined but never used.","'Termsconditions' is defined but never used.","'Privacy' is defined but never used.","'Login' is defined but never used.","'Signup' is defined but never used.","'Register' is defined but never used.","'CalendarPage' is defined but never used.","'render' is defined but never used.","'Nav' is defined but never used.","'NavLink' is defined but never used.","'FacebookLogin' is defined but never used.","'Image' is defined but never used.","'setLogin' is assigned a value but never used.","'setData' is assigned a value but never used.","'picture' is assigned a value but never used.","'setPicture' is assigned a value but never used.","'Clouds' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'REGISTER_FAIL' is defined but never used.","'peskyPatterns' is defined but never used.","'Links' is defined but never used.","'moment' is defined but never used.","'Line' is defined but never used.","'PlanMoodHeader' is defined but never used.","'data' is assigned a value but never used.","'options' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'thisResults' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'dataloaded' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'dataloaded' is assigned a value but never used.","'PropTypes' is defined but never used.","'setFormData' is assigned a value but never used.","'res' is assigned a value but never used.","'connect' is defined but never used.","'useEffect' is defined but never used.","'smileyIconRound' is defined but never used.","'heartIcon' is defined but never used.","'newspaperIcon' is defined but never used.","'smileyIconUnhappyRound' is defined but never used.","'PlanMain' is defined but never used.","'PlanMoodHeaderFree' is defined but never used.","'PlanHeader' is defined but never used.","'headercontrol' is assigned a value but never used.","'DifferentFoods' is assigned a value but never used.","'format' is defined but never used.","'compareAsc' is defined but never used.","'Spinner' is defined but never used.","'bowlIcon' is defined but never used.","'PlanLineGraph' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'getResultsById'. Either exclude it or remove the dependency array. Outer scope values like 'getResultsById' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["601"],"Assign arrow function to a variable before exporting as module default","'thisResults' is assigned a value but never used.","'TakeAction' is defined but never used.","'isMonday' is defined but never used.","'setValue' is assigned a value but never used.","'parseDate' is defined but never used.","'newDate' is defined but never used.","'dateTemp' is assigned a value but never used.","'lastblockvisited' is assigned a value but never used.","'howdoyoufeel' is assigned a value but never used.","'howdoyoufeelint' is assigned a value but never used.","'planjournal' is assigned a value but never used.","'stayedontrack' is assigned a value but never used.","'planbadblock' is assigned a value but never used.","'what2change' is assigned a value but never used.","'influencedeating' is assigned a value but never used.","'whathappened' is assigned a value but never used.","'somethingelsebad' is assigned a value but never used.","'plangoal' is assigned a value but never used.","'plangoal2' is assigned a value but never used.","'plangoal3' is assigned a value but never used.","'plangoal4' is assigned a value but never used.","'plangoal5' is assigned a value but never used.","'levelone' is assigned a value but never used.","'leveltwo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"602","fix":"603"},"Update the dependencies array to be: [getResultsByIdToday, getSummary, user._id]",{"range":"604","text":"605"},[1381,1440],"[getResultsByIdToday, getSummary, user._id]"]