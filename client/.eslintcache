[{"/Users/anders/dev/Bea/bea-be-2/client/src/index.js":"1","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Navbar.js":"2","/Users/anders/dev/Bea/bea-be-2/client/src/utils/setAuthToken.js":"3","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Helpcenter.js":"4","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Settings.js":"5","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Termsconditions.js":"6","/Users/anders/dev/Bea/bea-be-2/client/src/actions/alert.js":"7","/Users/anders/dev/Bea/bea-be-2/client/src/actions/postPlanResults.js":"8","/Users/anders/dev/Bea/bea-be-2/client/src/reducers/index.js":"9","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/SmallerAmounts.js":"10","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/Options.js":"11","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videodata.js":"12","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videoselection.js":"13","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/MeditateVidSection.js":"14","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Sidebar.js":"15","/Users/anders/dev/Bea/bea-be-2/client/src/App.js":"16","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Meditate.js":"17","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan2.js":"18","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/TestPlanSubmit.js":"19","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate.js":"20","/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Register.js":"21","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest2.js":"22","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/StartMindfulness.js":"23","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate2.js":"24","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Footer.js":"25","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan.js":"26","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videomodal.js":"27","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/config.js":"28","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/MessageParser.js":"29","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Spinner.js":"30","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AfterEatingFeel.js":"31","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FullnessLength.js":"32","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest3.js":"33","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/InitialEatingLength.js":"34","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningIntro.js":"35","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanGoodBlock.js":"36","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/LessSugar.js":"37","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Dashboard.js":"38","/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Login.js":"39","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Testpopuptwo.js":"40","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Calendar.js":"41","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/config.js":"42","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AreyouReady.js":"43","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningLength.js":"44","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/FoodChoices.js":"45","/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Signup.js":"46","/Users/anders/dev/Bea/bea-be-2/client/src/utils/api.js":"47","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/ActionProvider.js":"48","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AfterEatingLength.js":"49","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest1.js":"50","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/InitialEatingFeel.js":"51","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanBadBlock.js":"52","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/SmallerPortions.js":"53","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Alert.js":"54","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/HowDoYouFeel.js":"55","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MotivateAfter.js":"56","/Users/anders/dev/Bea/bea-be-2/client/src/components/routing/Routes.js":"57","/Users/anders/dev/Bea/bea-be-2/client/src/components/routing/PrivateRoute.js":"58","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/RecentVideos.js":"59","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanGoal.js":"60","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/StretchMsgorVoice.js":"61"},{"size":547,"mtime":1620325297172,"results":"62","hashOfConfig":"63"},{"size":25575,"mtime":1620332083096,"results":"64","hashOfConfig":"63"},{"size":313,"mtime":1620325297174,"results":"65","hashOfConfig":"63"},{"size":333,"mtime":1620325297164,"results":"66","hashOfConfig":"63"},{"size":326,"mtime":1620325297165,"results":"67","hashOfConfig":"63"},{"size":354,"mtime":1620325297166,"results":"68","hashOfConfig":"63"},{"size":342,"mtime":1620325297160,"results":"69","hashOfConfig":"63"},{"size":1723,"mtime":1620325297160,"results":"70","hashOfConfig":"63"},{"size":153,"mtime":1620325297172,"results":"71","hashOfConfig":"63"},{"size":982,"mtime":1620325297164,"results":"72","hashOfConfig":"63"},{"size":12047,"mtime":1620325297163,"results":"73","hashOfConfig":"63"},{"size":2274,"mtime":1620325297166,"results":"74","hashOfConfig":"63"},{"size":2613,"mtime":1620329198870,"results":"75","hashOfConfig":"63"},{"size":4489,"mtime":1620329634908,"results":"76","hashOfConfig":"63"},{"size":6415,"mtime":1620331978836,"results":"77","hashOfConfig":"63"},{"size":4624,"mtime":1620325297160,"results":"78","hashOfConfig":"63"},{"size":2815,"mtime":1620325297165,"results":"79","hashOfConfig":"63"},{"size":2516,"mtime":1620325297165,"results":"80","hashOfConfig":"63"},{"size":3346,"mtime":1620325297166,"results":"81","hashOfConfig":"63"},{"size":1690,"mtime":1620325297165,"results":"82","hashOfConfig":"63"},{"size":3129,"mtime":1620325297161,"results":"83","hashOfConfig":"63"},{"size":751,"mtime":1620325297162,"results":"84","hashOfConfig":"63"},{"size":524,"mtime":1620325297163,"results":"85","hashOfConfig":"63"},{"size":6625,"mtime":1620340190470,"results":"86","hashOfConfig":"63"},{"size":1274,"mtime":1620325297164,"results":"87","hashOfConfig":"63"},{"size":29514,"mtime":1620325297165,"results":"88","hashOfConfig":"63"},{"size":1883,"mtime":1620325297166,"results":"89","hashOfConfig":"63"},{"size":4337,"mtime":1620325297163,"results":"90","hashOfConfig":"63"},{"size":2309,"mtime":1620325297163,"results":"91","hashOfConfig":"63"},{"size":258,"mtime":1620325297166,"results":"92","hashOfConfig":"63"},{"size":857,"mtime":1620325297161,"results":"93","hashOfConfig":"63"},{"size":877,"mtime":1620325297162,"results":"94","hashOfConfig":"63"},{"size":805,"mtime":1620325297162,"results":"95","hashOfConfig":"63"},{"size":872,"mtime":1620325297162,"results":"96","hashOfConfig":"63"},{"size":512,"mtime":1620325297163,"results":"97","hashOfConfig":"63"},{"size":852,"mtime":1620325297164,"results":"98","hashOfConfig":"63"},{"size":974,"mtime":1620325297163,"results":"99","hashOfConfig":"63"},{"size":281,"mtime":1620325297164,"results":"100","hashOfConfig":"63"},{"size":2663,"mtime":1620325297161,"results":"101","hashOfConfig":"63"},{"size":0,"mtime":1620325297166,"results":"102","hashOfConfig":"63"},{"size":2975,"mtime":1620325297164,"results":"103","hashOfConfig":"63"},{"size":5902,"mtime":1620325297164,"results":"104","hashOfConfig":"63"},{"size":510,"mtime":1620325297162,"results":"105","hashOfConfig":"63"},{"size":887,"mtime":1620325297163,"results":"106","hashOfConfig":"63"},{"size":2057,"mtime":1620325297163,"results":"107","hashOfConfig":"63"},{"size":1668,"mtime":1620325297161,"results":"108","hashOfConfig":"63"},{"size":659,"mtime":1620325297174,"results":"109","hashOfConfig":"63"},{"size":16246,"mtime":1620325297161,"results":"110","hashOfConfig":"63"},{"size":848,"mtime":1620325297162,"results":"111","hashOfConfig":"63"},{"size":751,"mtime":1620325297162,"results":"112","hashOfConfig":"63"},{"size":871,"mtime":1620325297162,"results":"113","hashOfConfig":"63"},{"size":997,"mtime":1620325297163,"results":"114","hashOfConfig":"63"},{"size":1005,"mtime":1620325297164,"results":"115","hashOfConfig":"63"},{"size":438,"mtime":1620325297164,"results":"116","hashOfConfig":"63"},{"size":1313,"mtime":1620325297163,"results":"117","hashOfConfig":"63"},{"size":512,"mtime":1620325297162,"results":"118","hashOfConfig":"63"},{"size":2145,"mtime":1620330621451,"results":"119","hashOfConfig":"63"},{"size":695,"mtime":1620325297166,"results":"120","hashOfConfig":"63"},{"size":4018,"mtime":1620325297165,"results":"121","hashOfConfig":"63"},{"size":976,"mtime":1620325297163,"results":"122","hashOfConfig":"63"},{"size":595,"mtime":1620325297163,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},"138ny1l",{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"151"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"126"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"151"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"151"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"126"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"151"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"126"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"138"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"126"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"151"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anders/dev/Bea/bea-be-2/client/src/index.js",[],["266","267"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Navbar.js",["268","269","270","271"],"/Users/anders/dev/Bea/bea-be-2/client/src/utils/setAuthToken.js",[],["272","273"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Helpcenter.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Settings.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Termsconditions.js",[],["274","275"],"/Users/anders/dev/Bea/bea-be-2/client/src/actions/alert.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/actions/postPlanResults.js",["276","277"],"import api from '../utils/api';\nimport axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL\n} from './types';\n\n\n\n// Register User\n// export const postPlanResults = formData => async dispatch => {\n//     console.log(\"in post plan results/actions \");\n//   try {\n//     const res = await api.post('/planResults', formData);\n//     console.log(\"made it to post plan results in actions\");\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n\n//     console.log(\"made it to post plan results in actions\");\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n//     }\n\n//     dispatch({\n//       type: REGISTER_FAIL\n//     });\n//   }\n// };\n\nexport const postPlanResults = formData => async dispatch => {\n    console.log(\"in post plan results/actions \", formData);\n    // const body = { email, password };\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    const body = JSON.stringify(formData);\n    try {\n      // const res = await api.post('/auth', body);\n    console.log(\"made it to post plan results in actions\", formData );\n      const res = await axios.post('/api/planResults', body, config);\n      console.log('success maybe');\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      \n    //   dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n        console.log(\"in catch\", errors);\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        console.log(\"in erros\");\n      }\n  \n      dispatch({\n        type: LOGIN_FAIL\n      });\n    }\n  };","/Users/anders/dev/Bea/bea-be-2/client/src/reducers/index.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/SmallerAmounts.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/Options.js",["278"],"import React from \"react\";\n\nimport \"./Options.css\";\n\nconst WelcomeBlock1 = (props) => {\n  const options = [\n    { text: \"I'm ready!\", handler: props.actionProvider.welcomeblock1, id: 1 },\n  ];\n\n  const optionsMarkup = options.map((option) => (\n    <button\n      className=\"learning-option-button\"\n      key={option.id}\n      onClick={option.handler}\n    >\n      {option.text}\n    </button>\n  ));\n\n  return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n};\n\nconst WelcomeBlock2 = (props) => {\n    const options = [\n      { text: \"I'm ready!\", handler: props.actionProvider.welcomeblock2, id: 1 },\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  }; \n  const WelcomeBlock3 = (props) => {\n    const options = [\n      { text: \"Great 😁\", handler: props.actionProvider.plangood, id: 1 },\n      { text: \"Pretty Good 🙂\", handler: props.actionProvider.plangood, id: 2 },\n      { text: \"Not Good 🙁\", handler: props.actionProvider.planbad, id: 3 },\n      { text: \"Horrible 😩\", handler: props.actionProvider.planbad, id: 4 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n \n\n  const PlanBadBlock = (props) => {\n    const options = [\n      { text: \"Smaller amounts\", handler: props.actionProvider.smalleramounts, id: 1 },\n      { text: \"Different foods\", handler: props.actionProvider.differentfoods, id: 2 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n\n  const DifferentFoods = (props) => {\n    const options = [\n      { text: \"Less fat\", handler: props.actionProvider.emotionalbehavioral, id: 1 },\n      { text: \"Less sugar\", handler: props.actionProvider.emotionalbehavioral, id: 2 },\n      { text: \"Less carbs\", handler: props.actionProvider.emotionalbehavioral, id: 3 },\n      { text: \"Fewer calories\", handler: props.actionProvider.emotionalbehavioral, id: 4 },\n      { text: \"Something else\", handler: props.actionProvider.somethingelsebad, id: 5 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n\n  // const PlanGoal = (props) => {\n  //   const options = [\n  //     { text: \"Keep going\", handler: props.actionProvider.plangoal, id: 1 }\n  //   ];\n  \n  //   const optionsMarkup = options.map((option) => (\n  //     <button\n  //       className=\"learning-option-button\"\n  //       key={option.id}\n  //       onClick={option.handler}\n  //     >\n  //       {option.text}\n  //     </button>\n  //   ));\n  \n  //   return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  // };\n  const StopFull = (props) => {\n    const options = [\n      { text: \"Let's continue\", handler: props.actionProvider.stopfull2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n  const StopFull2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const MoreFilling = (props) => {\n    const options = [\n      { text: \"Let's continue\", handler: props.actionProvider.morefilling2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const MoreFilling2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n\n  const LessFat = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.lessfat2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const LessFat2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n  const LessSugar = (props) => {\n    const options = [\n      { text: \"Avoid Sugar\", handler: props.actionProvider.avoidsugar, id: 1 },\n      { text: \"Find healthy sweets\", handler: props.actionProvider.sweetfoods, id: 2 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const AvoidSugar = (props) => {\n    const options = [\n      { text: \"Let's continue\", handler: props.actionProvider.avoidsugar2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const AvoidSugar2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const SweetFoods = (props) => {\n    const options = [\n      { text: \"Let's Continue\", handler: props.actionProvider.sweetfoods2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const SweetFoods2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n  const FewerCarbs = (props) => {\n    const options = [\n      { text: \"Let's Continue\", handler: props.actionProvider.fewercarbs2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const FewerCarbs2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n  const FewerCalories = (props) => {\n    const options = [\n      { text: \"Let's Continue\", handler: props.actionProvider.fewercalories2, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const FewerCalories2 = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const SomethingElse = (props) => {\n    const options = [\n      { text: \"I'm ready\", handler: props.actionProvider.takeaction, id: 1 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\n\n  const TakeAction = (props) => {\n    const options = [\n      { text: \"Take a walk\", handler: props.actionProvider.lessfat, id: 1 },\n      { text: \"Meditate\", handler: props.actionProvider.lesssugar, id: 2 },\n      { text: \"Talk to a friend\", handler: props.actionProvider.fewercarbs, id: 3 },\n      { text: \"Eat something small\", handler: props.actionProvider.fewercalories, id: 4 },\n      { text: \"Read\", handler: props.actionProvider.somethingelse, id: 5 },\n      { text: \"Something else\", handler: props.actionProvider.somethingelse, id: 6 }\n    ];\n  \n    const optionsMarkup = options.map((option) => (\n      <button\n        className=\"learning-option-button\"\n        key={option.id}\n        onClick={option.handler}\n      >\n        {option.text}\n      </button>\n    ));\n  \n    return <div className=\"learning-options-container\">{optionsMarkup}</div>;\n  };\nexport {\n    WelcomeBlock1,\n    WelcomeBlock2,\n    WelcomeBlock3,\n    PlanBadBlock,\n    StopFull,\n    StopFull2,\n    MoreFilling,\n    MoreFilling2,\n    LessFat,\n    LessFat2,\n    LessSugar,\n    AvoidSugar,\n    AvoidSugar2,\n    SweetFoods,\n    SweetFoods2,\n    FewerCarbs,\n    FewerCarbs2,\n    FewerCalories,\n    FewerCalories2,\n    SomethingElse,\n    TakeAction\n\n};",["279","280"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videodata.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videoselection.js",["281","282"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/MeditateVidSection.js",["283","284","285"],"\nimport React from 'react';\nimport { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport peskyPatterns from '../../img/pesky-patterns.svg';\nimport FeaturedVideos from './FeaturedVideos';\nimport RecentVideos from './RecentVideos';\n\n\n// class MeditateVidSection extends Component {\n    const MeditateVidSection =({}) => {\n        const [openTab, setOpenTab] = React.useState(2);\n\n    // render() {\n    return (\n        <div className=\"flex px-6 py-6\">\n        <div className=\"flex flex-col w-full\">\n\n\n            <div className=\"mb-2\">\n            <div className=\"block\">\n                <div>\n                <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                    <a\n                        className={\n                        \"hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-t-4 font-medium text-sm\" +\n                        (openTab === 1\n                            ? \"border-beaDarkPurple text-beaDarkPurple\"\n                            : \"border-transparent text-gray-500\")\n                        }\n                        onClick={e => {\n                        e.preventDefault();\n                        setOpenTab(1);\n                        }}\n                        data-toggle=\"tab\"\n                        href=\"#link1\"\n                        role=\"tablist\"\n                    >\n                        Recent\n                    </a>\n                    <a\n                        className={\n                        \"hover:text-gray-700 hover:border-gray-300 whitespace-nowrap py-4 px-1 border-t-4 font-medium text-sm\" +\n                        (openTab === 2\n                            ? \"border-beaDarkPurple text-beaDarkPurple\"\n                            : \"border-transparent text-gray-500\")\n                        }\n                        onClick={e => {\n                        e.preventDefault();\n                        setOpenTab(2);\n                        }}\n                        data-toggle=\"tab\"\n                        href=\"#link1\"\n                        role=\"tablist\"\n                    >\n                        Featured\n                    </a>\n                </nav>\n                </div>\n            </div>\n            </div>\n\n            <div className=\"flex md:flex-row flex-col\">\n            <div className={openTab === 1 ? \"block w-full mr-3\" : \"hidden\"} id=\"link1\">\n                    <RecentVideos /> \n                </div>\n                <div className={openTab === 2 ? \"block w-full mr-3\" : \"hidden\"} id=\"link2\">\n                    <FeaturedVideos /> \n                </div>\n            <ul className=\"md:w-96 w-full\">\n            <li className=\"col-span-1 flex flex-col text-center border border-beaBorderGrey border-opacity-50 py-6 bg-white rounded-lg divide-y divide-gray-200\">\n                <div className=\"flex-1 flex flex-col\">\n                <img className=\"w-full flex-shrink-0 mx-auto\" src={peskyPatterns} alt=\"\" />\n                <div className=\"px-4\">\n                    <h3 className=\"mt-6 text-gray-900 text-sm font-medium\">Reveal those pesky patterns</h3>\n                    <dl className=\"mt-1 flex-grow flex flex-col justify-between mb-4\">\n                    <dt className=\"sr-only\">Title</dt>\n                    <dd className=\"text-gray-500 text-sm\">The more you chat with Bea, the better she’ll be able to identify what’s hindering your progress.</dd>\n                    <dt className=\"sr-only\">Role</dt>\n                    </dl>\n                    <button type=\"button\" className=\"relative inline-flex items-center px-6 py-2 shadow-none text-sm font-medium rounded-full text-beaDarkPurple hover:bg-beaDarkPurple hover:text-white transition-all border-t border-b border-l border-r border-beaDarkPurple group focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"></path></svg>       \n                    Chat with Bea Now\n                    </button>\n                </div>\n                </div>\n            </li>\n            </ul>\n            </div>\n        </div>\n        </div>\n\n    )}\n// }\n\nexport default MeditateVidSection;","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Sidebar.js",["286","287","288"],"/Users/anders/dev/Bea/bea-be-2/client/src/App.js",["289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Meditate.js",["306","307","308"],"import React from 'react'\nimport mountainStream from '../../img/mountain-stream.svg';\nimport MeditateVidSection from './MeditateVidSection';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\nexport const Meditate = () => {\n\n    return (\n        <section>\n            <div className=\"flex-grow w-full mx-auto lg:px-0 flex\">\n            <div className=\"flex-1 min-w-0 lg:flex\">\n            <div className=\"bg-white lg:min-w-0 lg:flex-1 z-20 ml-0 mt-16\">\n\n                <div className=\"flex md:flex justify-center mt-0\">\n                <div className=\"flex flex-col min-w-0 items-center mt-0\">\n\n                </div>\n                </div>\n\n                <div className=\"flex items-center px-4 border-b border-gray-200 sm:px-6 md:h-80 py-8 bg-gradient-to-t from-beaBlue to-white\">\n                <div className=\"md:pl-10 h-full w-full flex md:flex-row flex-col-reverse items-center\">\n                    <div className=\"flex flex-col lg:ml-4 ml-0 mt-2 md:w-5/12 w-full items-center md:items-start \">\n                    <div className=\"flex flex-col mb-6 items-center mt-5 md:mt-0 md:items-start\">\n                        <h3 className=\"text-sm leading-6 font-medium text-beaTextLightGrey uppercase font-black tracking-widest mb-1\">\n                        Your Meditation Today\n                        </h3>\n                        <h2 className=\"text-3xl leading-6 text-beaTextGrey font-light mb-1\">\n                        Mountain Stream\n                        </h2>\n                        <h4 className=\"text-beaTextGrey font-light\">\n                        3 minutes\n                        </h4>\n                    </div>\n                    <button type=\"button\" className=\"relative group text-white transition-all hover:bg-transparent hover:text-beaDarkPurple hover:border-beaDarkPurple inline-flex items-center px-6 py-2 border border-transparent shadow-none text-sm font-medium rounded-full bg-beaDarkPurple focus:outline-none\">\n                        <svg className=\"w-3.5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 210 210\">\n                        <path d=\"M179.07,105L30.93,210V0L179.07,105z\"/>\n                        </svg>           \n                        Play\n                    </button>\n                    </div>\n                    <div className=\"lg:ml-4 ml-0 flex flex-column h-full items-end\">\n                    <img src={mountainStream} alt=\"Mountain Stream\" className=\"w-96\" />\n                    </div>\n                </div>\n                </div>\n                {/* //Below will be the recent/featured section */}\n                <MeditateVidSection />\n            </div></div>\n            </div>\n        </section>\n    )\n}\n\nexport default Meditate;","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan2.js",["309"],"import React from 'react'\nimport Chatbot from 'react-chatbot-kit';\nimport Popup from 'reactjs-popup';\nimport chatbubble from '../../img/chat-icon.png';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Calendar from './Calendar';\n\n\nimport ActionProvider from '../chatbots/plan/ActionProvider';\nimport MessageParser from '../chatbots/plan/MessageParser';\nimport config from '../chatbots/plan/config';\n\n\nexport const Plan2 = ({user, userlevel}) =>  {\n        console.log(\"USer level contains\", user.userlevel);\n        console.log(\"USer contains\", user);\n        if (user.userlevel === 1){\n            console.log(\"Paid User\");\n        }\n        if(user.userlevel === 0){\n            console.log(\"Free User\");\n        }\n        const levelone = (\n            //Should print if userlevel is 0 - only checks to see if user variable exists not which level it is\n            //this should print if free but changed for demo\n            // <div><h1>YOU ARE A FREE USER</h1></div>\n            <div><h1>YOU ARE A PAID USER</h1></div>\n        );\n        const leveltwo = (\n            //Should print if userlevel is 1 \n            //this should print if free but changed for demo\n            // <div><h1>YOU ARE A PAID USER</h1></div>            \n            <div><h1>YOU ARE NOT LOGGED IN</h1></div>\n        );\n        return (\n                    <div className=\"block\">\n                        <div>\n                        <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                        { (<div>{ user ? levelone : leveltwo }</div>)}\n                        </nav>\n\n                        <Chatbot config={config} actionProvider={ActionProvider} \t    messageParser={MessageParser} />\n                        <Popup trigger={<button className=\"circle-div\"><img className=\"chatbubble\" src={chatbubble} alt=\"Workflow\" /></button>} position=\"top right\">\n                        {/* <Chatbot config={config} actionProvider={ActionProvider} \t    messageParser={MessageParser} /> */}\n                        <div>TEst TES TES</div>\n                        </Popup>\n                        {/* <button class=\"circle-div\">HI</button> */}\n                        </div>\n                        {/* <Calendar /> */}\n                    </div>\n\n    )\n}\n\nPlan2.propTypes = {\n    user: PropTypes.object.isRequired,\n    userlevel: PropTypes.number.isRequired\n  };\n  \nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n  });\n\nexport default connect(mapStateToProps)(Plan2);","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/TestPlanSubmit.js",["310","311","312","313","314","315","316","317","318","319","320","321","322","323","324"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate.js",["325","326","327"],"import React from 'react'\nimport { Component } from 'react';\nimport Testpopuptwo from \"./Testpopuptwo\"; \nimport Videomodal from './Videomodal';\nimport Videoselection from './Videoselection';\nimport Chatbot from 'react-chatbot-kit'\n\n\nimport ActionProvider from '../chatbots/motivate/ActionProvider';\nimport MessageParser from '../chatbots/motivate/MessageParser';\nimport config from '../chatbots/motivate/config';\n\nclass Motivate extends Component {\n    state = {\n        show: false\n      };\n      showModal = e => {\n        this.setState({\n          show: !this.state.show\n        });\n      };\n      onClose = e => {\n        this.props.onClose && this.props.onClose(e);\n      };\n    render() {\n    return (\n\n                    <div className=\"block\">\n                        <div>\n                        <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                            \n                            <p>This is the Motivate Page</p>\n                            <Chatbot config={config} actionProvider={ActionProvider} \t    messageParser={MessageParser} />\n                            {/* <Testpopuptwo/>\n                            <button  onClick={e => {\n                                this.showModal();\n                            }}\n                            > show Modal </button> */}\n                            {/* <Videoselection  onClick={e => {\n                                this.showModal();\n                            }} /> */}\n                            {/* <Videomodal onClose={this.showModal} show={this.state.show} /> */}\n                        </nav>\n                        </div>\n                    </div>\n    )}\n}\n\nexport default Motivate;","/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Register.js",["328"],"import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n\n                <div className=\"block\">\n                    <div>\n                        \n                <h1 className=\"large text-primary\">Sign Up</h1>\n                <p className=\"lead\">\n                  <i className=\"fas fa-user\" /> Create Your Account\n                </p>\n                <form className=\"form\" onSubmit={onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      name=\"name\"\n                      value={name}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"email\"\n                      placeholder=\"Email Address\"\n                      name=\"email\"\n                      value={email}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      name=\"password2\"\n                      value={password2}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n                </form>\n                <p className=\"my-1\">\n                  Already have an account? <Link to=\"/login\">Sign In</Link>\n                </p>\n\n              </div>\n                </div>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);",["329","330"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest2.js",[],["331","332"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/StartMindfulness.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Motivate2.js",["333"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Footer.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Plan.js",["334"],"import React from 'react'\nimport planIllustration from '../../img/plan-illustration.svg';\nimport arrowRight from '../../img/arrow-right.svg';\nimport smileyIcon from '../../img/smiley-icon.svg';\nimport smileyIconExtraHappy from '../../img/smiley-icon-extrahappy.svg';\nimport smileyIconNeutral from '../../img/smiley-icon-neutral.svg';\nimport smileyIconUnhappy from '../../img/smiley-icon-unhappy.svg';\nimport smileyIconRound from '../../img/smiley-icon-round.svg';\nimport heartIcon from '../../img/heart-icon.svg';\nimport bowlIcon from '../../img/bowl-icon.svg';\nimport newspaperIcon from '../../img/newspaper-icon.svg';\nimport smileyIconUnhappyRound from '../../img/smiley-icon-unhappy-round.svg';\nimport {Line} from 'react-chartjs-2';\nimport chartTrendline from \"chartjs-plugin-trendline\";\n\n\nconst data = {\n    labels: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'],\n    datasets: [\n      {\n        label: 'Mood',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(128,128,128,1)',\n        borderCapStyle: 'butt',\n        borderWidth: 2,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: 'rgba(75,192,192,1)',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 6,\n        pointHitRadius: 10,\n\n        trendlineLinear: {\n            style: \"rgb(128, 55, 202, 1)\",\n            lineStyle: \"dotted|solid\",\n            width: 2\n        },\n\n        data: [65, 59, null, 80, 81, 32, 56, 55, 40, 12, 45, 32, 23, 67, 32, 34, 21, 10, 8, 12, 56, null, 13, 18, 28, 64, 24, 31, 35, 19]\n      }\n    ]\n  };\n\n  const options = {\n    maintainAspectRatio: true,\n    spanGaps: false,\n    legend:\n    {\n        display: false,\n    },\n    scales:\n    {\n        yAxes: [{\n            display: false,\n            gridLines : {\n                display : false\n            }\n        }],\n        xAxes: [{\n            gridLines : {\n                display : true,\n                drawBorder: true,\n                lineWidth: 1,\n                drawOnChartArea: false\n            }\n        }]\n    }\n  };\n\nexport const Plan = () => {\n    return (\n        <section>\n            <div className=\"flex mx-auto p-4\">\n                <div className=\"flex flex-col flex-grow\">\n                    <div style={{ backgroundImage: \"url(\" + planIllustration + \"), linear-gradient(rgba(177, 201, 243, 0.9), rgba(173, 126, 227, 0.9), rgba(139, 99, 178, 0.9))\" }} className=\"flex rounded-xl mb-3 bg-contain bg-no-repeat bg-right-bottom flex flex-col p-6\">\n                        <div className=\"mb-4\">\n                            <h3 className=\"text-sm leading-6 font-medium text-white uppercase font-black tracking-widest mb-1\">\n                                Your Plan Today\n                            </h3>                        \n                        </div>\n                        <div className=\"flex flex-row w-full justify-between\">\n                            <div className=\"flex\">\n                                <div className=\"flex flex-col w-48\">\n                                    <div className=\"w-24 h-24 bg-gray-100 bg-opacity-50 rounded-3xl mb-2.5\"></div>\n                                    <div className=\"\">\n                                        <h4 className=\"text-sm leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                            Your main goal is to eat\n                                        </h4>\n                                        <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                            smaller amounts and to stop eating when full\n                                        </h5>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"flex w-48\">\n                                <div className=\"flex flex-col\">\n                                    <div className=\"w-24 h-24 bg-gray-100 bg-opacity-50 rounded-3xl mb-2.5\"></div>\n                                    <div className=\"\">\n                                        <h4 className=\"text-sm leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                            When you feel the urge to eat\n                                        </h4>\n                                        <h5 className=\"text-xl leading-6 font-medium text-white font-thin tracking-tight mb-1\">\n                                            take a walk\n                                        </h5> \n                                    </div>\n                                </div>                            \n                            </div>\n                            <div className=\"flex w-48 justify-end pr-10\">\n                                <img src={arrowRight} alt=\"arrow right\" className=\"w-24\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mb-3\">\n                        <Line\n                            data={data}\n                            width={100}\n                            height={15}\n                            options={options}\n                        />\n                    </div>\n                    <div className=\"bg-beaYellow plan-interactive-state\">\n                        <div className=\"sm:p-6 flex-grow\">\n                            <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                                Keep up the good work!\n                            </h3>\n                            <div className=\"mt-2 max-w-xl text-md text-white\">\n                            <p>\n                                Your mood eating has on average been great for the past 30 days.\n                            </p>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"button\" className=\"btn-white\">\n                                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                                    Stay on Track Tips\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex pr-10 align-middle\">\n                            <img src={smileyIconExtraHappy} alt=\"Extra Happy Smiley\" className=\"w-36\" />\n                        </div>\n                    </div>\n\n\n                    <div className=\"bg-beaOrange plan-interactive-state\">\n                        <div className=\"sm:p-6 flex-grow\">\n                            <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                                Keep up the good work!\n                            </h3>\n                            <div className=\"mt-2 max-w-xl text-md text-white\">\n                            <p>\n                                Your mood eating has on average been pretty good for the past 30 days.\n                            </p>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"button\" className=\"btn-white\">\n                                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                                    Stay on Track Tips\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex pr-10 align-middle\">\n                            <img src={smileyIcon} alt=\"Smiley Icon\" className=\"w-36\" />\n                        </div>\n                    </div>\n\n                    <div className=\"bg-beaBlueGreen plan-interactive-state\">\n                        <div className=\"sm:p-6 flex-grow\">\n                            <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                                Keep up the good work!\n                            </h3>\n                            <div className=\"mt-2 max-w-xl text-md text-white\">\n                            <p>\n                                Your mood eating has on average been not good for the past 30 days.\n                            </p>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"button\" className=\"btn-white\">\n                                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                                    Getting Back on Track Tips\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex pr-10 align-middle\">\n                            <img src={smileyIconNeutral} alt=\"Neutral Smiley Face\" className=\"w-36\" />\n                        </div>\n                    </div>\n\n                    <div className=\"bg-beaDarkBlue plan-interactive-state\">\n                        <div className=\"sm:p-6 flex-grow\">\n                            <h3 className=\"text-2xl leading-6 font-medium text-white\">\n                                Keep up the good work!\n                            </h3>\n                            <div className=\"mt-2 max-w-xl text-md text-white\">\n                            <p>\n                                Your mood eating has on average been horrible for the past 30 days.\n                            </p>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"button\" className=\"btn-white\">\n                                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 21v-4m0 0V5a2 2 0 012-2h6.5l1 1H21l-3 6 3 6h-8.5l-1-1H5a2 2 0 00-2 2zm9-13.5V9\"></path></svg>       \n                                    Getting Back on Track Tips\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex pr-10 align-middle\">\n                            <img src={smileyIconUnhappy} alt=\"Unhappy Smiley Icon\" className=\"w-36\" />\n                        </div>\n                    </div>\n\n\n                    <div className=\"bg-gradient-to-r from-beaLightBlue to-gray-50 plan-interactive-state\">\n                        <div className=\"sm:p-6 flex-grow\">\n                            <h3 className=\"text-2xl leading-6 font-thin text-gray-700\">\n                                Get your mood eating trends\n                            </h3>\n                            <div className=\"mt-2 max-w-xl text-md text-gray-700 font-light\">\n                            <p>\n                                When you upgrade you’ll unlock access to all your data which will help keep you on track.\n                            </p>\n                            </div>\n                            <div className=\"mt-5\">\n                                <button type=\"button\" className=\"btn-darkPurple\">       \n                                    Upgrade Today\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div className=\"flex bg-white overflow-hidden border border-gray-400 rounded-xl p-4 mb-3 items-start\">\n                        <img src={smileyIconRound} alt=\"Round Smiley Icon\" className=\"w-36\" />\n                        <div className=\"px-4 py-3 sm:px-6\">\n                            <p className=\"mt-1 max-w-2xl text-sm text-gray-500 mb-0\">\n                                How you felt about what you ate in the past day\n                            </p>\n                            <h3 className=\"text-4xl font-medium text-gray-900 font-extralight mb-3\">\n                                Pretty Good\n                            </h3>\n                            <div className=\"rounded-md bg-beaLightBlue p-4\">\n                                <div className=\"flex\">\n                                    <div className=\"flex-shrink-0\">\n                                        <img src={heartIcon} alt=\"Heart Icon\" className=\"w-5\" />\n                                    </div>\n                                    <div className=\"ml-3 flex-1 md:flex md:justify-between\">\n                                        <p className=\"text-sm text-blue-700 mb-0\">\n                                            <strong>Something emotional</strong> helped you stay on track for the following reason:\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <p className=\"mt-1 text-sm text-gray-700 max-w-prose leading-6\">\n                            Having a better relationship with food and feeling good about making the right food choices. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras mollis rhoncus ipsum ac faucibus. Quisque lectus dui, dignissim non ligula vitae, commodo interdum dui. Integer consectetur ultrices tellus ac sodales. Cras efficitur ipsum risus. Sed laoreet sapien vel ex viverra faucibus. Maecenas at bibendum magna, sed aliquet nibh. Vivamus ac libero in augue maximus euismod vitae ut leo. Vestibulum quis metus malesuada, lobortis diam sit amet, lacinia velit. Donec sit amet nisl arcu. In hac habitasse platea dictumst. Cras aliquet laoreet dui vitae dignissim. Praesent laoreet pellentesque nunc accumsan scelerisque. Proin diam risus, sollicitudin at eros id, volutpat porta orci. Duis at erat quis quam mollis condimentum ut ac magna. Quisque non blandit dui. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In mauris felis, facilisis ut cursus vel, efficitur vitae est. Nam nec metus sodales, pretium nisi at, sollicitudin odio.\n                            <br/><br/>\n                            Duis volutpat malesuada ornare. Sed metus lorem, faucibus ac placerat nec, rutrum finibus dolor. Curabitur consequat rhoncus risus. Donec eleifend convallis tristique. Quisque tempus ligula eu massa auctor, a aliquam eros consequat. Aenean non est elit. Donec commodo purus nisi, eget gravida tellus lobortis et. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Mauris tincidunt, quam vitae feugiat gravida, metus diam elementum sem, eget ornare enim felis at nulla. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Maecenas blandit, elit eget rhoncus laoreet, justo leo dictum purus, ac porta massa sapien non felis.\n                            <br/><br/>\n                            In tincidunt tellus quis lobortis efficitur. Aliquam vestibulum sapien id dui venenatis, non ornare nunc ornare. Ut rhoncus diam sed rhoncus posuere. Vivamus a nunc non elit lacinia efficitur. Mauris sit amet turpis met.\n                            </p>\n                        </div>\n                    </div>\n\n\n\n\n                    <div>\n                        <ul className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-2\">\n                            <li className=\"col-span-1 flex flex-col text-center bg-white rounded-xl divide-y divide-gray-200 border border-gray-400\">\n                                <div className=\"flex-1 flex flex-col p-8 items-center\">\n                                    <span className=\"text-beaBlueText text-sm\">Goal</span>\n                                    <span className=\"mt-6 p-3 bg-beaLightBlue rounded-3xl flex items-center justify-center\">\n                                        <img src={bowlIcon} alt=\"Bowl Icon\" className=\"w-11\" />\n                                    </span>\n                                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">The most important goal for you to have today</span>\n                                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">Smaller amounts and stop eating when full</h2>\n                                    <span className=\"mt-6 p-2 border-2 border-beaLightBlue rounded-2xl flex items-center justify-center\">\n                                        <img src={newspaperIcon} alt=\"Newspaper Icon\" className=\"w-7\" />\n                                    </span>\n                                    <span className=\"mt-1 text-gray-700 text-sm font-bold uppercase tracking-wider\">BEA’S RECOMMENDED READ</span>\n                                    <span className=\"mt-1 mb-3 text-gray-700 text-sm font-light\">Healthy Eating: Recognizing Your Hunger Signals</span>\n                                    <button type=\"button\" className=\"btn-darkPurple\">       \n                                        Read Article\n                                    </button>\n                                </div>\n                            </li>\n                            <li className=\"col-span-1 flex flex-col text-center bg-white rounded-xl divide-y divide-gray-200 border border-gray-400\">\n                                <div className=\"flex-1 flex flex-col p-8 items-center\">\n                                    <span className=\"text-beaBlueText text-sm\">Goal</span>\n                                    <span className=\"mt-6 p-3 bg-beaLightBlue rounded-3xl flex items-center justify-center\">\n                                        <img src={bowlIcon}  alt=\"Bowl Icon\" className=\"w-11\" />\n                                    </span>\n                                    <span className=\"mt-6 text-gray-700 text-sm font-thin\">The most important goal for you to have today</span>\n                                    <h2 className=\"mt-0 text-gray-700 text-3xl font-light\">Smaller amounts and stop eating when full</h2>\n                                    <span className=\"mt-6 p-2 border-2 border-beaLightBlue rounded-2xl flex items-center justify-center\">\n                                        <img src={newspaperIcon} alt=\"Newspaper Icon\" className=\"w-7\" />\n                                    </span>\n                                    <span className=\"mt-1 text-gray-700 text-sm font-bold uppercase tracking-wider\">BEA’S RECOMMENDED READ</span>\n                                    <span className=\"mt-1 mb-3 text-gray-700 text-sm font-light\">Healthy Eating: Recognizing Your Hunger Signals</span>\n                                    <button type=\"button\" className=\"btn-darkPurple\">       \n                                        Read Article\n                                    </button>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n\n\n\n\n\n                    <div className=\"flex flex-col max-w-full overflow-hidden\">\n                        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                            <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                            <div className=\"overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                                <table className=\"min-w-full divide-y divide-gray-200\">\n                                <tbody className=\"bg-white divide-y divide-gray-200\">\n                                    <tr>\n                                        <td className=\"px-6 py-4\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"flex flex-col items-center\">\n                                                        <div className=\"text-xs font-light text-gray-700\">\n                                                        Today\n                                                        </div>\n                                                        <div className=\"text-3xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                        27\n                                                        </div>\n                                                </div>\n                                                <div className=\"flex ml-4 items-center justify-center\">\n                                                    <span className=\"p-1 mr-3 bg-beaLightBlue rounded-xl flex items-center justify-center\">\n                                                            <img src={bowlIcon} alt=\"Bowl Icon\" className=\"w-12\" />\n                                                    </span>\n                                                    <div>\n                                                        <div className=\"text-sm font-light text-gray-700\">\n                                                        Your main goal is to eat\n                                                        </div>\n                                                        <div className=\"text-xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                            smaller amounts and<br/>\n                                                            stop eating when full\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td className=\"px-2 py-4\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"flex ml-4 items-center justify-center\">\n                                                    <span className=\"p-1 mr-3 bg-beaLightBlue rounded-xl flex items-center justify-center\">\n                                                            <img src={bowlIcon} alt=\"Bowl Icon\" className=\"w-12\" />\n                                                    </span>\n                                                    <div>\n                                                        <div className=\"text-sm font-light text-gray-700\">\n                                                            When you feel the urge to eat\n                                                        </div>\n                                                        <div className=\"text-xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                            take a walk\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                            <img src={smileyIconUnhappyRound} alt=\"Unahppy Smiley Icon\" className=\"w-14\" />\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"px-6 py-4\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"flex flex-col items-center\">\n                                                        <div className=\"text-xs font-light text-gray-700\">\n                                                        Today\n                                                        </div>\n                                                        <div className=\"text-3xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                        27\n                                                        </div>\n                                                </div>\n                                                <div className=\"flex ml-4 items-center justify-center\">\n                                                    <span className=\"p-1 mr-3 bg-beaLightBlue rounded-xl flex items-center justify-center\">\n                                                            <img src={bowlIcon} alt=\"Bowl Icon\" className=\"w-12\" />\n                                                    </span>\n                                                    <div>\n                                                        <div className=\"text-sm font-light text-gray-700\">\n                                                        Your main goal is to eat\n                                                        </div>\n                                                        <div className=\"text-xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                            smaller amounts and<br/>\n                                                            stop eating when full\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td className=\"px-2 py-4\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"flex ml-4 items-center justify-center\">\n                                                    <span className=\"p-1 mr-3 bg-beaLightBlue rounded-xl flex items-center justify-center\">\n                                                            <img src={bowlIcon} alt=\"Bowl Icon\" className=\"w-12\" />\n                                                    </span>\n                                                    <div>\n                                                        <div className=\"text-sm font-light text-gray-700\">\n                                                            When you feel the urge to eat\n                                                        </div>\n                                                        <div className=\"text-xl text-gray-700 overflow-hidden break-words max-w-xl overflow-hidden leading-tight\">\n                                                            take a walk\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                            <img src={smileyIconUnhappyRound} alt=\"Unhappy Smiley Icon\" className=\"w-14\" />\n                                        </td>\n                                    </tr>\n                                </tbody>\n                                </table>\n                            </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n\n\n\n\n\n\n                </div>\n                <div className=\"w-72 min-w-72 pl-3\">\n                    <div className=\"flex justify-center items-center w-full h-72 rounded-xl bg-gray-300 w-72\">\n                        <button type=\"button\" className=\"relative inline-flex items-center px-6 py-2 shadow-none text-sm font-medium rounded-full text-beaDarkPurple hover:bg-beaDarkPurple hover:text-white transition-all border-t border-b border-l border-r border-beaDarkPurple group focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                        <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\"></path></svg>\n                        Call to Action\n                        </button>\n                    </div>\n                </div>  \n            </div>\n        </section>\n    )\n}\n\nexport default Plan;","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Videomodal.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/config.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/MessageParser.js",["335"],"import React from \"react\";\n\n// MessageParser starter code\nclass MessageParser {\n    constructor(actionProvider, state) {\n      this.actionProvider = actionProvider;\n      this.state = state;\n    }\n\n    parse(message) {\n      console.log(message)\n      console.log(\"State contains\", this.state)\n      console.log(\"State flag contains\", this.state.waitingformsgflag)\n      const lowerCaseMessage = message.toLowerCase()\n      if(this.state.waitingformsgflag){\n        console.log(\"flag was true\");\n        if(this.state.lastblockvisited === \"Plan Good Block\"){\n          this.actionProvider.plangoodjournal2(message)\n        }\n        if(this.state.lastblockvisited === \"Emotional Behavioral\"){\n          this.actionProvider.planbadjournal2(message)\n        }\n        if(this.state.lastblockvisited === \"Food Choices\"){\n          this.actionProvider.somethingelse2(message)\n        }\n        if(this.state.lastblockvisited === \"Something Else\"){\n          this.actionProvider.somethingelse3(message)\n        }\n      }\n      else {\n      if (lowerCaseMessage.includes(\"shit\") || lowerCaseMessage.includes(\"fuck\") || lowerCaseMessage.includes(\"pussy\") || lowerCaseMessage.includes(\"dick\") || lowerCaseMessage.includes(\"asshole\") || lowerCaseMessage.includes(\"bitch\") || lowerCaseMessage.includes(\"fucker\") || lowerCaseMessage.includes(\"cunt\")) {\n        this.actionProvider.nofoulwords()\n      }\n      else if (lowerCaseMessage.includes(\"die\") || lowerCaseMessage.includes(\"suicide\") || lowerCaseMessage.includes(\"harm\") || lowerCaseMessage.includes(\"kill\") || lowerCaseMessage.includes(\"death\") || lowerCaseMessage.includes(\"dying\") || lowerCaseMessage.includes(\"cut\") || lowerCaseMessage.includes(\"hurt myself\")) {\n        this.actionProvider.emergency()\n      }\n      else if (lowerCaseMessage.includes(\"therapy\") || lowerCaseMessage.includes(\"therapist\") || lowerCaseMessage.includes(\"psychologist\") || lowerCaseMessage.includes(\"psychotherapist\")) {\n        this.actionProvider.findtherapist()\n      }            \n      else if (lowerCaseMessage.includes(\"hello\") || lowerCaseMessage.includes(\"hi\") || lowerCaseMessage.includes(\"bea\")) {\n        this.actionProvider.greet()\n      }     \n      else {\n          this.actionProvider.dontunderstand()\n      }\n    }\n  }\n    \n  }\n  \n  export default MessageParser;","/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Spinner.js",["336"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AfterEatingFeel.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FullnessLength.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest3.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/InitialEatingLength.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningIntro.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanGoodBlock.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/LessSugar.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Dashboard.js",["337"],"import React from 'react'\nimport Login from '../auth/Login';\n\nexport const Dashboard = () => {\n    return (\n        <div className=\"block\">\n        <div>\n            \n            <p>This is the Dashboard Page</p>\n        </div>\n    </div>\n      \n\n    )\n}\n\nexport default Dashboard;","/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Login.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Testpopuptwo.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Calendar.js",["338"],"\nimport React from \"react\";\nimport {format, startOfWeek, endOfWeek, startOfMonth, endOfMonth, isSameDay, isSameMonth, parse, addDays, addMonths, subMonths} from \"date-fns\";\nimport { differenceInCalendarDays } from 'date-fns';\n\nclass Calendar extends React.Component {\n  state = {\n    currentMonth: new Date(),\n    selectedDate: new Date()\n  };\n\n  renderHeader() {\n    const dateFormat = \"MMMM yyyy\";\n\n    return (\n      <div className=\"header row flex-middle\">\n        <div className=\"col col-start\">\n          <div className=\"icon\" onClick={this.prevMonth}>\n            chevron_left\n          </div>\n        </div>\n        <div className=\"col col-center\">\n          <span>{format(this.state.currentMonth, dateFormat)}</span>\n        </div>\n        <div className=\"col col-end\" onClick={this.nextMonth}>\n          <div className=\"icon\">chevron_right</div>\n        </div>\n      </div>\n    );\n  }\n\n  renderDays() {\n    const dateFormat = \"dddd\";\n    const days = [];\n\n    let startDate = startOfWeek(this.state.currentMonth);\n\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className=\"col col-center\" key={i}>\n          {format(addDays(startDate, i), dateFormat)}\n        </div>\n      );\n    }\n\n    return <div className=\"days row\">{days}</div>;\n  }\n\n  renderCells() {\n    const { currentMonth, selectedDate } = this.state;\n    const monthStart = startOfMonth(currentMonth);\n    const monthEnd = endOfMonth(monthStart);\n    const startDate = startOfWeek(monthStart);\n    const endDate = endOfWeek(monthEnd);\n\n    const dateFormat = \"d\";\n    const rows = [];\n\n    let days = [];\n    let day = startDate;\n    let formattedDate = \"\";\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = format(day, dateFormat);\n        const cloneDay = day;\n        days.push(\n          <div\n            className={`col cell ${\n              !isSameMonth(day, monthStart)\n                ? \"disabled\"\n                : isSameDay(day, selectedDate) ? \"selected\" : \"\"\n            }`}\n            key={day}\n            onClick={() => this.onDateClick(parse(cloneDay))}\n          >\n            <span className=\"number\">{formattedDate}</span>\n            <span className=\"bg\">{formattedDate}</span>\n          </div>\n        );\n        day = addDays(day, 1);\n      }\n      rows.push(\n        <div className=\"row\" key={day}>\n          {days}\n        </div>\n      );\n      days = [];\n    }\n    return <div className=\"body\">{rows}</div>;\n  }\n\n  onDateClick = day => {\n    this.setState({\n      selectedDate: day\n    });\n  };\n\n  nextMonth = () => {\n    this.setState({\n      currentMonth: addMonths(this.state.currentMonth, 1)\n    });\n  };\n\n  prevMonth = () => {\n    this.setState({\n      currentMonth: subMonths(this.state.currentMonth, 1)\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"calendar\">\n        {this.renderHeader()}\n        {this.renderDays()}\n        {this.renderCells()}\n      </div>\n    );\n  }\n}\n\nexport default Calendar;","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/config.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AreyouReady.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/PlanningLength.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/FoodChoices.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/auth/Signup.js",["339","340","341","342","343","344"],"import React, {useState} from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport { Card, Image } from 'react-bootstrap';\n\nexport const Signup = ({register}) => {\n    const [login, setLogin] = useState(false);\n    const [data, setData] = useState({});\n    const [picture, setPicture] = useState('');\n  \n    // const responseFacebook = (response) => {\n    //   console.log(response);\n    //   setData(response);\n    //   if (response.accessToken) {\n    //     setLogin(true);\n    //     setPicture(response.picture.data.url);\n    //     console.log(\"Picture is ... \", response.picture.data.url);\n    //     console.log(\"Name is ... \", response.name);\n    //     console.log(\"ID is... \", response.id);\n    //     console.log(\"User ID is... \", response.userID);\n    //   } else {\n    //     setLogin(false);\n    //   }\n    // }\n  \n    return (\n      <div class=\"container\">\n        <Card style={{ width: '600px' }}>\n          {/* <Card.Header>\n            { !login && \n              <FacebookLogin\n                appId=\"1012841372568288\"\n                autoLoad={true}\n                fields=\"name,email,picture\"\n                scope=\"public_profile,user_friends\"\n                callback={responseFacebook}\n                icon=\"fa-facebook\" />\n            }\n            { login &&\n              <Image src={picture} roundedCircle />\n            }\n          </Card.Header> */}\n          { login &&\n            <Card.Body>\n              <Card.Title>{data.name}</Card.Title>\n              <Card.Text>\n                {data.email}\n              </Card.Text>\n            </Card.Body>\n          }\n        </Card>\n      </div>\n    );\n}\n\nexport default Signup;","/Users/anders/dev/Bea/bea-be-2/client/src/utils/api.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/ActionProvider.js",["345"],"import React from 'react'\n\n// ActionProvider starter code\nclass ActionProvider {\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n      this.createChatBotMessage = createChatBotMessage;\n      this.setState = setStateFunc;\n      this.createClientMessage = createClientMessage;\n    }\n    greet() {\n        const greetingMessage = this.createChatBotMessage(\"Hello friend\");\n        this.updateChatbotState(greetingMessage)\n    }\n    handleLetsBegin = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`To start, let’s Rate how you are currently feeling.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`How tempted are you to eat in a way that isn't ideal for you right now?`, {\n            delay: 4000,\n            widget: \"howtempted\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    handleHowTempted = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`To start, let’s Rate how you are currently feeling.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`How tempted are you to eat in a way that isn't ideal for you right now?`, {\n            delay: 4000,\n            widget: \"howtempted\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    notAtAll = () => {\n        const notAtAllMessage = \n        [this.createChatBotMessage(`I'm so glad to hear that. 🏆 Keep up the good work!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Let’s do a Visualization anyways to make sure you stay on this positive path.`, {\n            delay: 4000,\n            widget: \"visualization\",\n        })];\n        this.addMessageToBotState(notAtAllMessage)\n    }\n    slightSomewhat = () => {\n        const slightSomewhatMessage = \n        [this.createChatBotMessage(`So you are a little bit tempted right now, but it’s okay, I’m here to help!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Let’s do a Visualization to help you quell your craving.`, {\n            delay: 4000,\n            widget: \"visualization\",\n        })];\n        this.addMessageToBotState(slightSomewhatMessage)\n    }\n    veryExtremely = () => {\n        const veryExtremelyMessage = \n        [this.createChatBotMessage(`Oh no - I'm sorry to hear that. 🙁`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`But that's okay. I'm here to help!`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Let’s do our daily Visualization to help you feel more in control of your eating.`, {\n            delay: 6000,\n            widget: \"visualization\",\n        })];\n        this.addMessageToBotState(veryExtremelyMessage)\n    }\n    visualization = () => {\n        const visualizationMessage = \n        [this.createChatBotMessage(`A Visualization helps you evaluate how you will feel if you make a particular food choice.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This often makes it easier to control your urges.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Your Visualization for the day is: Evaluating Moods`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`This Visualization will help you weigh the emotional costs and benefits of eating different foods.`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`First, take a moment to think about what you’re planning to eat next.`, {\n            delay: 12000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready.`, {\n            delay: 14000,\n            widget: \"planningIntro\",\n        })];\n        this.addMessageToBotState(visualizationMessage)\n    }\n    // evaluatingMoods = () => {\n    //     const evaluatingMoodsMessage = \n    //     [this.createChatBotMessage(`Your Visualization for the day is: Evaluating Moods`, {\n    //         delay: 2000,\n    //     }),\n    //     this.createChatBotMessage(`This Visualization will help you weigh the emotional costs and benefits of eating different foods.`, {\n    //         delay: 4000,\n    //     }),\n    //     this.createChatBotMessage(`First, take a moment to think about what you’re planning to eat next.`, {\n    //         delay: 6000,\n    //     }),\n    //     this.createChatBotMessage(`Let me know when you’re ready.`, {\n    //         delay: 8000,\n    //         widget: \"planningIntro\",\n    //     })];\n    //     this.addMessageToBotState(evaluatingMoodsMessage)\n    // }\n    planningPhase = () => {\n        const planningPhaseMessage = \n        [this.createChatBotMessage(`Great! What are you planning to eat? Please type below: FOR TEST PURPOSES THIS IS NOT YET IMPLEMENTED`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Keeping that food in mind, let’s answer a few questions:`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`How do you feel during the Planning Phase, from when you first start thinking about food up until you take the first bite?`, {\n            delay: 6000,\n            widget: \"planningFeel\",\n        })];\n        this.addMessageToBotState(planningPhaseMessage)\n    }\n    planningPhaseLength = () => {\n        const planningPhaseLengthMessage = \n        [this.createChatBotMessage(`How long does your Planning Phase generally last?`, {\n            delay: 2000,\n            widget: \"planningLength\",\n        })];\n        this.addMessageToBotState(planningPhaseLengthMessage)\n    }\n    initialEatingIntro = () => {\n        const initialEatingIntroMessage = \n        [this.createChatBotMessage(`Now let's focus on the Initial Eating Phase.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This is the time from when you take your first bite of food up until when you first start to feel full.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Continuing to imagine what you were planning to eat, how do you think you’d feel during this time?`, {\n            delay: 6000,\n            widget: \"initialEatingFeel\",\n        })];\n        this.addMessageToBotState(initialEatingIntroMessage)\n    }\n    initialEatingLength = () => {\n        const initialEatingLengthMessage = \n        [this.createChatBotMessage(`How long do you think your Initial Eating Phase would last?`, {\n            delay: 2000,\n            widget: \"initialEatingLength\",\n        })];\n        this.addMessageToBotState(initialEatingLengthMessage)\n    }\n    fullnessIntro = () => {\n        const fullnessIntroMessage = \n        [this.createChatBotMessage(`Next, let's focus on the Fullness Phase.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This is the time when you continue to eat after you are comfortably full.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`How do you imagine you’d feel during this time?`, {\n            delay: 6000,\n            widget: \"fullnessFeel\",\n        })];\n        this.addMessageToBotState(fullnessIntroMessage)\n    }\n    fullnessLength = () => {\n        const fullnessLengthMessage = \n        [this.createChatBotMessage(`How long do you think your Fullness Phase would last?`, {\n            delay: 2000,\n            widget: \"fullnessLength\",\n        })];\n        this.addMessageToBotState(fullnessLengthMessage)\n    }\n    afterEatingIntro = () => {\n        const afterEatingMessage = \n        [this.createChatBotMessage(`Lastly, let’s focus on the After Eating Phase — what happens after you stop eating and when you’re still feeling full.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`How do you imagine you’d feel during this time?`, {\n            delay: 4000,\n            widget: \"afterEatingFeel\",\n        })];\n        this.addMessageToBotState(afterEatingMessage)\n    }\n    afterEatingLength = () => {\n        const afterEatingLengthMessage = \n        [this.createChatBotMessage(`How long do you think you’d continue to feel full if you eat the food/foods you were planning to eat?`, {\n            delay: 2000,\n            widget: \"afterEatingLength\",\n        })];\n        this.addMessageToBotState(afterEatingLengthMessage)\n    }\n    feelBest1 = () => {\n        const feelBest1Message = \n        [this.createChatBotMessage(`If you decide to eat the food you listed previously, in which phase do you think you’d feel the best?`, {\n            delay: 2000,\n            widget: \"feelBest1\",\n        })];\n        this.addMessageToBotState(feelBest1Message)\n    }\n    feelBest2 = () => {\n        const feelBest2Message = \n        [this.createChatBotMessage(`In which phase would you feel the worst?`, {\n            delay: 2000,\n            widget: \"feelBest2\",\n        })];\n        this.addMessageToBotState(feelBest2Message)\n    }\n    feelBest3 = () => {\n        const feelBest3Message = \n        [this.createChatBotMessage(`Overall, how would you feel if you decide to eat the food you were planning to eat?`, {\n            delay: 2000,\n            widget: \"feelBest3\",\n        })];\n        this.addMessageToBotState(feelBest3Message)\n    }\n    feelBest4 = () => {\n        const feelBest4Message = \n        [this.createChatBotMessage(`Take a moment now to reflect on your answers.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`When you’re ready, we’ll move on to your Mindfulness Exercise for today.`, {\n            delay: 4000,\n            widget: \"startMindfulness\",\n        })];\n        this.addMessageToBotState(feelBest4Message)\n    }\n    mindfulness = () => {\n        const mindfulnessMessage = \n        [this.createChatBotMessage(`I have several different 1-minute Mindfulness Exercises we can do together.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`I’ll choose one at random, but you can always come back later to try a different one.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Your 1-minute mindfulness exercise for today is to STRETCH!`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Doesn't it feel good to stretch? 🤗`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`Would you prefer to do your Stretch Mindfulness Exercise by continuing to message with me or by listening to my voice?`, {\n            delay: 12000,\n            widget: \"stretchMsgorVoice\",\n        })];\n        this.addMessageToBotState(mindfulnessMessage)\n    }\n    stretchMessage = () => {\n        const stretchMessage = \n        [this.createChatBotMessage(`Take a slow, deep breath in . . .`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Stretch really, really slowly for at least 10 seconds.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`If you notice any tightness . . .`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`. . .  just say “ease” or \"hello\" to that place in your body.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Take another 20 seconds to stretch and notice any feeling of calmness in your body.`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`Now take your time to reorient yourself to the present.`, {\n            delay: 12000,\n        }),\n        this.createChatBotMessage(`And when you are ready, we will mindfully move forward.`, {\n            delay: 14000,\n            widget: \"motivateAfter\",\n        })];\n        this.addMessageToBotState(stretchMessage)\n    }\n    motivateAfter = () => {\n        const motivateAfterMessage = \n        [this.createChatBotMessage(`Thanks for taking the time to do this Motivational work!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`After doing these exercises, how do you feel about your ability to calm your cravings?`, {\n            delay: 4000,\n            widget: \"motivateAfterOptions\",\n        })];\n        this.addMessageToBotState(motivateAfterMessage)\n    }\n    thankYouDemo = () => {\n        const thankYouDemoMessage = \n        [this.createChatBotMessage(`Thanks for participating in this demo with me!`, {\n            delay: 2000,\n        })];\n        this.addMessageToBotState(thankYouDemoMessage)\n    }\n    nofoulwords() {\n        const nofoulwordsMessage = \n        [this.createChatBotMessage(`I can tell by what you just wrote that you are upset, and that is of course okay.`), \n        this.createChatBotMessage(`Sometimes our language is a genuine expression of how we feel.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`For these meditations, I have included metaphors and analogies to help you listen to your body and think about food differently.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`That being said, I work best when you just press buttons.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Please scroll up to the last place you could make a selection in order to continue.`, {\n            delay: 8000,\n        })];\n        // this.updateChatbotState(nofoulwordsMessage)\n        this.addMessageToBotState(nofoulwordsMessage)\n    }\n    dontunderstand() {\n        const dontunderstandMessage = \n        [this.createChatBotMessage(`🤔`), \n        this.createChatBotMessage(`My robot brain does not compute what you just wrote.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Scroll back up to the last place you could select a button in order to continue where we left off.`, {\n            delay: 4000,\n        })];\n        this.addMessageToBotState(dontunderstandMessage)\n    }\n    emergency() {\n        const emergencyMessage = \n        [this.createChatBotMessage(`Oh no! I'm so sorry to hear that you’re feeling so badly.`), \n        this.createChatBotMessage(`Please know that however down you feel, you are never alone.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Call the National Suicide Prevention Lifeline at 1-800-273-8255 to get help.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`If your need is more urgent, PLEASE call 911 right away or go to your nearest emergency room.`, {\n            delay: 6000,\n        })];\n        // this.updateChatbotState(emergencyMessage)\n        this.addMessageToBotState(emergencyMessage)\n    }\n    findtherapist() {\n        const therapyMessage = \n        [this.createChatBotMessage(`I'm glad you’re ready to take that step!`), \n        this.createChatBotMessage(`I've located a number of therapists in your area that specialize in issues with food and eating.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Please press below and I will redirect you.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`And if I can still be of help, we can continue at any time!`, {\n            delay: 6000,\n        })];\n        this.addMessageToBotState(therapyMessage)\n        // this.createChatBotMessage(\"I'm glad you’re ready to take that step!\");\n        // this.updateChatbotState(therapyMessage)\n    }\n    updateChatbotState(message) {\n \n        // NOTE: This function is set in the constructor, and is passed in      \n        // from the top level Chatbot component. The setState function here     \n        // actually manipulates the top level state of the Chatbot, so it's     \n        // important that we make sure that we preserve the previous state.\n         \n            \n           this.setState(prevState => ({\n                ...prevState, messages: [...prevState.messages, message]\n            }))\n          }\n    addMessageToBotState = (messages) => {\n            if (Array.isArray(messages)) {\n              this.setState((prevState) => ({\n                ...prevState,\n                messages: [...prevState.messages, ...messages],\n              }));\n            } else {\n              this.setState((prevState) => ({\n                ...prevState,\n                messages: [...prevState.messages, messages],\n              }));\n            }\n          };\n  }\n  \n  export default ActionProvider;\n","/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/AfterEatingLength.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/FeelBest1.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/InitialEatingFeel.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanBadBlock.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/SmallerPortions.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/Alert.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/HowDoYouFeel.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/MotivateAfter.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/routing/Routes.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/routing/PrivateRoute.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/layout/RecentVideos.js",["346","347","348"],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/plan/PlanGoal.js",[],"/Users/anders/dev/Bea/bea-be-2/client/src/components/chatbots/motivate/StretchMsgorVoice.js",[],{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","severity":1,"message":"354","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":12},{"ruleId":"353","severity":1,"message":"357","line":5,"column":8,"nodeType":"355","messageId":"356","endLine":5,"endColumn":25},{"ruleId":"353","severity":1,"message":"358","line":35,"column":11,"nodeType":"355","messageId":"356","endLine":35,"endColumn":20},{"ruleId":"353","severity":1,"message":"359","line":67,"column":15,"nodeType":"355","messageId":"356","endLine":67,"endColumn":25},{"ruleId":"349","replacedBy":"360"},{"ruleId":"351","replacedBy":"361"},{"ruleId":"349","replacedBy":"362"},{"ruleId":"351","replacedBy":"363"},{"ruleId":"353","severity":1,"message":"364","line":1,"column":8,"nodeType":"355","messageId":"356","endLine":1,"endColumn":11},{"ruleId":"353","severity":1,"message":"365","line":5,"column":3,"nodeType":"355","messageId":"356","endLine":5,"endColumn":16},{"ruleId":"353","severity":1,"message":"366","line":82,"column":9,"nodeType":"355","messageId":"356","endLine":82,"endColumn":23},{"ruleId":"349","replacedBy":"367"},{"ruleId":"351","replacedBy":"368"},{"ruleId":"353","severity":1,"message":"369","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":14},{"ruleId":"370","severity":1,"message":"371","line":37,"column":175,"nodeType":"372","endLine":37,"endColumn":196},{"ruleId":"353","severity":1,"message":"373","line":3,"column":10,"nodeType":"355","messageId":"356","endLine":3,"endColumn":19},{"ruleId":"353","severity":1,"message":"374","line":4,"column":10,"nodeType":"355","messageId":"356","endLine":4,"endColumn":14},{"ruleId":"375","severity":1,"message":"376","line":11,"column":32,"nodeType":"377","messageId":"378","endLine":11,"endColumn":34},{"ruleId":"353","severity":1,"message":"379","line":3,"column":10,"nodeType":"355","messageId":"356","endLine":3,"endColumn":16},{"ruleId":"353","severity":1,"message":"380","line":4,"column":16,"nodeType":"355","messageId":"356","endLine":4,"endColumn":19},{"ruleId":"353","severity":1,"message":"381","line":4,"column":21,"nodeType":"355","messageId":"356","endLine":4,"endColumn":28},{"ruleId":"353","severity":1,"message":"382","line":1,"column":38,"nodeType":"355","messageId":"356","endLine":1,"endColumn":46},{"ruleId":"353","severity":1,"message":"383","line":2,"column":50,"nodeType":"355","messageId":"356","endLine":2,"endColumn":61},{"ruleId":"353","severity":1,"message":"384","line":2,"column":63,"nodeType":"355","messageId":"356","endLine":2,"endColumn":73},{"ruleId":"353","severity":1,"message":"385","line":8,"column":8,"nodeType":"355","messageId":"356","endLine":8,"endColumn":16},{"ruleId":"353","severity":1,"message":"386","line":9,"column":8,"nodeType":"355","messageId":"356","endLine":9,"endColumn":16},{"ruleId":"353","severity":1,"message":"387","line":10,"column":8,"nodeType":"355","messageId":"356","endLine":10,"endColumn":12},{"ruleId":"353","severity":1,"message":"388","line":11,"column":8,"nodeType":"355","messageId":"356","endLine":11,"endColumn":13},{"ruleId":"353","severity":1,"message":"389","line":12,"column":8,"nodeType":"355","messageId":"356","endLine":12,"endColumn":22},{"ruleId":"353","severity":1,"message":"390","line":13,"column":8,"nodeType":"355","messageId":"356","endLine":13,"endColumn":18},{"ruleId":"353","severity":1,"message":"391","line":14,"column":8,"nodeType":"355","messageId":"356","endLine":14,"endColumn":16},{"ruleId":"353","severity":1,"message":"392","line":15,"column":8,"nodeType":"355","messageId":"356","endLine":15,"endColumn":23},{"ruleId":"353","severity":1,"message":"393","line":16,"column":8,"nodeType":"355","messageId":"356","endLine":16,"endColumn":15},{"ruleId":"353","severity":1,"message":"394","line":18,"column":8,"nodeType":"355","messageId":"356","endLine":18,"endColumn":13},{"ruleId":"353","severity":1,"message":"395","line":19,"column":8,"nodeType":"355","messageId":"356","endLine":19,"endColumn":14},{"ruleId":"353","severity":1,"message":"396","line":20,"column":8,"nodeType":"355","messageId":"356","endLine":20,"endColumn":16},{"ruleId":"353","severity":1,"message":"397","line":21,"column":8,"nodeType":"355","messageId":"356","endLine":21,"endColumn":20},{"ruleId":"353","severity":1,"message":"398","line":23,"column":10,"nodeType":"355","messageId":"356","endLine":23,"endColumn":16},{"ruleId":"353","severity":1,"message":"399","line":4,"column":10,"nodeType":"355","messageId":"356","endLine":4,"endColumn":17},{"ruleId":"353","severity":1,"message":"400","line":5,"column":8,"nodeType":"355","messageId":"356","endLine":5,"endColumn":17},{"ruleId":"370","severity":1,"message":"371","line":37,"column":170,"nodeType":"372","endLine":37,"endColumn":191},{"ruleId":"353","severity":1,"message":"401","line":7,"column":8,"nodeType":"355","messageId":"356","endLine":7,"endColumn":16},{"ruleId":"353","severity":1,"message":"374","line":5,"column":10,"nodeType":"355","messageId":"356","endLine":5,"endColumn":14},{"ruleId":"353","severity":1,"message":"402","line":5,"column":16,"nodeType":"355","messageId":"356","endLine":5,"endColumn":24},{"ruleId":"353","severity":1,"message":"403","line":6,"column":8,"nodeType":"355","messageId":"356","endLine":6,"endColumn":13},{"ruleId":"353","severity":1,"message":"404","line":26,"column":7,"nodeType":"355","messageId":"356","endLine":26,"endColumn":23},{"ruleId":"353","severity":1,"message":"405","line":28,"column":7,"nodeType":"355","messageId":"356","endLine":28,"endColumn":18},{"ruleId":"353","severity":1,"message":"406","line":29,"column":7,"nodeType":"355","messageId":"356","endLine":29,"endColumn":20},{"ruleId":"353","severity":1,"message":"407","line":30,"column":7,"nodeType":"355","messageId":"356","endLine":30,"endColumn":19},{"ruleId":"353","severity":1,"message":"408","line":31,"column":7,"nodeType":"355","messageId":"356","endLine":31,"endColumn":18},{"ruleId":"353","severity":1,"message":"409","line":32,"column":7,"nodeType":"355","messageId":"356","endLine":32,"endColumn":23},{"ruleId":"353","severity":1,"message":"410","line":33,"column":7,"nodeType":"355","messageId":"356","endLine":33,"endColumn":19},{"ruleId":"353","severity":1,"message":"411","line":34,"column":7,"nodeType":"355","messageId":"356","endLine":34,"endColumn":23},{"ruleId":"353","severity":1,"message":"412","line":35,"column":7,"nodeType":"355","messageId":"356","endLine":35,"endColumn":15},{"ruleId":"353","severity":1,"message":"413","line":36,"column":7,"nodeType":"355","messageId":"356","endLine":36,"endColumn":16},{"ruleId":"353","severity":1,"message":"414","line":37,"column":7,"nodeType":"355","messageId":"356","endLine":37,"endColumn":16},{"ruleId":"353","severity":1,"message":"415","line":38,"column":7,"nodeType":"355","messageId":"356","endLine":38,"endColumn":16},{"ruleId":"353","severity":1,"message":"416","line":3,"column":8,"nodeType":"355","messageId":"356","endLine":3,"endColumn":20},{"ruleId":"353","severity":1,"message":"417","line":4,"column":8,"nodeType":"355","messageId":"356","endLine":4,"endColumn":18},{"ruleId":"353","severity":1,"message":"418","line":5,"column":8,"nodeType":"355","messageId":"356","endLine":5,"endColumn":22},{"ruleId":"353","severity":1,"message":"419","line":1,"column":17,"nodeType":"355","messageId":"356","endLine":1,"endColumn":25},{"ruleId":"349","replacedBy":"420"},{"ruleId":"351","replacedBy":"421"},{"ruleId":"349","replacedBy":"422"},{"ruleId":"351","replacedBy":"423"},{"ruleId":"353","severity":1,"message":"424","line":3,"column":13,"nodeType":"355","messageId":"356","endLine":3,"endColumn":15},{"ruleId":"353","severity":1,"message":"425","line":14,"column":8,"nodeType":"355","messageId":"356","endLine":14,"endColumn":22},{"ruleId":"353","severity":1,"message":"426","line":1,"column":8,"nodeType":"355","messageId":"356","endLine":1,"endColumn":13},{"ruleId":"427","severity":1,"message":"428","line":4,"column":1,"nodeType":"429","endLine":12,"endColumn":3},{"ruleId":"353","severity":1,"message":"394","line":2,"column":8,"nodeType":"355","messageId":"356","endLine":2,"endColumn":13},{"ruleId":"353","severity":1,"message":"430","line":4,"column":10,"nodeType":"355","messageId":"356","endLine":4,"endColumn":34},{"ruleId":"353","severity":1,"message":"431","line":2,"column":8,"nodeType":"355","messageId":"356","endLine":2,"endColumn":21},{"ruleId":"353","severity":1,"message":"432","line":3,"column":16,"nodeType":"355","messageId":"356","endLine":3,"endColumn":21},{"ruleId":"353","severity":1,"message":"433","line":6,"column":19,"nodeType":"355","messageId":"356","endLine":6,"endColumn":27},{"ruleId":"353","severity":1,"message":"434","line":7,"column":18,"nodeType":"355","messageId":"356","endLine":7,"endColumn":25},{"ruleId":"353","severity":1,"message":"435","line":8,"column":12,"nodeType":"355","messageId":"356","endLine":8,"endColumn":19},{"ruleId":"353","severity":1,"message":"436","line":8,"column":21,"nodeType":"355","messageId":"356","endLine":8,"endColumn":31},{"ruleId":"353","severity":1,"message":"426","line":1,"column":8,"nodeType":"355","messageId":"356","endLine":1,"endColumn":13},{"ruleId":"353","severity":1,"message":"374","line":4,"column":10,"nodeType":"355","messageId":"356","endLine":4,"endColumn":14},{"ruleId":"353","severity":1,"message":"437","line":5,"column":8,"nodeType":"355","messageId":"356","endLine":5,"endColumn":21},{"ruleId":"353","severity":1,"message":"438","line":12,"column":8,"nodeType":"355","messageId":"356","endLine":12,"endColumn":22},"no-native-reassign",["439"],"no-negated-in-lhs",["440"],"no-unused-vars","'wave' is defined but never used.","Identifier","unusedVar","'meditateIconLarge' is defined but never used.","'authLinks' is assigned a value but never used.","'guestLinks' is assigned a value but never used.",["439"],["440"],["439"],["440"],"'api' is defined but never used.","'REGISTER_FAIL' is defined but never used.","'DifferentFoods' is assigned a value but never used.",["439"],["440"],"'Clouds' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Component' is defined but never used.","'Link' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'render' is defined but never used.","'Nav' is defined but never used.","'NavLink' is defined but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'withRouter' is defined but never used.","'Meditate' is defined but never used.","'Motivate' is defined but never used.","'Plan' is defined but never used.","'Plan2' is defined but never used.","'TestPlanSubmit' is defined but never used.","'Helpcenter' is defined but never used.","'Settings' is defined but never used.","'Termsconditions' is defined but never used.","'Privacy' is defined but never used.","'Login' is defined but never used.","'Signup' is defined but never used.","'Register' is defined but never used.","'CalendarPage' is defined but never used.","'LOGOUT' is defined but never used.","'connect' is defined but never used.","'PropTypes' is defined but never used.","'Calendar' is defined but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","'lastblockvisited' is assigned a value but never used.","'planjournal' is assigned a value but never used.","'stayedontrack' is assigned a value but never used.","'planbadblock' is assigned a value but never used.","'what2change' is assigned a value but never used.","'influencedeating' is assigned a value but never used.","'whathappened' is assigned a value but never used.","'somethingelsebad' is assigned a value but never used.","'plangoal' is assigned a value but never used.","'plangoal2' is assigned a value but never used.","'plangoal3' is assigned a value but never used.","'plangoal4' is assigned a value but never used.","'Testpopuptwo' is defined but never used.","'Videomodal' is defined but never used.","'Videoselection' is defined but never used.","'Fragment' is defined but never used.",["439"],["440"],["439"],["440"],"'d3' is defined but never used.","'chartTrendline' is defined but never used.","'React' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'differenceInCalendarDays' is defined but never used.","'FacebookLogin' is defined but never used.","'Image' is defined but never used.","'setLogin' is assigned a value but never used.","'setData' is assigned a value but never used.","'picture' is assigned a value but never used.","'setPicture' is assigned a value but never used.","'peskyPatterns' is defined but never used.","'mountainstream' is defined but never used.","no-global-assign","no-unsafe-negation"]