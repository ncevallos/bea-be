<<<<<<< Updated upstream
[{"/Users/anders/Bea Public/bea-be/client/src/reportWebVitals.js":"1","/Users/anders/Bea Public/bea-be/client/src/components/layout/Settings.js":"2","/Users/anders/Bea Public/bea-be/client/src/components/layout/Termsconditions.js":"3","/Users/anders/Bea Public/bea-be/client/src/components/layout/Alert.js":"4","/Users/anders/Bea Public/bea-be/client/src/actions/types.js":"5","/Users/anders/Bea Public/bea-be/client/src/components/layout/Navbar.js":"6","/Users/anders/Bea Public/bea-be/client/src/components/layout/Meditate.js":"7","/Users/anders/Bea Public/bea-be/client/src/components/layout/Sidebar.js":"8","/Users/anders/Bea Public/bea-be/client/src/utils/setAuthToken.js":"9","/Users/anders/Bea Public/bea-be/client/src/index.js":"10","/Users/anders/Bea Public/bea-be/client/src/components/layout/Motivate.js":"11","/Users/anders/Bea Public/bea-be/client/src/components/layout/Privacy.js":"12","/Users/anders/Bea Public/bea-be/client/src/components/auth/Signup.js":"13","/Users/anders/Bea Public/bea-be/client/src/components/auth/Login.js":"14","/Users/anders/Bea Public/bea-be/client/src/reducers/auth.js":"15","/Users/anders/Bea Public/bea-be/client/src/App.js":"16","/Users/anders/Bea Public/bea-be/client/src/components/layout/Helpcenter.js":"17","/Users/anders/Bea Public/bea-be/client/src/actions/auth.js":"18"},{"size":362,"mtime":1610912216936,"results":"19","hashOfConfig":"20"},{"size":326,"mtime":1610912216928,"results":"21","hashOfConfig":"20"},{"size":354,"mtime":1610912216928,"results":"22","hashOfConfig":"20"},{"size":438,"mtime":1610912216926,"results":"23","hashOfConfig":"20"},{"size":1058,"mtime":1613400836845,"results":"24","hashOfConfig":"20"},{"size":19368,"mtime":1613668036279,"results":"25","hashOfConfig":"20"},{"size":2718,"mtime":1613406484541,"results":"26","hashOfConfig":"20"},{"size":3179,"mtime":1612050217577,"results":"27","hashOfConfig":"20"},{"size":313,"mtime":1610912216937,"results":"28","hashOfConfig":"20"},{"size":547,"mtime":1610912216936,"results":"29","hashOfConfig":"20"},{"size":1690,"mtime":1613400836855,"results":"30","hashOfConfig":"20"},{"size":330,"mtime":1610912216928,"results":"31","hashOfConfig":"20"},{"size":1618,"mtime":1610912216926,"results":"32","hashOfConfig":"20"},{"size":2613,"mtime":1613400836846,"results":"33","hashOfConfig":"20"},{"size":1642,"mtime":1613400836856,"results":"34","hashOfConfig":"20"},{"size":4152,"mtime":1613406505534,"results":"35","hashOfConfig":"20"},{"size":333,"mtime":1610912216927,"results":"36","hashOfConfig":"20"},{"size":1849,"mtime":1613400836845,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"h5fu5g",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anders/Bea Public/bea-be/client/src/reportWebVitals.js",[],["80","81"],"/Users/anders/Bea Public/bea-be/client/src/components/layout/Settings.js",[],"/Users/anders/Bea Public/bea-be/client/src/components/layout/Termsconditions.js",[],"/Users/anders/Bea Public/bea-be/client/src/components/layout/Alert.js",[],"/Users/anders/Bea Public/bea-be/client/src/actions/types.js",[],["82","83"],"/Users/anders/Bea Public/bea-be/client/src/components/layout/Navbar.js",["84","85"],"/Users/anders/Bea Public/bea-be/client/src/components/layout/Meditate.js",["86","87"],"/Users/anders/Bea Public/bea-be/client/src/components/layout/Sidebar.js",["88"],"import React from 'react'\nimport { Link, NavLink } from 'react-router-dom';\nimport dashicon from '../../img/dashboard-icon.svg';\nimport meditateicon from '../../img/meditate-icon.svg';\nimport motivateicon from '../../img/motivate-icon.svg';\nimport planicon from '../../img/plan-icon.svg';\n\nexport const Sidebar = () => {\n    return (\n\n        <div className=\"flex-grow w-full mx-auto lg:px-0 flex\">\n        <div className=\"flex-1 min-w-0 lg:flex\">\n        <div className=\"fixed flex lg:top-16 lg:left-0 lg:w-52 w-full h-auto bottom-0 lg:h-full md:flex-shrink-0 py-0 bg-beaGrey content-center border-t lg:border-r border-gray-200 z-50\">\n          <div className=\"flex lg:py-0 px-0 content-center w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex space-y-8 w-full items-center lg:items-start lg:justify-start\">\n                <div className=\"flex lg:flex-col xl:flex-col sm:flex-row space-y-0 space-x-0 lg:space-x-0 lg:space-y-1 lg:justify-start w-full justify-between px-0 lg:px-0\">\n                  <NavLink to='/Dashboard' className=\"group lg:w-full p-3 lg:px-5 px-2.5 transition-bg hover:no-underline\">\n                    <div className=\"flex flex-col lg:flex-row items-center lg:space-x-2 lg:transition-transform lg:transform lg:group-hover:scale-105\">\n                      <img src={dashicon} className=\"w-6\" alt='Dashboard'/>\n                      <span className=\"text-sm text-beaTextGrey font-medium\">Dashboard</span>\n                    </div>\n                  </NavLink>\n                  <NavLink to='/Plan' className=\"group lg:w-full p-3 lg:px-5 px-2.5 transition-bg hover:no-underline\">\n                    <div className=\"flex flex-col lg:flex-row items-center lg:space-x-2 lg:transition-transform lg:transform lg:group-hover:scale-105\">\n                      <img src={planicon} className=\"w-6\" alt='Plan' />\n                      <span className=\"text-sm text-beaTextGrey font-medium\">Plan</span>\n                    </div>\n                  </NavLink>\n                  <NavLink to='/Motivate' className=\"group lg:w-full p-3 lg:px-5 px-2.5 transition-bg hover:no-underline\">\n                    <div className=\"flex flex-col lg:flex-row items-center lg:space-x-2 lg:transition-transform lg:transform lg:group-hover:scale-105\">\n                      <img src={motivateicon} className=\"w-6\" alt='Motivate'/>\n                      <span className=\"text-sm text-beaTextGrey font-medium\">Motivate</span>\n                    </div>\n                  </NavLink>\n                  <NavLink to='/Meditate' className=\"group lg:w-full p-3 lg:px-5 px-2.5 transition-bg hover:no-underline\">\n                    <div className=\"flex flex-col lg:flex-row items-center lg:space-x-2 lg:transition-transform lg:transform lg:group-hover:scale-105\">\n                      <img src={meditateicon} className=\"w-6\" alt='Meditate'/>\n                      <span className=\"text-sm text-beaTextGrey font-medium\">Meditate</span>\n                    </div>\n                  </NavLink>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        </div></div>\n    )\n}\n\nexport default Sidebar;",["89","90"],"/Users/anders/Bea Public/bea-be/client/src/utils/setAuthToken.js",[],"/Users/anders/Bea Public/bea-be/client/src/index.js",[],"/Users/anders/Bea Public/bea-be/client/src/components/layout/Motivate.js",["91","92","93"],"/Users/anders/Bea Public/bea-be/client/src/components/layout/Privacy.js",[],"/Users/anders/Bea Public/bea-be/client/src/components/auth/Signup.js",[],"/Users/anders/Bea Public/bea-be/client/src/components/auth/Login.js",[],"/Users/anders/Bea Public/bea-be/client/src/reducers/auth.js",["94"],"/Users/anders/Bea Public/bea-be/client/src/App.js",["95","96","97"],"import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Sidebar from './components/layout/Sidebar';\nimport Footer from './components/layout/Footer';\nimport Dashboard from './components/layout/Dashboard';\nimport Meditate from './components/layout/Meditate';\nimport Motivate from './components/layout/Motivate';\nimport Plan from './components/layout/Plan';\nimport Helpcenter from './components/layout/Helpcenter';\nimport Settings from './components/layout/Settings';\nimport Termsconditions from './components/layout/Termsconditions';\nimport Privacy from './components/layout/Privacy';\nimport Alert from './components/layout/Alert';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport Register from './components/auth/Register';\nimport { LOGOUT } from './actions/types';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\nconst App = () => {\n  // useEffect(() => {\n  //   // check for token in LS\n\n  //   store.dispatch(loadUser());\n\n  //   // log user out from all tabs if they log out in one tab\n  //   // window.addEventListener('storage', () => {\n  //   //   if (!localStorage.token) store.dispatch({ type: LOGOUT });\n  //   // });\n  // }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n        <Sidebar/>\n        <section >\n      <div className=\"flex-grow w-full mx-auto lg:px-0 flex\">\n      <div className=\"flex-1 min-w-0 lg:flex\">\n      <div className=\"bg-white lg:min-w-0 lg:flex-1 z-20 lg:ml-52 mt-16\">\n\n              <div className=\"flex px-0 py-0\">\n              <div className=\"flex flex-col w-full\">\n  \n  \n                  <div className=\"mb-2\">\n          <Alert />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route exact path='/dashboard' component={Dashboard} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/meditate\" component={Meditate} />\n            <Route exact path=\"/motivate\" component={Motivate} />\n            <Route exact path=\"/plan\" component={Plan} />\n            <Route exact path=\"/privacy\" component={Privacy} />\n            <Route exact path=\"/termsconditions\" component={Termsconditions} />\n            <Route exact path=\"/helpcenter\" component={Helpcenter} />\n            <Route exact path=\"/settings\" component={Settings} />\n            <Route exact path=\"/register\" component={Register} />\n          </Switch>\n          </div>\n              </div>\n              </div>\n          </div>\n          </div>\n          </div>\n      </section>\n        <Footer/>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\n\n// const App = () =>\n//   <Provider store={store}>\n//     <Router>\n//       <Fragment>\n//         <Navbar/>\n//         <Sidebar/>\n//         <section className=\"sbspace\">\n//           <Alert />\n//           <Switch>\n//             <Route exact path='/' component={Dashboard} />\n//             <Route exact path=\"/login\" component={Login} />\n//             <Route exact path=\"/signup\" component={Signup} />\n//             <Route exact path=\"/meditate\" component={Meditate} />\n//             <Route exact path=\"/motivate\" component={Motivate} />\n//             <Route exact path=\"/plan\" component={Plan} />\n//             <Route exact path=\"/privacy\" component={Privacy} />\n//             <Route exact path=\"/termsconditions\" component={Termsconditions} />\n//             <Route exact path=\"/helpcenter\" component={Helpcenter} />\n//             <Route exact path=\"/settings\" component={Settings} />\n//             <Route exact path=\"/register\" component={Register} />\n//           </Switch>\n//         </section>\n//         <Footer/>\n//       </Fragment>\n//       </Router>\n//     </Provider>\n\nexport default App;",["98","99"],"/Users/anders/Bea Public/bea-be/client/src/components/layout/Helpcenter.js",[],"/Users/anders/Bea Public/bea-be/client/src/actions/auth.js",["100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"101","replacedBy":"105"},{"ruleId":"103","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":12},{"ruleId":"107","severity":1,"message":"111","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":34,"column":170,"nodeType":"114","endLine":34,"endColumn":191},{"ruleId":"115","severity":1,"message":"116","line":41,"column":21,"nodeType":"117","endLine":41,"endColumn":66},{"ruleId":"107","severity":1,"message":"118","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"101","replacedBy":"119"},{"ruleId":"103","replacedBy":"120"},{"ruleId":"107","severity":1,"message":"121","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":20},{"ruleId":"107","severity":1,"message":"122","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":18},{"ruleId":"107","severity":1,"message":"123","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":20,"column":1,"nodeType":"126","endLine":78,"endColumn":2},{"ruleId":"107","severity":1,"message":"127","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"128","line":19,"column":10,"nodeType":"109","messageId":"110","endLine":19,"endColumn":16},{"ruleId":"107","severity":1,"message":"129","line":23,"column":10,"nodeType":"109","messageId":"110","endLine":23,"endColumn":18},{"ruleId":"101","replacedBy":"130"},{"ruleId":"103","replacedBy":"131"},{"ruleId":"107","severity":1,"message":"128","line":11,"column":3,"nodeType":"109","messageId":"110","endLine":11,"endColumn":9},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],["132"],["133"],"no-unused-vars","'wave' is defined but never used.","Identifier","unusedVar","'meditateIconLarge' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.",["132"],["133"],"'Testpopuptwo' is defined but never used.","'Videomodal' is defined but never used.","'Videoselection' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","'LOGOUT' is defined but never used.","'loadUser' is defined but never used.",["132"],["133"],"no-global-assign","no-unsafe-negation"]
=======
[{"/Users/ncevallos/Documents/Apps/bea/client/src/index.js":"1","/Users/ncevallos/Documents/Apps/bea/client/src/store.js":"2","/Users/ncevallos/Documents/Apps/bea/client/src/utils/setAuthToken.js":"3","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Dashboard.js":"4","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Privacy.js":"5","/Users/ncevallos/Documents/Apps/bea/client/src/components/auth/Login.js":"6","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Plan.js":"7","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Meditate.js":"8","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Videomodal.js":"9","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Videoselection.js":"10","/Users/ncevallos/Documents/Apps/bea/client/src/reducers/auth.js":"11","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Motivate.js":"12","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/ActionProvider.js":"13","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/PlanningIntro.js":"14","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/StretchMsgorVoice.js":"15","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/FeelBest3.js":"16","/Users/ncevallos/Documents/Apps/bea/client/src/reportWebVitals.js":"17","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Helpcenter.js":"18","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Termsconditions.js":"19","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Alert.js":"20","/Users/ncevallos/Documents/Apps/bea/client/src/components/auth/Register.js":"21","/Users/ncevallos/Documents/Apps/bea/client/src/utils/api.js":"22","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/MessageParser.js":"23","/Users/ncevallos/Documents/Apps/bea/client/src/reducers/index.js":"24","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/FullnessFeel.js":"25","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/FeelBest1.js":"26","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/FullnessLength.js":"27","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/InitialEatingFeel.js":"28","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/HowTempted.js":"29","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/StartMindfulness.js":"30","/Users/ncevallos/Documents/Apps/bea/client/src/reducers/alert.js":"31","/Users/ncevallos/Documents/Apps/bea/client/src/actions/types.js":"32","/Users/ncevallos/Documents/Apps/bea/client/src/components/auth/Signup.js":"33","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/AfterEatingLength.js":"34","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/MotivateAfterOptions.js":"35","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/MotivateAfter.js":"36","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Navbar.js":"37","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Sidebar.js":"38","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/MeditateVidSection.js":"39","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/PlanningLength.js":"40","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/Visualization.js":"41","/Users/ncevallos/Documents/Apps/bea/client/src/actions/auth.js":"42","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Footer.js":"43","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/config.js":"44","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/PlanningFeel.js":"45","/Users/ncevallos/Documents/Apps/bea/client/src/App.js":"46","/Users/ncevallos/Documents/Apps/bea/client/src/actions/alert.js":"47","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Testpopuptwo.js":"48","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/FeelBest2.js":"49","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Settings.js":"50","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/InitialEatingLength.js":"51","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/plan/MessageParser.js":"52","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/plan/Options.js":"53","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/plan/ActionProvider.js":"54","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/plan/config.js":"55","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/AreyouReady.js":"56","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Plan2.js":"57","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/AfterEatingFeel.js":"58"},{"size":547,"mtime":1606264053504,"results":"59","hashOfConfig":"60"},{"size":394,"mtime":1606353974571,"results":"61","hashOfConfig":"60"},{"size":313,"mtime":1609952887607,"results":"62","hashOfConfig":"60"},{"size":281,"mtime":1612808075598,"results":"63","hashOfConfig":"60"},{"size":330,"mtime":1606338332508,"results":"64","hashOfConfig":"60"},{"size":2613,"mtime":1612884103298,"results":"65","hashOfConfig":"60"},{"size":439,"mtime":1612808035237,"results":"66","hashOfConfig":"60"},{"size":2820,"mtime":1613494892204,"results":"67","hashOfConfig":"60"},{"size":1594,"mtime":1611681206456,"results":"68","hashOfConfig":"60"},{"size":2331,"mtime":1612194920312,"results":"69","hashOfConfig":"60"},{"size":1656,"mtime":1613655712551,"results":"70","hashOfConfig":"60"},{"size":1690,"mtime":1613444982132,"results":"71","hashOfConfig":"60"},{"size":16246,"mtime":1612193697948,"results":"72","hashOfConfig":"60"},{"size":512,"mtime":1612054695320,"results":"73","hashOfConfig":"60"},{"size":595,"mtime":1612191257846,"results":"74","hashOfConfig":"60"},{"size":805,"mtime":1611940789910,"results":"75","hashOfConfig":"60"},{"size":362,"mtime":1606258664847,"results":"76","hashOfConfig":"60"},{"size":333,"mtime":1606329034929,"results":"77","hashOfConfig":"60"},{"size":354,"mtime":1606338325108,"results":"78","hashOfConfig":"60"},{"size":438,"mtime":1609952668089,"results":"79","hashOfConfig":"60"},{"size":3129,"mtime":1612884159531,"results":"80","hashOfConfig":"60"},{"size":659,"mtime":1612990065853,"results":"81","hashOfConfig":"60"},{"size":1551,"mtime":1612029975045,"results":"82","hashOfConfig":"60"},{"size":153,"mtime":1609952796131,"results":"83","hashOfConfig":"60"},{"size":836,"mtime":1611939454790,"results":"84","hashOfConfig":"60"},{"size":751,"mtime":1611940878911,"results":"85","hashOfConfig":"60"},{"size":877,"mtime":1612054695183,"results":"86","hashOfConfig":"60"},{"size":871,"mtime":1611938530423,"results":"87","hashOfConfig":"60"},{"size":817,"mtime":1611937187939,"results":"88","hashOfConfig":"60"},{"size":524,"mtime":1611941288524,"results":"89","hashOfConfig":"60"},{"size":371,"mtime":1609952818320,"results":"90","hashOfConfig":"60"},{"size":1055,"mtime":1612989879597,"results":"91","hashOfConfig":"60"},{"size":1668,"mtime":1613653726222,"results":"92","hashOfConfig":"60"},{"size":848,"mtime":1611939483570,"results":"93","hashOfConfig":"60"},{"size":665,"mtime":1612193705734,"results":"94","hashOfConfig":"60"},{"size":512,"mtime":1612193165478,"results":"95","hashOfConfig":"60"},{"size":18549,"mtime":1612993009592,"results":"96","hashOfConfig":"60"},{"size":3669,"mtime":1613495319528,"results":"97","hashOfConfig":"60"},{"size":5095,"mtime":1612194197715,"results":"98","hashOfConfig":"60"},{"size":887,"mtime":1612054695183,"results":"99","hashOfConfig":"60"},{"size":516,"mtime":1612191524448,"results":"100","hashOfConfig":"60"},{"size":1939,"mtime":1612990174571,"results":"101","hashOfConfig":"60"},{"size":1274,"mtime":1611676129427,"results":"102","hashOfConfig":"60"},{"size":4337,"mtime":1613444882290,"results":"103","hashOfConfig":"60"},{"size":861,"mtime":1612054695215,"results":"104","hashOfConfig":"60"},{"size":4249,"mtime":1613499550064,"results":"105","hashOfConfig":"60"},{"size":342,"mtime":1609952510258,"results":"106","hashOfConfig":"60"},{"size":1223,"mtime":1611687097428,"results":"107","hashOfConfig":"60"},{"size":751,"mtime":1612054695182,"results":"108","hashOfConfig":"60"},{"size":326,"mtime":1606329011011,"results":"109","hashOfConfig":"60"},{"size":872,"mtime":1612192304494,"results":"110","hashOfConfig":"60"},{"size":1551,"mtime":1613434740516,"results":"111","hashOfConfig":"60"},{"size":13682,"mtime":1613443320342,"results":"112","hashOfConfig":"60"},{"size":25249,"mtime":1613443540857,"results":"113","hashOfConfig":"60"},{"size":4153,"mtime":1613444836036,"results":"114","hashOfConfig":"60"},{"size":510,"mtime":1611849997693,"results":"115","hashOfConfig":"60"},{"size":2249,"mtime":1613670196135,"results":"116","hashOfConfig":"60"},{"size":857,"mtime":1612054695183,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1eq851j",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"166"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"134"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"120"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"/Users/ncevallos/Documents/Apps/bea/client/src/index.js",[],["253","254"],"/Users/ncevallos/Documents/Apps/bea/client/src/store.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/utils/setAuthToken.js",[],["255","256"],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Dashboard.js",["257"],"import React from 'react'\nimport Login from '../auth/Login';\n\nexport const Dashboard = () => {\n    return (\n        <div className=\"block\">\n        <div>\n            \n            <p>This is the Dashboard Page</p>\n        </div>\n    </div>\n      \n\n    )\n}\n\nexport default Dashboard;",["258","259"],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Privacy.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/auth/Login.js",[],["260","261"],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Plan.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Meditate.js",["262","263","264"],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Videomodal.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Videoselection.js",["265"],"import React from 'react'\nimport 'reactjs-popup/dist/index.css';\nimport Videomodal from './Videomodal';\n\n\nclass Videoselection extends React.Component {\n// export const Videoselection = (props) => {\n    state = {\n        show: false\n      };\n      showModal = e => {\n        this.setState({\n          show: !this.state.show\n        });\n      };\n      onClose = e => {\n        this.props.onClose && this.props.onClose(e);\n      };\n\n  render() {\n    return (\n        <li className=\"col-span-1 flex flex-col text-center bg-white rounded-lg\">\n            {/* <div  onClick={() => {alert(\"Hello from here\")}}> */}\n            <div id=\"1\" onClick={e => {\n                this.showModal(e.target.id);\n            }}>\n            <div id=\"{this.props.id}\" className=\"flex-1 flex flex-col p-8 bg-beaLightBlue rounded-lg h-40\">\n\n            </div>\n            <div>\n                <div className=\"-mt-px flex divide-x divide-gray-200\">\n                <div className=\"w-0 flex-1 flex relative -mr-px w-0 flex-1 inline-flex items-center justify-start py-4 text-sm text-gray-700 font-medium border-none border-transparent rounded-bl-lg hover:text-gray-500\">\n                    <button type=\"button\" className=\"relative inline-flex items-center px-3 transition-all py-3 border border-transparent text-sm font-medium border border-beaDarkPurple rounded-full text-beaDarkPurple group-hover:bg-beaDarkPurple group-hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                    <svg className=\"w-3.5 h-3.5\" fill=\"currentColor\" viewBox=\"0 0 24 24\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 210 210\">\n                        <path d=\"M179.07,105L30.93,210V0L179.07,105z\"/>\n                    </svg>            \n                    </button> \n                    <div className=\"flex flex-col ml-3\">\n                        <span className=\"text-left\">{this.props.title}</span>\n                        <span className=\"text-left\">{this.props.length}</span>\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n\n            <Videomodal onClose={this.showModal} show={this.state.show} title={this.props.title} length={this.props.length}/>\n        </li>\n    )}\n}\n\n\nexport default Videoselection;","/Users/ncevallos/Documents/Apps/bea/client/src/reducers/auth.js",["266"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  //LOGIN_FAIL,\n  LOGOUT,\n  // ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n      case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n      case AUTH_ERROR:\n      case REGISTER_FAIL:\n      case LOGIN_FAIL:\n      case LOGOUT:\n        localStorage.removeItem('token');\n        return {\n          ...state,\n          // ...payload,\n          token: null,\n          isAuthenticated: false,\n          loading: false\n        };\n    // case LOGIN_SUCCESS:\n    //   return {\n    //     ...state,\n    //     ...payload,\n    //     isAuthenticated: true,\n    //     loading: false\n    //   };\n    // case ACCOUNT_DELETED:\n    //   return {\n    //     ...state,\n    //     token: null,\n    //     isAuthenticated: false,\n    //     loading: false,\n    //     user: null\n    //   };\n    // case AUTH_ERROR:\n    // case LOGOUT:\n      // return {\n      //   ...state,\n      //   token: null,\n      //   isAuthenticated: false,\n      //   loading: false,\n      //   user: null\n      // };\n    default:\n      return state;\n  }\n}\n","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Motivate.js",["267","268","269"],"import React from 'react'\nimport { Component } from 'react';\nimport Testpopuptwo from \"./Testpopuptwo\"; \nimport Videomodal from './Videomodal';\nimport Videoselection from './Videoselection';\nimport Chatbot from 'react-chatbot-kit'\n\n\nimport ActionProvider from '../chatbots/motivate/ActionProvider';\nimport MessageParser from '../chatbots/motivate/MessageParser';\nimport config from '../chatbots/motivate/config';\n\nclass Motivate extends Component {\n    state = {\n        show: false\n      };\n      showModal = e => {\n        this.setState({\n          show: !this.state.show\n        });\n      };\n      onClose = e => {\n        this.props.onClose && this.props.onClose(e);\n      };\n    render() {\n    return (\n\n                    <div className=\"block\">\n                        <div>\n                        <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                            \n                            <p>This is the Motivate Page</p>\n                            <Chatbot config={config} actionProvider={ActionProvider} \t    messageParser={MessageParser} />\n                            {/* <Testpopuptwo/>\n                            <button  onClick={e => {\n                                this.showModal();\n                            }}\n                            > show Modal </button> */}\n                            {/* <Videoselection  onClick={e => {\n                                this.showModal();\n                            }} /> */}\n                            {/* <Videomodal onClose={this.showModal} show={this.state.show} /> */}\n                        </nav>\n                        </div>\n                    </div>\n    )}\n}\n\nexport default Motivate;","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/ActionProvider.js",["270"],"import React from 'react'\n\n// ActionProvider starter code\nclass ActionProvider {\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n      this.createChatBotMessage = createChatBotMessage;\n      this.setState = setStateFunc;\n      this.createClientMessage = createClientMessage;\n    }\n    greet() {\n        const greetingMessage = this.createChatBotMessage(\"Hello friend\");\n        this.updateChatbotState(greetingMessage)\n    }\n    handleLetsBegin = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`To start, let’s Rate how you are currently feeling.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`How tempted are you to eat in a way that isn't ideal for you right now?`, {\n            delay: 4000,\n            widget: \"howtempted\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    handleHowTempted = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`To start, let’s Rate how you are currently feeling.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`How tempted are you to eat in a way that isn't ideal for you right now?`, {\n            delay: 4000,\n            widget: \"howtempted\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    notAtAll = () => {\n        const notAtAllMessage = \n        [this.createChatBotMessage(`I'm so glad to hear that. 🏆 Keep up the good work!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Let’s do a Visualization anyways to make sure you stay on this positive path.`, {\n            delay: 4000,\n            widget: \"visualization\",\n        })];\n        this.addMessageToBotState(notAtAllMessage)\n    }\n    slightSomewhat = () => {\n        const slightSomewhatMessage = \n        [this.createChatBotMessage(`So you are a little bit tempted right now, but it’s okay, I’m here to help!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Let’s do a Visualization to help you quell your craving.`, {\n            delay: 4000,\n            widget: \"visualization\",\n        })];\n        this.addMessageToBotState(slightSomewhatMessage)\n    }\n    veryExtremely = () => {\n        const veryExtremelyMessage = \n        [this.createChatBotMessage(`Oh no - I'm sorry to hear that. 🙁`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`But that's okay. I'm here to help!`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Let’s do our daily Visualization to help you feel more in control of your eating.`, {\n            delay: 6000,\n            widget: \"visualization\",\n        })];\n        this.addMessageToBotState(veryExtremelyMessage)\n    }\n    visualization = () => {\n        const visualizationMessage = \n        [this.createChatBotMessage(`A Visualization helps you evaluate how you will feel if you make a particular food choice.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This often makes it easier to control your urges.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Your Visualization for the day is: Evaluating Moods`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`This Visualization will help you weigh the emotional costs and benefits of eating different foods.`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`First, take a moment to think about what you’re planning to eat next.`, {\n            delay: 12000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready.`, {\n            delay: 14000,\n            widget: \"planningIntro\",\n        })];\n        this.addMessageToBotState(visualizationMessage)\n    }\n    // evaluatingMoods = () => {\n    //     const evaluatingMoodsMessage = \n    //     [this.createChatBotMessage(`Your Visualization for the day is: Evaluating Moods`, {\n    //         delay: 2000,\n    //     }),\n    //     this.createChatBotMessage(`This Visualization will help you weigh the emotional costs and benefits of eating different foods.`, {\n    //         delay: 4000,\n    //     }),\n    //     this.createChatBotMessage(`First, take a moment to think about what you’re planning to eat next.`, {\n    //         delay: 6000,\n    //     }),\n    //     this.createChatBotMessage(`Let me know when you’re ready.`, {\n    //         delay: 8000,\n    //         widget: \"planningIntro\",\n    //     })];\n    //     this.addMessageToBotState(evaluatingMoodsMessage)\n    // }\n    planningPhase = () => {\n        const planningPhaseMessage = \n        [this.createChatBotMessage(`Great! What are you planning to eat? Please type below: FOR TEST PURPOSES THIS IS NOT YET IMPLEMENTED`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Keeping that food in mind, let’s answer a few questions:`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`How do you feel during the Planning Phase, from when you first start thinking about food up until you take the first bite?`, {\n            delay: 6000,\n            widget: \"planningFeel\",\n        })];\n        this.addMessageToBotState(planningPhaseMessage)\n    }\n    planningPhaseLength = () => {\n        const planningPhaseLengthMessage = \n        [this.createChatBotMessage(`How long does your Planning Phase generally last?`, {\n            delay: 2000,\n            widget: \"planningLength\",\n        })];\n        this.addMessageToBotState(planningPhaseLengthMessage)\n    }\n    initialEatingIntro = () => {\n        const initialEatingIntroMessage = \n        [this.createChatBotMessage(`Now let's focus on the Initial Eating Phase.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This is the time from when you take your first bite of food up until when you first start to feel full.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Continuing to imagine what you were planning to eat, how do you think you’d feel during this time?`, {\n            delay: 6000,\n            widget: \"initialEatingFeel\",\n        })];\n        this.addMessageToBotState(initialEatingIntroMessage)\n    }\n    initialEatingLength = () => {\n        const initialEatingLengthMessage = \n        [this.createChatBotMessage(`How long do you think your Initial Eating Phase would last?`, {\n            delay: 2000,\n            widget: \"initialEatingLength\",\n        })];\n        this.addMessageToBotState(initialEatingLengthMessage)\n    }\n    fullnessIntro = () => {\n        const fullnessIntroMessage = \n        [this.createChatBotMessage(`Next, let's focus on the Fullness Phase.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This is the time when you continue to eat after you are comfortably full.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`How do you imagine you’d feel during this time?`, {\n            delay: 6000,\n            widget: \"fullnessFeel\",\n        })];\n        this.addMessageToBotState(fullnessIntroMessage)\n    }\n    fullnessLength = () => {\n        const fullnessLengthMessage = \n        [this.createChatBotMessage(`How long do you think your Fullness Phase would last?`, {\n            delay: 2000,\n            widget: \"fullnessLength\",\n        })];\n        this.addMessageToBotState(fullnessLengthMessage)\n    }\n    afterEatingIntro = () => {\n        const afterEatingMessage = \n        [this.createChatBotMessage(`Lastly, let’s focus on the After Eating Phase — what happens after you stop eating and when you’re still feeling full.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`How do you imagine you’d feel during this time?`, {\n            delay: 4000,\n            widget: \"afterEatingFeel\",\n        })];\n        this.addMessageToBotState(afterEatingMessage)\n    }\n    afterEatingLength = () => {\n        const afterEatingLengthMessage = \n        [this.createChatBotMessage(`How long do you think you’d continue to feel full if you eat the food/foods you were planning to eat?`, {\n            delay: 2000,\n            widget: \"afterEatingLength\",\n        })];\n        this.addMessageToBotState(afterEatingLengthMessage)\n    }\n    feelBest1 = () => {\n        const feelBest1Message = \n        [this.createChatBotMessage(`If you decide to eat the food you listed previously, in which phase do you think you’d feel the best?`, {\n            delay: 2000,\n            widget: \"feelBest1\",\n        })];\n        this.addMessageToBotState(feelBest1Message)\n    }\n    feelBest2 = () => {\n        const feelBest2Message = \n        [this.createChatBotMessage(`In which phase would you feel the worst?`, {\n            delay: 2000,\n            widget: \"feelBest2\",\n        })];\n        this.addMessageToBotState(feelBest2Message)\n    }\n    feelBest3 = () => {\n        const feelBest3Message = \n        [this.createChatBotMessage(`Overall, how would you feel if you decide to eat the food you were planning to eat?`, {\n            delay: 2000,\n            widget: \"feelBest3\",\n        })];\n        this.addMessageToBotState(feelBest3Message)\n    }\n    feelBest4 = () => {\n        const feelBest4Message = \n        [this.createChatBotMessage(`Take a moment now to reflect on your answers.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`When you’re ready, we’ll move on to your Mindfulness Exercise for today.`, {\n            delay: 4000,\n            widget: \"startMindfulness\",\n        })];\n        this.addMessageToBotState(feelBest4Message)\n    }\n    mindfulness = () => {\n        const mindfulnessMessage = \n        [this.createChatBotMessage(`I have several different 1-minute Mindfulness Exercises we can do together.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`I’ll choose one at random, but you can always come back later to try a different one.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Your 1-minute mindfulness exercise for today is to STRETCH!`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Doesn't it feel good to stretch? 🤗`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`Would you prefer to do your Stretch Mindfulness Exercise by continuing to message with me or by listening to my voice?`, {\n            delay: 12000,\n            widget: \"stretchMsgorVoice\",\n        })];\n        this.addMessageToBotState(mindfulnessMessage)\n    }\n    stretchMessage = () => {\n        const stretchMessage = \n        [this.createChatBotMessage(`Take a slow, deep breath in . . .`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Stretch really, really slowly for at least 10 seconds.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`If you notice any tightness . . .`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`. . .  just say “ease” or \"hello\" to that place in your body.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Take another 20 seconds to stretch and notice any feeling of calmness in your body.`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`Now take your time to reorient yourself to the present.`, {\n            delay: 12000,\n        }),\n        this.createChatBotMessage(`And when you are ready, we will mindfully move forward.`, {\n            delay: 14000,\n            widget: \"motivateAfter\",\n        })];\n        this.addMessageToBotState(stretchMessage)\n    }\n    motivateAfter = () => {\n        const motivateAfterMessage = \n        [this.createChatBotMessage(`Thanks for taking the time to do this Motivational work!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`After doing these exercises, how do you feel about your ability to calm your cravings?`, {\n            delay: 4000,\n            widget: \"motivateAfterOptions\",\n        })];\n        this.addMessageToBotState(motivateAfterMessage)\n    }\n    thankYouDemo = () => {\n        const thankYouDemoMessage = \n        [this.createChatBotMessage(`Thanks for participating in this demo with me!`, {\n            delay: 2000,\n        })];\n        this.addMessageToBotState(thankYouDemoMessage)\n    }\n    nofoulwords() {\n        const nofoulwordsMessage = \n        [this.createChatBotMessage(`I can tell by what you just wrote that you are upset, and that is of course okay.`), \n        this.createChatBotMessage(`Sometimes our language is a genuine expression of how we feel.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`For these meditations, I have included metaphors and analogies to help you listen to your body and think about food differently.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`That being said, I work best when you just press buttons.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Please scroll up to the last place you could make a selection in order to continue.`, {\n            delay: 8000,\n        })];\n        // this.updateChatbotState(nofoulwordsMessage)\n        this.addMessageToBotState(nofoulwordsMessage)\n    }\n    dontunderstand() {\n        const dontunderstandMessage = \n        [this.createChatBotMessage(`🤔`), \n        this.createChatBotMessage(`My robot brain does not compute what you just wrote.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Scroll back up to the last place you could select a button in order to continue where we left off.`, {\n            delay: 4000,\n        })];\n        this.addMessageToBotState(dontunderstandMessage)\n    }\n    emergency() {\n        const emergencyMessage = \n        [this.createChatBotMessage(`Oh no! I'm so sorry to hear that you’re feeling so badly.`), \n        this.createChatBotMessage(`Please know that however down you feel, you are never alone.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Call the National Suicide Prevention Lifeline at 1-800-273-8255 to get help.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`If your need is more urgent, PLEASE call 911 right away or go to your nearest emergency room.`, {\n            delay: 6000,\n        })];\n        // this.updateChatbotState(emergencyMessage)\n        this.addMessageToBotState(emergencyMessage)\n    }\n    findtherapist() {\n        const therapyMessage = \n        [this.createChatBotMessage(`I'm glad you’re ready to take that step!`), \n        this.createChatBotMessage(`I've located a number of therapists in your area that specialize in issues with food and eating.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Please press below and I will redirect you.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`And if I can still be of help, we can continue at any time!`, {\n            delay: 6000,\n        })];\n        this.addMessageToBotState(therapyMessage)\n        // this.createChatBotMessage(\"I'm glad you’re ready to take that step!\");\n        // this.updateChatbotState(therapyMessage)\n    }\n    updateChatbotState(message) {\n \n        // NOTE: This function is set in the constructor, and is passed in      \n        // from the top level Chatbot component. The setState function here     \n        // actually manipulates the top level state of the Chatbot, so it's     \n        // important that we make sure that we preserve the previous state.\n         \n            \n           this.setState(prevState => ({\n                ...prevState, messages: [...prevState.messages, message]\n            }))\n          }\n    addMessageToBotState = (messages) => {\n            if (Array.isArray(messages)) {\n              this.setState((prevState) => ({\n                ...prevState,\n                messages: [...prevState.messages, ...messages],\n              }));\n            } else {\n              this.setState((prevState) => ({\n                ...prevState,\n                messages: [...prevState.messages, messages],\n              }));\n            }\n          };\n  }\n  \n  export default ActionProvider;\n",["271","272"],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/PlanningIntro.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/StretchMsgorVoice.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/FeelBest3.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/reportWebVitals.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Helpcenter.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Termsconditions.js",[],["273","274"],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Alert.js",[],["275","276"],"/Users/ncevallos/Documents/Apps/bea/client/src/components/auth/Register.js",["277"],"import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n\n                <div className=\"block\">\n                    <div>\n                        \n                <h1 className=\"large text-primary\">Sign Up</h1>\n                <p className=\"lead\">\n                  <i className=\"fas fa-user\" /> Create Your Account\n                </p>\n                <form className=\"form\" onSubmit={onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      name=\"name\"\n                      value={name}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"email\"\n                      placeholder=\"Email Address\"\n                      name=\"email\"\n                      value={email}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      name=\"password2\"\n                      value={password2}\n                      onChange={onChange}\n                    />\n                  </div>\n                  <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n                </form>\n                <p className=\"my-1\">\n                  Already have an account? <Link to=\"/login\">Sign In</Link>\n                </p>\n\n              </div>\n                </div>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);","/Users/ncevallos/Documents/Apps/bea/client/src/utils/api.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/MessageParser.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/reducers/index.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/FullnessFeel.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/FeelBest1.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/FullnessLength.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/InitialEatingFeel.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/HowTempted.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/StartMindfulness.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/reducers/alert.js",["278"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}","/Users/ncevallos/Documents/Apps/bea/client/src/actions/types.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/auth/Signup.js",["279","280","281","282","283","284"],"import React, {useState} from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport { Card, Image } from 'react-bootstrap';\n\nexport const Signup = ({register}) => {\n    const [login, setLogin] = useState(false);\n    const [data, setData] = useState({});\n    const [picture, setPicture] = useState('');\n  \n    // const responseFacebook = (response) => {\n    //   console.log(response);\n    //   setData(response);\n    //   if (response.accessToken) {\n    //     setLogin(true);\n    //     setPicture(response.picture.data.url);\n    //     console.log(\"Picture is ... \", response.picture.data.url);\n    //     console.log(\"Name is ... \", response.name);\n    //     console.log(\"ID is... \", response.id);\n    //     console.log(\"User ID is... \", response.userID);\n    //   } else {\n    //     setLogin(false);\n    //   }\n    // }\n  \n    return (\n      <div class=\"container\">\n        <Card style={{ width: '600px' }}>\n          {/* <Card.Header>\n            { !login && \n              <FacebookLogin\n                appId=\"1012841372568288\"\n                autoLoad={true}\n                fields=\"name,email,picture\"\n                scope=\"public_profile,user_friends\"\n                callback={responseFacebook}\n                icon=\"fa-facebook\" />\n            }\n            { login &&\n              <Image src={picture} roundedCircle />\n            }\n          </Card.Header> */}\n          { login &&\n            <Card.Body>\n              <Card.Title>{data.name}</Card.Title>\n              <Card.Text>\n                {data.email}\n              </Card.Text>\n            </Card.Body>\n          }\n        </Card>\n      </div>\n    );\n}\n\nexport default Signup;","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/AfterEatingLength.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/MotivateAfterOptions.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/MotivateAfter.js",[],["285","286"],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Navbar.js",["287","288"],"import React from 'react'\nimport logo from '../../img/logo.svg';\nimport Popup from 'reactjs-popup';\nimport wave from '../../img/dashboard-navbarwave.jpg';\nimport meditateIconLarge from '../../img/meditate-icon-large.svg';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst NavBar = ({auth: {isAuthenticated, loading }, logout}) => {\n    const authLinks = (\n        <Popup trigger={<button className=\"bg-indigo-700 flex text-sm rounded-full text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-700 focus:ring-white\" id=\"user-menu\" aria-haspopup=\"true\">\n        <span className=\"sr-only\">Open user menu</span>\n        <svg width=\"20px\" height=\"4px\" viewBox=\"0 0 20 4\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"Designs-for-Development\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                <g id=\"Meditate-Landing-(Paid-Member---recent)\" transform=\"translate(-1383.000000, -31.000000)\">\n                    <path d=\"M0,-1 L1440,-1 L1440,66 C1174.88262,66 1016.78219,66 965.698713,66 C889.073495,66 870.259441,23.70292 816,23.70292 C761.740559,23.70292 748.575215,66 653.741049,66 C590.518272,66 372.271256,66 -1,66 L0,-1 Z\" id=\"header\" fill=\"#AD79E2\"></path>\n                    <g id=\"more\" transform=\"translate(1383.000000, 31.000000)\" fill=\"#FFFFFF\">\n                        <circle id=\"Oval\" cx=\"2\" cy=\"2\" r=\"2\"></circle>\n                        <circle id=\"Oval-Copy\" cx=\"10\" cy=\"2\" r=\"2\"></circle>\n                        <circle id=\"Oval-Copy-2\" cx=\"18\" cy=\"2\" r=\"2\"></circle>\n                    </g>\n                </g>\n            </g>\n        </svg>\n\n\n        </button>} position=\"bottom right\">\n        <div className=\"px-2 pt-2 pb-3\">\n            <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-white bg-indigo-800\">Dashboard</Link>\n            <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Support</Link>\n        </div>\n        <div className=\"pt-4 pb-3 border-t border-indigo-800\">\n            <div className=\"px-2\">\n            <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Your Profile</Link>\n            <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Settings</Link>\n            {/* <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Sign out</Link> */}\n            <a onClick={logout} href='#!' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Sign Out</a>\n            </div>\n        </div>\n        </Popup>\n        );\n        const guestLinks = (\n            <Popup trigger={<button className=\"bg-indigo-700 flex text-sm rounded-full text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-700 focus:ring-white\" id=\"user-menu\" aria-haspopup=\"true\">\n            <span className=\"sr-only\">Open user menu</span>\n            <svg width=\"20px\" height=\"4px\" viewBox=\"0 0 20 4\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <g id=\"Designs-for-Development\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                    <g id=\"Meditate-Landing-(Paid-Member---recent)\" transform=\"translate(-1383.000000, -31.000000)\">\n                        <path d=\"M0,-1 L1440,-1 L1440,66 C1174.88262,66 1016.78219,66 965.698713,66 C889.073495,66 870.259441,23.70292 816,23.70292 C761.740559,23.70292 748.575215,66 653.741049,66 C590.518272,66 372.271256,66 -1,66 L0,-1 Z\" id=\"header\" fill=\"#AD79E2\"></path>\n                        <g id=\"more\" transform=\"translate(1383.000000, 31.000000)\" fill=\"#FFFFFF\">\n                            <circle id=\"Oval\" cx=\"2\" cy=\"2\" r=\"2\"></circle>\n                            <circle id=\"Oval-Copy\" cx=\"10\" cy=\"2\" r=\"2\"></circle>\n                            <circle id=\"Oval-Copy-2\" cx=\"18\" cy=\"2\" r=\"2\"></circle>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n    \n    \n            </button>} position=\"bottom right\">\n            <div className=\"px-2 pt-2 pb-3\">\n                <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-white bg-indigo-800\">Dashboard</Link>\n                <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Support</Link>\n                <Link to='/login' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Log In</Link>\n                <Link to='/register' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Sign Up</Link>\n            </div>\n            </Popup>\n            );\n    return ( \n        <nav className=\"fixed w-screen top-0 flex-shrink-0 bg-beaPurpleCorrected backdrop-blur bg-opacity-60 z-40 px-6\">\n        <div className=\"max-w-full mx-auto px-2 sm:px-4 lg:px-8\">\n        <div className=\"relative flex items-center justify-between h-16\">\n\n            <div className=\"flex items-center mr-9\">\n            <div className=\"flex-shrink-0lg:px-0\">\n                <img className=\"h-6 w-auto\" src={logo} alt=\"Workflow\" />\n            </div>\n            </div>\n\n            <div className=\"flex xl:hidden\">\n            <Popup trigger={<button className=\"inline-flex items-center justify-center p-2 rounded-md text-white hover:text-white hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-600 focus:ring-white\" aria-expanded=\"false\">\n                <span className=\"sr-only\">Open main menu</span>\n\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path></svg>\n\n                <svg className=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n\n            </button>} position=\"bottom right\">\n                {/* below here goes code for mobile menu  */}\n            <div className=\"px-2 pt-2 pb-3\">\n                        <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-white bg-indigo-800\">Dashboard</Link>\n                        <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Support</Link>\n                    </div>\n                    <div className=\"pt-4 pb-3 border-t border-indigo-800\">\n                        <div className=\"px-2\">\n                        <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Your Profile</Link>\n                        <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Settings</Link>\n                        <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Sign out</Link>\n                        </div>\n                    </div>\n                    </Popup>\n\n            </div>\n\n            <div className=\"hidden xl:block\">\n            <div className=\"flex items-center justify-end\">\n                <div className=\"flex\">\n                <Link to='/' className=\"px-8 py-2 rounded-md text-sm font-bold tracking-wide text-white hover:text-white\">Help Center</Link>\n                <Popup trigger={<div className=\"px-8 py-2 text-sm font-bold tracking-wide text-white hover:text-white cursor-pointer select-none\"> Settings</div>} position=\"bottom center\">\n                    <div className=\"origin-top-right fixed right-4 -mt-1 w-48 py-1 bg-white border-t-4 border-beaDarkPurple ring-inset ring-1 ring-beaBorderGrey divide-y divide-beaBorderGrey\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\n                        <div>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5 hover:no-underline\" role=\"menuitem\">How Bea Works</Link>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">About the Bea Team</Link>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Bea Chatter</Link>\n                            <Link to='/' className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">Contact Us</Link>\n                        </div>\n                        <div>\n                            <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                                <svg className=\"w-4 mr-1.5\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Facebook icon</title><path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/></svg>\n                                Facebook\n                            </Link>\n                            <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                                <svg className=\"w-4 mr-1.5\" role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Instagram icon</title><path d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z\"/></svg>\n                                Instagram\n                            </Link>\n                            <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                                <svg className=\"w-4 mr-1.5\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><title>Twitter icon</title><path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/></svg>\n                                Twitter\n                            </Link>\n                            <Link to='/' className=\"flex px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 mx-0.5\" role=\"menuitem\">\n                                <svg className=\"w-4 mr-1.5\" role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Pinterest icon</title><path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.162-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.401.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.354-.629-2.758-1.379l-.749 2.848c-.269 1.045-1.004 2.352-1.498 3.146 1.123.345 2.306.535 3.55.535 6.607 0 11.985-5.365 11.985-11.987C23.97 5.39 18.592.026 11.985.026L12.017 0z\"/></svg>\n                                Pinterest\n                            </Link>\n                        </div>\n                    </div> \n                </Popup>\n                </div>\n\n\n                <div className=\"ml-4 relative flex-shrink-0\">\n                <div>\n\n                        {/* Code below will render options depending on whether user is or isn't logged in */}\n                        { (<div>{ isAuthenticated ? authLinks : guestLinks }</div>)}\n                    {/* <Popup trigger={<button className=\"bg-indigo-700 flex text-sm rounded-full text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-indigo-700 focus:ring-white\" id=\"user-menu\" aria-haspopup=\"true\">\n                    <span className=\"sr-only\">Open user menu</span>\n                    <svg width=\"20px\" height=\"4px\" viewBox=\"0 0 20 4\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <g id=\"Designs-for-Development\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                            <g id=\"Meditate-Landing-(Paid-Member---recent)\" transform=\"translate(-1383.000000, -31.000000)\">\n                                <path d=\"M0,-1 L1440,-1 L1440,66 C1174.88262,66 1016.78219,66 965.698713,66 C889.073495,66 870.259441,23.70292 816,23.70292 C761.740559,23.70292 748.575215,66 653.741049,66 C590.518272,66 372.271256,66 -1,66 L0,-1 Z\" id=\"header\" fill=\"#AD79E2\"></path>\n                                <g id=\"more\" transform=\"translate(1383.000000, 31.000000)\" fill=\"#FFFFFF\">\n                                    <circle id=\"Oval\" cx=\"2\" cy=\"2\" r=\"2\"></circle>\n                                    <circle id=\"Oval-Copy\" cx=\"10\" cy=\"2\" r=\"2\"></circle>\n                                    <circle id=\"Oval-Copy-2\" cx=\"18\" cy=\"2\" r=\"2\"></circle>\n                                </g>\n                            </g>\n                        </g>\n                    </svg>\n\n\n                    </button>} position=\"bottom right\">\n                    <div className=\"px-2 pt-2 pb-3\">\n                        <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-white bg-indigo-800\">Dashboard</Link>\n                        <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Support</Link>\n                    </div>\n                    <div className=\"pt-4 pb-3 border-t border-indigo-800\">\n                        <div className=\"px-2\">\n                        <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Your Profile</Link>\n                        <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Settings</Link>\n                        <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Sign out</Link>\n                        </div>\n                    </div>\n                    </Popup> */}\n                </div>\n\n                </div>\n            </div>\n            </div> \n        </div>\n        </div>\n\n{/* \n        <div className=\"hidden lg:hidden\">\n        <div className=\"px-2 pt-2 pb-3\">\n            <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-white bg-indigo-800\">Dashboard</Link>\n            <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Support</Link>\n        </div>\n        <div className=\"pt-4 pb-3 border-t border-indigo-800\">\n            <div className=\"px-2\">\n            <Link to='/' className=\"block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Your Profile</Link>\n            <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Settings</Link>\n            <Link to='/' className=\"mt-1 block px-3 py-2 rounded-md text-base font-medium text-indigo-200 hover:text-indigo-100 hover:bg-indigo-600\">Sign out</Link>\n            </div>\n        </div>\n</div> */}\n        </nav>\n \n    )\n}\n\nNavBar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n  };\n  \nconst mapStateToProps = (state) => ({\n    auth: state.auth\n  });\n\nexport default connect(mapStateToProps, {logout})(NavBar);","/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Sidebar.js",["289"],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/MeditateVidSection.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/PlanningLength.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/Visualization.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/actions/auth.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Footer.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/config.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/PlanningFeel.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/App.js",["290","291","292"],"import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Sidebar from './components/layout/Sidebar';\nimport Footer from './components/layout/Footer';\nimport Dashboard from './components/layout/Dashboard';\nimport Meditate from './components/layout/Meditate';\nimport Motivate from './components/layout/Motivate';\nimport Plan from './components/layout/Plan';\nimport Plan2 from './components/layout/Plan2';\nimport Helpcenter from './components/layout/Helpcenter';\nimport Settings from './components/layout/Settings';\nimport Termsconditions from './components/layout/Termsconditions';\nimport Privacy from './components/layout/Privacy';\nimport Alert from './components/layout/Alert';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport Register from './components/auth/Register';\nimport { LOGOUT } from './actions/types';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\nconst App = () => {\n  // useEffect(() => {\n  //   // check for token in LS\n\n  //   store.dispatch(loadUser());\n\n  //   // log user out from all tabs if they log out in one tab\n  //   // window.addEventListener('storage', () => {\n  //   //   if (!localStorage.token) store.dispatch({ type: LOGOUT });\n  //   // });\n  // }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n        <Sidebar/>\n        <section >\n      <div className=\"flex-grow w-full mx-auto lg:px-0 flex\">\n      <div className=\"flex-1 min-w-0 lg:flex\">\n      <div className=\"bg-white lg:min-w-0 lg:flex-1 z-20 lg:ml-52 mt-16\">\n\n              <div className=\"flex\">\n              <div className=\"flex flex-col w-full\">\n  \n  \n                  <div className=\"mb-2\">\n          <Alert />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route exact path='/dashboard' component={Dashboard} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/meditate\" component={Meditate} />\n            <Route exact path=\"/motivate\" component={Motivate} />\n            <Route exact path=\"/plan\" component={Plan} />\n            <Route exact path=\"/plan2\" component={Plan2} />\n            <Route exact path=\"/privacy\" component={Privacy} />\n            <Route exact path=\"/termsconditions\" component={Termsconditions} />\n            <Route exact path=\"/helpcenter\" component={Helpcenter} />\n            <Route exact path=\"/settings\" component={Settings} />\n            <Route exact path=\"/register\" component={Register} />\n          </Switch>\n          </div>\n              </div>\n              </div>\n          </div>\n          </div>\n          </div>\n      </section>\n        <Footer/>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\n\n// const App = () =>\n//   <Provider store={store}>\n//     <Router>\n//       <Fragment>\n//         <Navbar/>\n//         <Sidebar/>\n//         <section className=\"sbspace\">\n//           <Alert />\n//           <Switch>\n//             <Route exact path='/' component={Dashboard} />\n//             <Route exact path=\"/login\" component={Login} />\n//             <Route exact path=\"/signup\" component={Signup} />\n//             <Route exact path=\"/meditate\" component={Meditate} />\n//             <Route exact path=\"/motivate\" component={Motivate} />\n//             <Route exact path=\"/plan\" component={Plan} />\n//             <Route exact path=\"/privacy\" component={Privacy} />\n//             <Route exact path=\"/termsconditions\" component={Termsconditions} />\n//             <Route exact path=\"/helpcenter\" component={Helpcenter} />\n//             <Route exact path=\"/settings\" component={Settings} />\n//             <Route exact path=\"/register\" component={Register} />\n//           </Switch>\n//         </section>\n//         <Footer/>\n//       </Fragment>\n//       </Router>\n//     </Provider>\n\nexport default App;","/Users/ncevallos/Documents/Apps/bea/client/src/actions/alert.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Testpopuptwo.js",["293","294"],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/FeelBest2.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Settings.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/InitialEatingLength.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/plan/MessageParser.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/plan/Options.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/plan/ActionProvider.js",["295","296","297","298","299","300","301"],"import React from 'react'\n\n// ActionProvider starter code\nclass ActionProvider {\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n      this.createChatBotMessage = createChatBotMessage;\n      this.setState = setStateFunc;\n      this.createClientMessage = createClientMessage;\n    }\n    greet() {\n        const greetingMessage = this.createChatBotMessage(\"Hello friend\");\n        this.updateChatbotState(greetingMessage)\n    }\n    chatblock1 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great! 👍`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`For this Activity, we will first Reflect on your past eating.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Next, we will decide upon a main Goal for the day and find ways to help you reach that Goal.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Finally, we will decide upon an Action to take if the urge to overindulge arises.`, {\n            delay: 8000,\n            widget: \"optionsblock2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    chatblock2 = () => {\n        const randblock = [\"Welcome back!\",\n         \"I'm glad you’re ready to create a new Plan for the day!\", \n         \"Welcome back! You've been doing great so far.\"]\n         const randblock2 = [\"Let’s jump right in and come up with a new Plan for today.\",\n          \"Let’s begin by Reflecting briefly on your past before moving forward.\", \n          \"Let's create a new Plan and see where we can do some fine tuning.\"]\n        const letsBeginMessage = \n        [this.createChatBotMessage(`This will be a random block`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This will be a random block2`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`To get started, how do you feel about what you ate in the past day?`, {\n            delay: 6000,\n            widget: \"optionsblock3\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    plangood = () => {\n        const randblock = [\"Doesn't it feel great to know that you stayed on track?\",\n         \"Nothing is as (ful)filling as staying on track!\"]\n        const letsBeginMessage = \n        [this.createChatBotMessage(`I'm happy to hear that!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This will be a random block2`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`What do you think helped you stay on track?`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`This can be something emotional like feeling positive or something physical such starting the day with a filling meal.`, {\n            delay: 8000,\n            widget: \"plangoodblock\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    plangoodjournal = () => {\n        const randblock = [\"Doesn't it feel great to know that you stayed on track?\",\n         \"Nothing is as (ful)filling as staying on track!\"]\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Can you tell me more about what helped you stay on track?`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`You can type a brief response below:`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Thanks! `, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`😁`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`I’ll save your entry in your Plan Journal so you can look back on it later.`, {\n            delay: 10000,\n            widget: \"plangoal\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    planbad = () => {\n        const randblock = [\"Welcome back!\",\n         \"I'm glad you’re ready to create a new Plan for the day!\", \n         \"Welcome back! You've been doing great so far.\"]\n         const randblock2 = [\"Let’s jump right in and come up with a new Plan for today.\",\n          \"Let’s begin by Reflecting briefly on your past before moving forward.\", \n          \"Let's create a new Plan and see where we can do some fine tuning.\"]\n        const letsBeginMessage = \n        [this.createChatBotMessage(`This will be a random block`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This will be a random block2`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`To get started, how do you feel about what you ate in the past day?`, {\n            delay: 6000,\n            widget: \"planbadblock\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n\n    plangoal = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Now that we’ve Reflected upon the past, let’s focus on moving forward.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`In general, what feels like the most important Goal for you to have today?`, {\n            delay: 4000,\n            widget: \"plangoal2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    smallerportions = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great! I can help you find ways to eat smaller amounts.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Would you prefer to stop eating when you’re full, or to choose foods that are more filling so you aren't as hungry?`, {\n            delay: 4000,\n            widget: \"smallerportions\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    stopfull = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`I know - it can be hard to stop when it tastes so good!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Sometimes we get confused by cravings and emotions and we forget to listen to our bodies.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Luckily, I've found an article that can help you learn to listen to your body again.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Read Article`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`When you’re ready, let me know and we can continue.`, {\n            delay: 10000,\n            widget: \"stopfull2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    stopfull2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Remember, your main Goal for today is to stop eating when you’re full.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Imagine how good that will feel in your body at the end of the day.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can expand on this same Goal or choose a new one.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`When you’re ready, we can move on to the Action you will take if you get a craving that doesn’t align with your Goal.`, {\n            delay: 8000,\n            widget: \"smallerportions\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    morefilling = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`That's always a great choice!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`😎`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Research shows that when we choose more filling foods, we’re less likely to overeat.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Luckily, I've located a great article that can help you find more filling foods.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`15 Filling Foods`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re done reading and we can continue.`, {\n            delay: 10000,\n            widget: \"morefilling\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    morefilling2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Remember, your main Goal for today is to choose more filling foods.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Think about what kind of filling foods you would enjoy.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Imagine how good it will feel to make these healthy choices.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can continue to work on choosing more filling foods, or we can create a new Goal for the day.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready to come up with an Action to take if the urge to overindulge strikes.`, {\n            delay: 10000,\n            widget: \"morefilling2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    lessfat = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Why do fattening foods taste so good?`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`I know, you thought I was asking a rhetorical question . . . 😉`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`But there's actually a good reason!`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Why Fat Tastes So Good WEBLINK`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`This article tells us that we can’t trick our bodies.`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`But we can choose less fattening foods that still taste great!`, {\n            delay: 12000,\n        }),\n        this.createChatBotMessage(`Here’s an article that can give you some ideas for foods that taste good and are healthy!`, {\n            delay: 14000,\n        }),\n        this.createChatBotMessage(`15 Healthy Foods `, {\n            delay: 16000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready and we can continue.`, {\n            delay: 18000,\n            widget: \"lessfat\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    lessfat2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Take some time now to reflect on your Goal of eating less fat today.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Hopefully the articles gave you some good ideas!`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can come back to eating less fattening foods, or choose a different goal for the day.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready and we can move on to your Action for today.`, {\n            delay: 8000,\n            widget: \"lessfat2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    lesssugar = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`I know it can be tough to cut down on sugar if you have a sweet tooth, but it's a great Goal for today! 😊`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Would you prefer to avoid sugar altogether, or to find healthy foods that taste sweet but are low in sugar?`, {\n            delay: 4000,\n            widget: \"lesssugar\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    avoidsugar = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Avoiding sugar altogether can be tough!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`But . . .`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`If sugar sets you off on a bad cycle, it's a great temporary goal to get you out of the habit of eating sweets.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`I've found an article that can help you transform your sugar addiction.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Sugar Addiction Tips WEBLINK`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`When you’re done reading, let me know and we can continue.`, {\n            delay: 12000,\n            widget: \"avoidsugar\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    avoidsugar2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Now that you’ve chosen avoiding sugar as your main Goal, take a moment to imagine feeling peaceful and whole without it.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can choose again to avoid sugar, or try a different Goal for the day.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready to move on to your Action for today.`, {\n            delay: 6000,\n            widget: \"avoidsugar2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    foodchoices = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Our food choices don't need to be perfect, but it's great to start out with a general plan.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`What would you like to be the main focus of your food choices for today?`, {\n            delay: 4000,\n            widget: \"foodchoices\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    sweetfoods = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great choice! 😀`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`If you’re craving sugar, I always think it's helpful to find an alternative so you don't feel deprived.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Here’s an article that will help you find sweet snacks under 50 calories.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Find Sweet Snacks WEBLINK`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re done reading and we can continue.`, {\n            delay: 10000,\n            widget: \"sweetfoods\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    sweetfoods2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Take a moment to think about what foods you’d like to eat today that taste sweet but don't have a lot of sugar.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Eating some of these foods instead of sugary foods is your main Goal for today.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can expand on this same Goal, or choose a new one for the day.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Next, we’ll make an Action plan for what to do if the urge strikes. Let me know when you’re ready to move on.`, {\n            delay: 8000,\n            widget: \"sweetfoods2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    fewercarbs = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Remember, no foods are bad, including carbohydrates.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`However, if you find that you don’t feel great when you eat too many carbs, then gradually cutting back is a great Goal!`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`So let's find some foods that make you feel better than indulging in those high in carbohydrates.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Here is a great article of great low-carb substitutes for your favorite full-carb foods!`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Low Carb Foods  WEBLINK`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`When you’re ready, let me know and we can continue.`, {\n            delay: 12000,\n            widget: \"fewercarbs\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    fewercarbs2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Take a moment to think about which foods will taste great and make you feel great too!`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Although your Goal is to eat fewer carbs, the best way to accomplish this is Goal is to focus on the foods you ‘want’ to eat, and not the foods that you don’t.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can come back to this or make a new Goal for the day.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Let me know when you are ready to move on to your Action for today.`, {\n            delay: 8000,\n            widget: \"fewercarbs2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    fewercalories = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great! Let's take a more specific look at how much less you should aim to eat.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Many people try to cut out too much, but then they fall off track and overindulge.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Instead, I recommend making small, incremental changes so you’ll be more likely to stay on track.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`This interactive article will help you find out how many calories you should consume based on your current weight.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Calorie Calculator WEBLINK`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`When you’re ready, let me know and we can continue.`, {\n            delay: 12000,\n            widget: \"fewercalories\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    fewercalories2 = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`After reading this article, take a moment to think about how you’ll accomplish your Goal of eating fewer calories, and how good that will feel.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`I don't suggest counting calories unless that's something you already do.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Instead, I recommend being mindful of your intake in general.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can come back to this or make a new Goal for the day.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`Let me know when you are ready to move on to your Action for today.`, {\n            delay: 10000,\n            widget: \"fewercalories2\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    somethingelse = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Great! It sounds like you have something else in mind, so let's work on it together.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`What would you like to be your goal for today?`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`You can type briefly below:`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Thank you for sharing! Let's work on making this Goal a reality.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`First, take a moment to visualize how nice it would feel to accomplish this Goal.`, {\n            delay: 10000,\n        }),\n        this.createChatBotMessage(`Next, take a moment to think about what you need to do differently today to accomplish this Goal.`, {\n            delay: 12000,\n        }),\n        this.createChatBotMessage(`What is it that you need to do differently? You can type briefly below:`, {\n            delay: 14000,\n        }),\n        this.createChatBotMessage(`Okay! Make sure to do what you need to do to reach that Goal.`, {\n            delay: 16000,\n        }),\n        this.createChatBotMessage(`Tomorrow, we can attempt this Goal again, or choose a new one.`, {\n            delay: 18000,\n        }),\n        this.createChatBotMessage(`Let me know when you’re ready and we can move on to your Action for today.`, {\n            delay: 20000,\n            widget: \"somethingelse\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    takeaction = () => {\n        const letsBeginMessage = \n        [this.createChatBotMessage(`Let's decide on your Action for today.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`This Action will help you quiet your mind if you feel the urge to overindulge.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`Research shows that when there’s no real need for food, cravings tend to last just a few minutes.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Distracting yourself with something positive can calm that craving.`, {\n            delay: 8000,\n        }),\n        this.createChatBotMessage(`If you feel that urge arising, which Action appeals the most to you today?`, {\n            delay: 10000,\n            widget: \"takeaction\",\n        })];\n        this.addMessageToBotState(letsBeginMessage)\n    }\n    nofoulwords() {\n        const nofoulwordsMessage = \n        [this.createChatBotMessage(`I can tell by what you just wrote that you are upset, and that is of course okay.`), \n        this.createChatBotMessage(`Sometimes our language is a genuine expression of how we feel.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`For these meditations, I have included metaphors and analogies to help you listen to your body and think about food differently.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`That being said, I work best when you just press buttons.`, {\n            delay: 6000,\n        }),\n        this.createChatBotMessage(`Please scroll up to the last place you could make a selection in order to continue.`, {\n            delay: 8000,\n        })];\n        // this.updateChatbotState(nofoulwordsMessage)\n        this.addMessageToBotState(nofoulwordsMessage)\n    }\n    emergency() {\n        const emergencyMessage = \n        [this.createChatBotMessage(`Oh no! I'm so sorry to hear that you’re feeling so badly.`), \n        this.createChatBotMessage(`Please know that however down you feel, you are never alone.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Call the National Suicide Prevention Lifeline at 1-800-273-8255 to get help.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`If your need is more urgent, PLEASE call 911 right away or go to your nearest emergency room.`, {\n            delay: 6000,\n        })];\n        // this.updateChatbotState(emergencyMessage)\n        this.addMessageToBotState(emergencyMessage)\n    }\n    findtherapist() {\n        const therapyMessage = \n        [this.createChatBotMessage(`I'm glad you’re ready to take that step!`), \n        this.createChatBotMessage(`I've located a number of therapists in your area that specialize in issues with food and eating.`, {\n            delay: 2000,\n        }),\n        this.createChatBotMessage(`Please press below and I will redirect you.`, {\n            delay: 4000,\n        }),\n        this.createChatBotMessage(`And if I can still be of help, we can continue at any time!`, {\n            delay: 6000,\n        })];\n        this.addMessageToBotState(therapyMessage)\n        // this.createChatBotMessage(\"I'm glad you’re ready to take that step!\");\n        // this.updateChatbotState(therapyMessage)\n    }\n    updateChatbotState(message) {\n \n        // NOTE: This function is set in the constructor, and is passed in      \n        // from the top level Chatbot component. The setState function here     \n        // actually manipulates the top level state of the Chatbot, so it's     \n        // important that we make sure that we preserve the previous state.\n         \n            \n           this.setState(prevState => ({\n                ...prevState, messages: [...prevState.messages, message]\n            }))\n          }\n    addMessageToBotState = (messages) => {\n            if (Array.isArray(messages)) {\n              this.setState((prevState) => ({\n                ...prevState,\n                messages: [...prevState.messages, ...messages],\n              }));\n            } else {\n              this.setState((prevState) => ({\n                ...prevState,\n                messages: [...prevState.messages, messages],\n              }));\n            }\n          };\n  }\n  \n  export default ActionProvider;\n","/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/plan/config.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/AreyouReady.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/layout/Plan2.js",[],"/Users/ncevallos/Documents/Apps/bea/client/src/components/chatbots/motivate/AfterEatingFeel.js",[],{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"302","replacedBy":"306"},{"ruleId":"304","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":13},{"ruleId":"302","replacedBy":"312"},{"ruleId":"304","replacedBy":"313"},{"ruleId":"302","replacedBy":"314"},{"ruleId":"304","replacedBy":"315"},{"ruleId":"308","severity":1,"message":"316","line":4,"column":10,"nodeType":"310","messageId":"311","endLine":4,"endColumn":17},{"ruleId":"308","severity":1,"message":"317","line":5,"column":8,"nodeType":"310","messageId":"311","endLine":5,"endColumn":17},{"ruleId":"318","severity":1,"message":"319","line":37,"column":170,"nodeType":"320","endLine":37,"endColumn":191},{"ruleId":"318","severity":1,"message":"319","line":34,"column":167,"nodeType":"320","endLine":34,"endColumn":188},{"ruleId":"321","severity":1,"message":"322","line":20,"column":1,"nodeType":"323","endLine":79,"endColumn":2},{"ruleId":"308","severity":1,"message":"324","line":3,"column":8,"nodeType":"310","messageId":"311","endLine":3,"endColumn":20},{"ruleId":"308","severity":1,"message":"325","line":4,"column":8,"nodeType":"310","messageId":"311","endLine":4,"endColumn":18},{"ruleId":"308","severity":1,"message":"326","line":5,"column":8,"nodeType":"310","messageId":"311","endLine":5,"endColumn":22},{"ruleId":"308","severity":1,"message":"327","line":1,"column":8,"nodeType":"310","messageId":"311","endLine":1,"endColumn":13},{"ruleId":"302","replacedBy":"328"},{"ruleId":"304","replacedBy":"329"},{"ruleId":"302","replacedBy":"330"},{"ruleId":"304","replacedBy":"331"},{"ruleId":"302","replacedBy":"332"},{"ruleId":"304","replacedBy":"333"},{"ruleId":"308","severity":1,"message":"334","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":25},{"ruleId":"321","severity":1,"message":"322","line":5,"column":1,"nodeType":"323","endLine":16,"endColumn":2},{"ruleId":"308","severity":1,"message":"335","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":21},{"ruleId":"308","severity":1,"message":"336","line":3,"column":16,"nodeType":"310","messageId":"311","endLine":3,"endColumn":21},{"ruleId":"308","severity":1,"message":"337","line":6,"column":19,"nodeType":"310","messageId":"311","endLine":6,"endColumn":27},{"ruleId":"308","severity":1,"message":"338","line":7,"column":18,"nodeType":"310","messageId":"311","endLine":7,"endColumn":25},{"ruleId":"308","severity":1,"message":"339","line":8,"column":12,"nodeType":"310","messageId":"311","endLine":8,"endColumn":19},{"ruleId":"308","severity":1,"message":"340","line":8,"column":21,"nodeType":"310","messageId":"311","endLine":8,"endColumn":31},{"ruleId":"302","replacedBy":"341"},{"ruleId":"304","replacedBy":"342"},{"ruleId":"308","severity":1,"message":"343","line":4,"column":8,"nodeType":"310","messageId":"311","endLine":4,"endColumn":12},{"ruleId":"308","severity":1,"message":"344","line":5,"column":8,"nodeType":"310","messageId":"311","endLine":5,"endColumn":25},{"ruleId":"308","severity":1,"message":"345","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":14},{"ruleId":"308","severity":1,"message":"346","line":1,"column":27,"nodeType":"310","messageId":"311","endLine":1,"endColumn":36},{"ruleId":"308","severity":1,"message":"347","line":20,"column":10,"nodeType":"310","messageId":"311","endLine":20,"endColumn":16},{"ruleId":"308","severity":1,"message":"348","line":24,"column":10,"nodeType":"310","messageId":"311","endLine":24,"endColumn":18},{"ruleId":"308","severity":1,"message":"325","line":4,"column":9,"nodeType":"310","messageId":"311","endLine":4,"endColumn":19},{"ruleId":"308","severity":1,"message":"326","line":5,"column":8,"nodeType":"310","messageId":"311","endLine":5,"endColumn":22},{"ruleId":"308","severity":1,"message":"327","line":1,"column":8,"nodeType":"310","messageId":"311","endLine":1,"endColumn":13},{"ruleId":"308","severity":1,"message":"349","line":32,"column":15,"nodeType":"310","messageId":"311","endLine":32,"endColumn":24},{"ruleId":"308","severity":1,"message":"350","line":35,"column":16,"nodeType":"310","messageId":"311","endLine":35,"endColumn":26},{"ruleId":"308","severity":1,"message":"349","line":52,"column":15,"nodeType":"310","messageId":"311","endLine":52,"endColumn":24},{"ruleId":"308","severity":1,"message":"349","line":71,"column":15,"nodeType":"310","messageId":"311","endLine":71,"endColumn":24},{"ruleId":"308","severity":1,"message":"349","line":93,"column":15,"nodeType":"310","messageId":"311","endLine":93,"endColumn":24},{"ruleId":"308","severity":1,"message":"350","line":96,"column":16,"nodeType":"310","messageId":"311","endLine":96,"endColumn":26},"no-native-reassign",["351"],"no-negated-in-lhs",["352"],["351"],["352"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar",["351"],["352"],["351"],["352"],"'connect' is defined but never used.","'PropTypes' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Testpopuptwo' is defined but never used.","'Videomodal' is defined but never used.","'Videoselection' is defined but never used.","'React' is defined but never used.",["351"],["352"],["351"],["352"],["351"],["352"],"'Fragment' is defined but never used.","'FacebookLogin' is defined but never used.","'Image' is defined but never used.","'setLogin' is assigned a value but never used.","'setData' is assigned a value but never used.","'picture' is assigned a value but never used.","'setPicture' is assigned a value but never used.",["351"],["352"],"'wave' is defined but never used.","'meditateIconLarge' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'LOGOUT' is defined but never used.","'loadUser' is defined but never used.","'randblock' is assigned a value but never used.","'randblock2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> Stashed changes
